[
    {
        "page": 0,
        "index": 0,
        "bbox": [
            16.34,
            480.86,
            36.34,
            581.96
        ],
        "prefix": "",
        "content": "4 2 0 2 r Ap 3 2 ",
        "suffix": "2 0 2",
        "equation hit": "() = q,",
        "assigned": false,
        "matches": [
            [
                128,
                0.40625,
                null,
                null
            ],
            [
                18,
                0.3333333333333333,
                null,
                null
            ],
            [
                84,
                0.32786885245901637,
                null,
                null
            ],
            [
                61,
                0.29850746268656714,
                null,
                null
            ],
            [
                133,
                0.29411764705882354,
                null,
                null
            ],
            [
                83,
                0.2692307692307692,
                null,
                null
            ],
            [
                57,
                0.2535211267605634,
                null,
                null
            ],
            [
                36,
                0.24489795918367346,
                null,
                null
            ],
            [
                21,
                0.24390243902439024,
                null,
                null
            ],
            [
                31,
                0.24,
                null,
                null
            ],
            [
                49,
                0.23728813559322035,
                null,
                null
            ],
            [
                2,
                0.22950819672131148,
                null,
                null
            ],
            [
                70,
                0.2222222222222222,
                null,
                null
            ],
            [
                139,
                0.21978021978021978,
                null,
                null
            ],
            [
                98,
                0.21875,
                null,
                null
            ],
            [
                100,
                0.21875,
                null,
                null
            ],
            [
                101,
                0.21739130434782608,
                null,
                null
            ],
            [
                72,
                0.21505376344086022,
                null,
                null
            ],
            [
                59,
                0.20754716981132076,
                null,
                null
            ],
            [
                15,
                0.1978021978021978,
                null,
                null
            ],
            [
                67,
                0.1935483870967742,
                null,
                null
            ],
            [
                99,
                0.1875,
                null,
                null
            ],
            [
                76,
                0.17857142857142858,
                null,
                null
            ],
            [
                94,
                0.17777777777777778,
                null,
                null
            ],
            [
                103,
                0.17777777777777778,
                null,
                null
            ],
            [
                138,
                0.17475728155339806,
                null,
                null
            ],
            [
                63,
                0.174496644295302,
                null,
                null
            ],
            [
                9,
                0.17391304347826086,
                null,
                null
            ],
            [
                29,
                0.16326530612244897,
                null,
                null
            ],
            [
                17,
                0.16216216216216217,
                null,
                null
            ],
            [
                30,
                0.16,
                null,
                null
            ],
            [
                60,
                0.15789473684210525,
                null,
                null
            ],
            [
                127,
                0.14285714285714285,
                null,
                null
            ],
            [
                122,
                0.13793103448275862,
                null,
                null
            ],
            [
                68,
                0.13333333333333333,
                null,
                null
            ],
            [
                69,
                0.13114754098360656,
                null,
                null
            ],
            [
                144,
                0.12903225806451613,
                null,
                null
            ],
            [
                74,
                0.12121212121212122,
                null,
                null
            ],
            [
                71,
                0.11494252873563218,
                null,
                null
            ],
            [
                62,
                0.11428571428571428,
                null,
                null
            ],
            [
                56,
                0.1111111111111111,
                null,
                null
            ],
            [
                65,
                0.10752688172043011,
                null,
                null
            ],
            [
                44,
                0.10050251256281408,
                null,
                null
            ],
            [
                86,
                0.1,
                null,
                null
            ],
            [
                16,
                0.09090909090909091,
                null,
                null
            ],
            [
                12,
                0.08695652173913043,
                null,
                null
            ],
            [
                28,
                0.08695652173913043,
                null,
                null
            ],
            [
                142,
                0.08333333333333333,
                null,
                null
            ],
            [
                13,
                0.08163265306122448,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 1,
        "bbox": [
            16.34,
            449.76,
            36.34,
            470.86
        ],
        "prefix": "",
        "content": "] V ",
        "suffix": "",
        "equation hit": "() = q,",
        "assigned": false,
        "matches": [
            [
                86,
                0.2857142857142857,
                null,
                null
            ],
            [
                132,
                0.26666666666666666,
                null,
                null
            ],
            [
                9,
                0.2,
                null,
                null
            ],
            [
                142,
                0.18181818181818182,
                null,
                null
            ],
            [
                30,
                0.16666666666666666,
                null,
                null
            ],
            [
                31,
                0.16666666666666666,
                null,
                null
            ],
            [
                21,
                0.14285714285714285,
                null,
                null
            ],
            [
                127,
                0.13333333333333333,
                null,
                null
            ],
            [
                70,
                0.125,
                null,
                null
            ],
            [
                122,
                0.125,
                null,
                null
            ],
            [
                12,
                0.12121212121212122,
                null,
                null
            ],
            [
                101,
                0.12121212121212122,
                null,
                null
            ],
            [
                88,
                0.11428571428571428,
                null,
                null
            ],
            [
                29,
                0.1111111111111111,
                null,
                null
            ],
            [
                36,
                0.1111111111111111,
                null,
                null
            ],
            [
                144,
                0.1111111111111111,
                null,
                null
            ],
            [
                83,
                0.10256410256410256,
                null,
                null
            ],
            [
                58,
                0.1,
                null,
                null
            ],
            [
                133,
                0.09523809523809523,
                null,
                null
            ],
            [
                25,
                0.09090909090909091,
                null,
                null
            ],
            [
                62,
                0.09090909090909091,
                null,
                null
            ],
            [
                92,
                0.09090909090909091,
                null,
                null
            ],
            [
                49,
                0.08695652173913043,
                null,
                null
            ],
            [
                56,
                0.08695652173913043,
                null,
                null
            ],
            [
                2,
                0.08333333333333333,
                null,
                null
            ],
            [
                17,
                0.08333333333333333,
                null,
                null
            ],
            [
                84,
                0.08333333333333333,
                null,
                null
            ],
            [
                67,
                0.08163265306122448,
                null,
                null
            ],
            [
                60,
                0.08,
                null,
                null
            ],
            [
                98,
                0.0784313725490196,
                null,
                null
            ],
            [
                100,
                0.0784313725490196,
                null,
                null
            ],
            [
                128,
                0.0784313725490196,
                null,
                null
            ],
            [
                139,
                0.07692307692307693,
                null,
                null
            ],
            [
                18,
                0.07547169811320754,
                null,
                null
            ],
            [
                61,
                0.07407407407407407,
                null,
                null
            ],
            [
                57,
                0.06896551724137931,
                null,
                null
            ],
            [
                94,
                0.0625,
                null,
                null
            ],
            [
                103,
                0.0625,
                null,
                null
            ],
            [
                68,
                0.05194805194805195,
                null,
                null
            ],
            [
                15,
                0.05128205128205128,
                null,
                null
            ],
            [
                72,
                0.05,
                null,
                null
            ],
            [
                99,
                0.04819277108433735,
                null,
                null
            ],
            [
                138,
                0.044444444444444446,
                null,
                null
            ],
            [
                59,
                0.043010752688172046,
                null,
                null
            ],
            [
                76,
                0.04040404040404041,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                3,
                0,
                null,
                null
            ],
            [
                106,
                0,
                null,
                null
            ],
            [
                117,
                0,
                null,
                null
            ],
            [
                73,
                0,
                null,
                null
            ],
            [
                14,
                0,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ],
            [
                81,
                0,
                null,
                null
            ],
            [
                97,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 2,
        "bbox": [
            16.34,
            436.41999999999996,
            36.34,
            449.75999999999993
        ],
        "prefix": "V ",
        "content": "C ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 3,
        "bbox": [
            16.34,
            431.41999999999996,
            36.34,
            436.41999999999996
        ],
        "prefix": "",
        "content": ". ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                1.0,
                49,
                51
            ]
        ]
    },
    {
        "page": 0,
        "index": 4,
        "bbox": [
            16.34,
            423.64,
            36.34,
            431.41999999999996
        ],
        "prefix": "",
        "content": "s ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                1.0,
                605,
                607
            ]
        ]
    },
    {
        "page": 0,
        "index": 5,
        "bbox": [
            16.34,
            408.1,
            36.34,
            423.64
        ],
        "prefix": "",
        "content": "[c ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                73,
                0.11428571428571428,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 6,
        "bbox": [
            16.34,
            277.54,
            36.34,
            398.1
        ],
        "prefix": "",
        "content": "1 v 4 4 2 5 1 4 0 4 2 : ",
        "suffix": "v 4 4 2 5 1",
        "equation hit": "= (1) .",
        "assigned": true,
        "matches": [
            [
                20,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 7,
        "bbox": [
            16.34,
            323.1,
            36.34,
            328.1
        ],
        "prefix": "",
        "content": ". ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                20,
                1.0,
                53,
                55
            ]
        ]
    },
    {
        "page": 0,
        "index": 8,
        "bbox": [
            16.34,
            267.54,
            36.34,
            277.54
        ],
        "prefix": "",
        "content": "v ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 9,
        "bbox": [
            16.34,
            261.98,
            36.34,
            267.54
        ],
        "prefix": "",
        "content": "i ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                1.0,
                640,
                642
            ]
        ]
    },
    {
        "page": 0,
        "index": 10,
        "bbox": [
            16.34,
            247.54,
            36.34,
            261.98
        ],
        "prefix": "",
        "content": "X ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                1.0,
                607,
                609
            ]
        ]
    },
    {
        "page": 0,
        "index": 11,
        "bbox": [
            16.34,
            240.88,
            36.34,
            247.54
        ],
        "prefix": "",
        "content": "r ",
        "suffix": "a",
        "equation hit": "() = q,",
        "assigned": true,
        "matches": [
            [
                69,
                0.023809523809523808,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 12,
        "bbox": [
            16.34,
            232.0,
            36.34,
            240.88
        ],
        "prefix": "r ",
        "content": "a ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.0007517195964887862,
                83,
                85
            ]
        ]
    },
    {
        "page": 0,
        "index": 13,
        "bbox": [
            87.322,
            568.3568372,
            326.53340804000004,
            582.7030372
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for ",
        "suffix": "Mask2Formerstyle",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                0,
                1.0,
                0,
                35
            ]
        ]
    },
    {
        "page": 0,
        "index": 14,
        "bbox": [
            114.30600000000001,
            550.4238372,
            299.55130750000006,
            564.7700372
        ],
        "prefix": "for ",
        "content": "Mask2Formerstyle models ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                0,
                0.6666666666666666,
                0,
                23
            ]
        ]
    },
    {
        "page": 0,
        "index": 15,
        "bbox": [
            59.40500000000001,
            516.6422556,
            354.45261402,
            527.4203500000001
        ],
        "prefix": "",
        "content": "Manyi Yao2, Abhishek Aich1, Yumin Suh1, Amit RoyChowdhury2, ",
        "suffix": "Christian",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                1,
                1.0,
                1,
                61
            ]
        ]
    },
    {
        "page": 0,
        "index": 16,
        "bbox": [
            96.71499999999997,
            504.68625560000004,
            316.64557909999996,
            515.4653500000001
        ],
        "prefix": "RoyChowdhury2, ",
        "content": "Christian Shelton2, and Manmohan Chandraker1,3 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                1,
                0.601865902775038,
                1,
                44
            ]
        ]
    },
    {
        "page": 0,
        "index": 17,
        "bbox": [
            92.22899999999998,
            483.9995184,
            321.6321711999999,
            494.3659456
        ],
        "prefix": "",
        "content": "1 NEC Laboratories, America, San Jose CA 95110, USA ",
        "suffix": "2",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                0.6049787068367863,
                34,
                80
            ]
        ]
    },
    {
        "page": 0,
        "index": 18,
        "bbox": [
            99.00999999999998,
            473.0405184,
            314.8460079999999,
            483.4069456
        ],
        "prefix": "USA ",
        "content": "2 University of California, Riverside, CA 92521, USA ",
        "suffix": "3",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                0.5030197383422319,
                39,
                86
            ]
        ]
    },
    {
        "page": 0,
        "index": 19,
        "bbox": [
            97.12799999999999,
            462.0815184,
            316.72720607999986,
            472.44794559999997
        ],
        "prefix": "USA ",
        "content": "3 University of California, San Diego, CA 92093, USA ",
        "suffix": "Corresponding",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                0.6363661396772137,
                137,
                188
            ]
        ]
    },
    {
        "page": 0,
        "index": 20,
        "bbox": [
            117.553,
            450.87145919999995,
            296.30934048,
            460.08891839999995
        ],
        "prefix": "USA ",
        "content": "Corresponding author: aaich@neclabs.com ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                188,
                227
            ]
        ]
    },
    {
        "page": 0,
        "index": 21,
        "bbox": [
            62.36200000000002,
            411.6875184,
            351.49300032,
            420.65391839999995
        ],
        "prefix": "",
        "content": "Abstract. Vision transformer based models bring significant improve",
        "suffix": "ments",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.875,
                0,
                63
            ]
        ]
    },
    {
        "page": 0,
        "index": 22,
        "bbox": [
            62.36200000000002,
            400.7285184,
            351.4988108799999,
            409.69491839999995
        ],
        "prefix": "improve",
        "content": "ments for image segmentation tasks. Although these architectures of",
        "suffix": "fer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                63,
                128
            ]
        ]
    },
    {
        "page": 0,
        "index": 23,
        "bbox": [
            62.36200000000002,
            389.7695184,
            351.4970175999998,
            398.73591839999995
        ],
        "prefix": "of",
        "content": "fer powerful capabilities irrespective of specific segmentation tasks, their ",
        "suffix": "use",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.8082084998623899,
                0,
                73
            ]
        ]
    },
    {
        "page": 0,
        "index": 24,
        "bbox": [
            62.36200000000002,
            378.8105184,
            351.49522432000003,
            387.77691839999994
        ],
        "prefix": "their ",
        "content": "use of computational resources can be taxing on deployed devices. One ",
        "suffix": "way",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                136,
                206
            ]
        ]
    },
    {
        "page": 0,
        "index": 25,
        "bbox": [
            62.36200000000002,
            367.8515184,
            351.49612096,
            376.81791839999994
        ],
        "prefix": "One ",
        "content": "way to overcome this challenge is by adapting the computation level ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.8524680768172229,
                0,
                68
            ]
        ]
    },
    {
        "page": 0,
        "index": 26,
        "bbox": [
            62.36200000000002,
            356.8925184,
            351.4970175999999,
            365.85891839999994
        ],
        "prefix": "level ",
        "content": "to the specific needs of the input image rather than the current one",
        "suffix": "sizefitsall",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                204,
                284
            ]
        ]
    },
    {
        "page": 0,
        "index": 27,
        "bbox": [
            62.36200000000002,
            345.6824591999999,
            351.50048735999997,
            354.89991839999993
        ],
        "prefix": "one",
        "content": "sizefitsall approach. To this end, we introduce ECOM2F or EffiCient ",
        "suffix": "TransfOrmer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.7607163128337675,
                0,
                55
            ]
        ]
    },
    {
        "page": 0,
        "index": 28,
        "bbox": [
            62.361999999999966,
            334.97451839999997,
            351.4930272,
            343.94091839999993
        ],
        "prefix": "EffiCient ",
        "content": "TransfOrmer Encoders for Mask2Formerstyle models. Noting that the ",
        "suffix": "encoder",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.8,
                0,
                66
            ]
        ]
    },
    {
        "page": 0,
        "index": 29,
        "bbox": [
            62.361999999999995,
            324.01551839999996,
            351.49163775999995,
            332.9819183999999
        ],
        "prefix": "the ",
        "content": "encoder module of M2Fstyle models incur high resourceintensive com",
        "suffix": "putations,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                325,
                402
            ]
        ]
    },
    {
        "page": 0,
        "index": 30,
        "bbox": [
            62.361999999999995,
            312.8054591999999,
            351.4938096000001,
            322.0229183999999
        ],
        "prefix": "com",
        "content": "putations, ECOM2F provides a strategy to selfselect the number of hid",
        "suffix": "den",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.7607163128337675,
                6,
                61
            ]
        ]
    },
    {
        "page": 0,
        "index": 31,
        "bbox": [
            62.36200000000001,
            302.09851839999993,
            351.49253439999995,
            311.0649183999999
        ],
        "prefix": "hid",
        "content": "den layers in the encoder, conditioned on the input image. To enable ",
        "suffix": "this",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                386,
                451
            ]
        ]
    },
    {
        "page": 0,
        "index": 32,
        "bbox": [
            62.36200000000001,
            291.13951839999993,
            351.49253439999984,
            300.1059183999999
        ],
        "prefix": "enable ",
        "content": "this selfselection ability for providing a balance between performance ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.7825485544459645,
                6,
                77
            ]
        ]
    },
    {
        "page": 0,
        "index": 33,
        "bbox": [
            62.36200000000001,
            280.1805183999999,
            351.49611456,
            289.1469183999999
        ],
        "prefix": "performance ",
        "content": "and computational efficiency, we present a three step recipe. The first ",
        "suffix": "step",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.9697331276702026,
                457,
                529
            ]
        ]
    },
    {
        "page": 0,
        "index": 34,
        "bbox": [
            62.36200000000002,
            269.2215183999999,
            351.49343103999985,
            278.1879183999999
        ],
        "prefix": "first ",
        "content": "step is to train the parent architecture to enable early exiting from the ",
        "suffix": "encoder.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.9071020439808422,
                6,
                80
            ]
        ]
    },
    {
        "page": 0,
        "index": 35,
        "bbox": [
            62.36200000000002,
            258.2625183999999,
            351.49672991999995,
            267.2289183999999
        ],
        "prefix": "the ",
        "content": "encoder. The second step is to create an derived dataset of the ideal num",
        "suffix": "ber",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.9071020439808422,
                6,
                83
            ]
        ]
    },
    {
        "page": 0,
        "index": 36,
        "bbox": [
            62.36200000000001,
            247.3035183999999,
            351.49561792,
            256.2699183999999
        ],
        "prefix": "num",
        "content": "ber of encoder layers required for each training example. The third step ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.9233912901106511,
                608,
                677
            ]
        ]
    },
    {
        "page": 0,
        "index": 37,
        "bbox": [
            62.36200000000002,
            236.34451839999988,
            351.4925343999999,
            245.31091839999988
        ],
        "prefix": "step ",
        "content": "is to use the aforementioned derived dataset to train a gating network ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.829037904265188,
                6,
                77
            ]
        ]
    },
    {
        "page": 0,
        "index": 38,
        "bbox": [
            62.36200000000002,
            225.38551839999988,
            351.49881087999984,
            234.35191839999987
        ],
        "prefix": "network ",
        "content": "that predicts the number of encoder layers to be used, conditioned on ",
        "suffix": "input",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                679,
                749
            ]
        ]
    },
    {
        "page": 0,
        "index": 39,
        "bbox": [
            62.36200000000002,
            214.42651839999988,
            351.4925343999999,
            223.39291839999987
        ],
        "prefix": "on ",
        "content": "input image. Additionally, to change the computationalaccuracy trade",
        "suffix": "off,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.8451700733014037,
                6,
                79
            ]
        ]
    },
    {
        "page": 0,
        "index": 40,
        "bbox": [
            62.36200000000002,
            203.46751839999988,
            351.49343103999996,
            212.43391839999987
        ],
        "prefix": "trade",
        "content": "off, only steps two and three need to be repeated which significantly re",
        "suffix": "duces",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.8928100507471256,
                6,
                79
            ]
        ]
    },
    {
        "page": 0,
        "index": 41,
        "bbox": [
            62.36200000000002,
            192.50951839999988,
            351.4961209599999,
            201.47591839999987
        ],
        "prefix": "re",
        "content": "duces retraining time. Experiments on the public datasets show that the ",
        "suffix": "proposed",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                825,
                891
            ]
        ]
    },
    {
        "page": 0,
        "index": 42,
        "bbox": [
            62.36200000000002,
            181.55051839999987,
            351.5006041599999,
            190.51691839999987
        ],
        "prefix": "the ",
        "content": "proposed approach reduces expected encoder computational cost while ",
        "suffix": "maintaining",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.9000911881965553,
                825,
                893
            ]
        ]
    },
    {
        "page": 0,
        "index": 43,
        "bbox": [
            62.36200000000002,
            170.59151839999987,
            351.49701759999994,
            179.55791839999986
        ],
        "prefix": "while ",
        "content": "maintaining performance, adapts to various user compute resources, is ",
        "suffix": "flexible",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.7824118781556938,
                6,
                76
            ]
        ]
    },
    {
        "page": 0,
        "index": 44,
        "bbox": [
            62.36200000000002,
            159.63251839999987,
            351.49701759999994,
            168.59891839999986
        ],
        "prefix": "is ",
        "content": "flexible in architecture configurations, and can be extended beyond the ",
        "suffix": "segmentation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                1.0,
                895,
                967
            ]
        ]
    },
    {
        "page": 0,
        "index": 45,
        "bbox": [
            62.36200000000002,
            148.67351839999986,
            216.80017023999997,
            157.63991839999986
        ],
        "prefix": "the ",
        "content": "segmentation task to object detection. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.7677551099521055,
                6,
                44
            ]
        ]
    },
    {
        "page": 0,
        "index": 46,
        "bbox": [
            34.01600000000002,
            114.88469119999986,
            128.18471936,
            126.83989119999987
        ],
        "prefix": "",
        "content": "1 Introduction ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                4,
                0.5,
                0,
                12
            ]
        ]
    },
    {
        "page": 0,
        "index": 47,
        "bbox": [
            34.01600000000002,
            91.85925559999986,
            379.84570508000013,
            101.82185559999986
        ],
        "prefix": "",
        "content": "With the advent of powerful universal image segmentation architectures [5,6,11, ",
        "suffix": "16],",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 48,
        "bbox": [
            34.01600000000002,
            79.90425559999986,
            379.84075998,
            89.86685559999987
        ],
        "prefix": "[5,6,11, ",
        "content": "16], it is highly desirable to prioritize the computational efficiency of these archi",
        "suffix": "tectures",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 49,
        "bbox": [
            34.01600000000002,
            67.94825559999985,
            379.8469534,
            77.91085559999986
        ],
        "prefix": "archi",
        "content": "tectures for their enhanced scalability, e.g., use on resourcelimited edge devices. ",
        "suffix": "These",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.7206096031616311,
                161,
                235
            ]
        ]
    },
    {
        "page": 0,
        "index": 50,
        "bbox": [
            34.01599999999999,
            55.99325559999986,
            379.8387674600002,
            65.95585559999986
        ],
        "prefix": "devices. ",
        "content": "These architectures are extremely useful in tackling instance [12], semantic [29], ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 51,
        "bbox": [
            34.01599999999999,
            44.038255599999864,
            379.8437487600001,
            54.00085559999986
        ],
        "prefix": "[29], ",
        "content": "and panoptic [19] segmentation tasks using one generalized architecture, owing ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.662040858773869,
                234,
                308
            ]
        ]
    },
    {
        "page": 0,
        "index": 52,
        "bbox": [
            34.01599999999999,
            32.083255599999866,
            379.8427525000001,
            42.04585559999986
        ],
        "prefix": "owing ",
        "content": "to the transformerbased [31] modules. These universal architectures leverage ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.6606531164060295,
                234,
                306
            ]
        ]
    },
    {
        "page": 1,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04233152000002,
            604.2699184
        ],
        "prefix": "",
        "content": "2 M. Yao et al. ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                3,
                0.18181818181818182,
                null,
                null
            ]
        ]
    },
    {
        "page": 1,
        "index": 1,
        "bbox": [
            34.01599999999998,
            440.2925184,
            258.80449503999995,
            515.0119184
        ],
        "prefix": "decoder, ",
        "content": "and (our proposed) gating network, respectively. ventional M2Fstyle architecture that provides ''onesizefitsall'' solution, our method ECOM2F focuses on training such models in order to directly run at various resource encoder depths by leveraging a gating function. Here, B, E, D, and G denote the backbone, encoder, decoder, Fig. 1: Comparison to prior works. Instead of con",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                5,
                0.7245901639344262,
                null,
                null
            ]
        ]
    },
    {
        "page": 1,
        "index": 2,
        "bbox": [
            276.093,
            443.15451840000003,
            379.84500768000004,
            484.9979184
        ],
        "prefix": "",
        "content": "Fig. 2: Histogram of images achieving best panoptic segmentation by number of encoder layers. ",
        "suffix": "images",
        "equation hit": ", ℓ̃ = h∘f∘⋯∘f2∘f1∘b() .",
        "assigned": true,
        "matches": [
            [
                8,
                0.5333333333333333,
                null,
                null
            ]
        ]
    },
    {
        "page": 1,
        "index": 3,
        "bbox": [
            34.01600000000002,
            403.58025560000004,
            379.84229156000004,
            413.54285560000005
        ],
        "prefix": "",
        "content": "DEtection TRansformers or DETRstyle [2] modules and represent both stuff ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.7824118781556938,
                234,
                303
            ]
        ]
    },
    {
        "page": 1,
        "index": 4,
        "bbox": [
            34.01600000000002,
            391.62525560000006,
            379.8410216400001,
            401.58785560000007
        ],
        "prefix": "stuff ",
        "content": "and things categories [19] using general feature tokens. This is an incredible ",
        "suffix": "advantage",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.9004664756937595,
                523,
                597
            ]
        ]
    },
    {
        "page": 1,
        "index": 5,
        "bbox": [
            34.01600000000001,
            379.6702556000001,
            379.84275250000013,
            389.6328556000001
        ],
        "prefix": "incredible ",
        "content": "advantage over preceding segmentation methods [15,26,40] in literature that re",
        "suffix": "quire",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.6915028330963905,
                234,
                307
            ]
        ]
    },
    {
        "page": 1,
        "index": 6,
        "bbox": [
            34.01600000000001,
            367.71425560000006,
            379.8427525000001,
            377.67685560000007
        ],
        "prefix": "re",
        "content": "quire careful considerations in design specifications. Hence, these segmentation ",
        "suffix": "architectures",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                1.0,
                596,
                671
            ]
        ]
    },
    {
        "page": 1,
        "index": 7,
        "bbox": [
            34.01600000000001,
            355.7592556000001,
            379.8427524999999,
            365.7218556000001
        ],
        "prefix": "segmentation ",
        "content": "architectures reduce the need for taskspecific choices which favor performance ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.9235070832186582,
                596,
                675
            ]
        ]
    },
    {
        "page": 1,
        "index": 8,
        "bbox": [
            34.01600000000001,
            343.8042556000001,
            162.77961622,
            353.7668556000001
        ],
        "prefix": "performance ",
        "content": "of one task over the other [5]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.6229479071178106,
                234,
                262
            ]
        ]
    },
    {
        "page": 1,
        "index": 9,
        "bbox": [
            48.960000000000015,
            331.5532556000001,
            379.84683754,
            341.5158556000001
        ],
        "prefix": "",
        "content": "Stateoftheart models for universal segmentation like Mask2former (M2F) ",
        "suffix": "[5]",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.9,
                0,
                71
            ]
        ]
    },
    {
        "page": 1,
        "index": 10,
        "bbox": [
            34.01600000000001,
            319.59825560000013,
            379.8377712000002,
            329.56085560000014
        ],
        "prefix": "(M2F) ",
        "content": "[5] are built on the key idea inspired from DETR: ''mask'' classification is versatile ",
        "suffix": "enough",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.7894736842105263,
                0,
                83
            ]
        ]
    },
    {
        "page": 1,
        "index": 11,
        "bbox": [
            34.01600000000001,
            307.64325560000015,
            379.83876746000004,
            317.60585560000015
        ],
        "prefix": "versatile ",
        "content": "enough to address both semantic and instancelevel segmentation tasks. How",
        "suffix": "ever,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                1.0,
                83,
                162
            ]
        ]
    },
    {
        "page": 1,
        "index": 12,
        "bbox": [
            34.01600000000001,
            295.68825560000016,
            379.8437487599999,
            305.65085560000017
        ],
        "prefix": "How",
        "content": "ever, the problem of efficient M2Fstyle architectures have been underexplored. ",
        "suffix": "With",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.9090909090909091,
                0,
                73
            ]
        ]
    },
    {
        "page": 1,
        "index": 13,
        "bbox": [
            34.01600000000001,
            283.7332556000002,
            379.83870004,
            293.6958556000002
        ],
        "prefix": "underexplored. ",
        "content": "With backbone architectures (e.g., Resnet50 [13], SWINTiny [22]), [20] showed ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.3703027245911274,
                0,
                63
            ]
        ]
    },
    {
        "page": 1,
        "index": 14,
        "bbox": [
            34.01600000000002,
            271.77725560000016,
            379.84673754,
            281.73985560000017
        ],
        "prefix": "showed ",
        "content": "that DETRstyle models incur the highest computations from the transformer ",
        "suffix": "encoder",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                1.0,
                219,
                293
            ]
        ]
    },
    {
        "page": 1,
        "index": 15,
        "bbox": [
            34.01600000000002,
            259.8222556000002,
            379.84175624000005,
            269.7848556000002
        ],
        "prefix": "transformer ",
        "content": "encoder due to maintaining full length token representations from multiscale ",
        "suffix": "backbone",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.8338948289165904,
                63,
                140
            ]
        ]
    },
    {
        "page": 1,
        "index": 16,
        "bbox": [
            34.01600000000002,
            247.86725560000016,
            379.8417562400002,
            257.82985560000014
        ],
        "prefix": "multiscale ",
        "content": "backbone features. While existing works like [20, 24] primarily focus on scaling ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.6625591235932091,
                63,
                135
            ]
        ]
    },
    {
        "page": 1,
        "index": 17,
        "bbox": [
            34.01600000000002,
            235.91225560000015,
            379.8447450200001,
            245.87485560000013
        ],
        "prefix": "scaling ",
        "content": "the input token to improve efficiency, this approach often neglects other aspects ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                1.0,
                368,
                450
            ]
        ]
    },
    {
        "page": 1,
        "index": 18,
        "bbox": [
            34.01600000000002,
            223.95725560000014,
            379.8377712000002,
            233.91985560000012
        ],
        "prefix": "aspects ",
        "content": "of model optimization and leads to a ''onesizefitsall'' solution (Figure 1). This ",
        "suffix": "limitation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.6690951404806192,
                63,
                144
            ]
        ]
    },
    {
        "page": 1,
        "index": 19,
        "bbox": [
            34.01600000000002,
            212.00225560000013,
            336.44267812000004,
            221.9648556000001
        ],
        "prefix": "This ",
        "content": "limitation leaves significant room for further efficiency improvements. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                1.0,
                449,
                520
            ]
        ]
    },
    {
        "page": 1,
        "index": 20,
        "bbox": [
            48.96000000000002,
            199.75125560000012,
            379.84384875999996,
            209.7138556000001
        ],
        "prefix": "",
        "content": "Given this growing importance of M2Fstyle architectures and indispensable ",
        "suffix": "need",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                1.0,
                0,
                74
            ]
        ]
    },
    {
        "page": 1,
        "index": 21,
        "bbox": [
            34.01600000000002,
            187.5173028000001,
            379.8397313200001,
            197.7588556000001
        ],
        "prefix": "indispensable ",
        "content": "need for efficiency for realworld deployment, we introduce ECOM2F or 'EffiCient ",
        "suffix": "TransfOrmer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.7405628172265316,
                0,
                79
            ]
        ]
    },
    {
        "page": 1,
        "index": 22,
        "bbox": [
            34.01600000000013,
            175.84025560000012,
            379.84512734000015,
            185.8028556000001
        ],
        "prefix": "'EffiCient ",
        "content": "TransfOrmer Encoders' for M2Fstyle architectures. Our key idea comes from ",
        "suffix": "our",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                1.0,
                79,
                153
            ]
        ]
    },
    {
        "page": 1,
        "index": 23,
        "bbox": [
            34.016000000000126,
            163.8852556000001,
            379.83777120000025,
            173.8478556000001
        ],
        "prefix": "from ",
        "content": "our observation made on the training set of COCO [21] and Cityscapes [7] dataset ",
        "suffix": "demonstrated",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.7633163324640793,
                0,
                72
            ]
        ]
    },
    {
        "page": 1,
        "index": 24,
        "bbox": [
            34.016000000000126,
            151.9302556000001,
            379.8397637200001,
            161.89285560000008
        ],
        "prefix": "dataset ",
        "content": "demonstrated in Fig. 2. We plot a histogram of the number of hidden encoder ",
        "suffix": "layers",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.7338666214343279,
                0,
                90
            ]
        ]
    },
    {
        "page": 1,
        "index": 25,
        "bbox": [
            34.016000000000126,
            139.97525560000008,
            379.84275250000024,
            149.93785560000006
        ],
        "prefix": "encoder ",
        "content": "layers that produces the best panoptic segmentation quality [19] for each image. ",
        "suffix": "It",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.9004664756937596,
                241,
                317
            ]
        ]
    },
    {
        "page": 1,
        "index": 26,
        "bbox": [
            34.016000000000126,
            128.02025560000007,
            379.8398444000002,
            137.98285560000005
        ],
        "prefix": "image. ",
        "content": "It can be seen that not all images require the use of all K hidden layers of the ",
        "suffix": "transformer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.8305308715575548,
                0,
                79
            ]
        ]
    },
    {
        "page": 1,
        "index": 27,
        "bbox": [
            34.01600000000013,
            116.06425560000005,
            379.84275250000013,
            126.02685560000006
        ],
        "prefix": "the ",
        "content": "transformer encoder in order to achieve the maximum panoptic segmentation ",
        "suffix": "quality",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                1.0,
                320,
                394
            ]
        ]
    },
    {
        "page": 1,
        "index": 28,
        "bbox": [
            34.01600000000013,
            104.10925560000005,
            379.8447450200002,
            114.07185560000006
        ],
        "prefix": "segmentation ",
        "content": "quality [19]. With this insight, we propose to create a dynamic transformer ",
        "suffix": "encoder",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.7737687106475089,
                0,
                72
            ]
        ]
    },
    {
        "page": 1,
        "index": 29,
        "bbox": [
            34.01600000000013,
            92.15425560000006,
            379.84773380000007,
            102.11685560000006
        ],
        "prefix": "transformer ",
        "content": "encoder that economically uses the hidden layers, guided by a gating network ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                1.0,
                392,
                469
            ]
        ]
    },
    {
        "page": 1,
        "index": 30,
        "bbox": [
            34.01600000000013,
            80.19925560000006,
            259.2016440600002,
            90.16185560000007
        ],
        "prefix": "network ",
        "content": "that can select different depths for different images. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.8888888888888888,
                0,
                54
            ]
        ]
    },
    {
        "page": 1,
        "index": 31,
        "bbox": [
            48.960000000000136,
            67.66930280000005,
            379.8388620800002,
            77.91085560000006
        ],
        "prefix": "",
        "content": "To achieve the aforementioned ability, ECOM2F leverages the wellstudied ",
        "suffix": "early",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.8367879441171443,
                0,
                71
            ]
        ]
    },
    {
        "page": 1,
        "index": 32,
        "bbox": [
            34.01600000000016,
            55.99325560000006,
            379.8417562400003,
            65.95585560000006
        ],
        "prefix": "wellstudied ",
        "content": "early exiting strategy [17, 23, 27, 28, 30, 33, 37, 41, 44] to create stochastic depths ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 1,
        "index": 33,
        "bbox": [
            34.01600000000016,
            44.03825560000006,
            379.84574128,
            54.00085560000006
        ],
        "prefix": "depths ",
        "content": "for the transformer encoder to improve inference efficiency. Previous exit mecha",
        "suffix": "nisms",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                51,
                137
            ]
        ]
    },
    {
        "page": 1,
        "index": 34,
        "bbox": [
            34.01600000000016,
            32.083255600000065,
            379.84075998000026,
            42.04585560000006
        ],
        "prefix": "mecha",
        "content": "nisms have primarily relied on confidence scores or uncertainty scores, typically ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                208,
                284
            ]
        ]
    },
    {
        "page": 2,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.83945983999996,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 3 ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                10,
                0.35555555555555557,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 1,
        "bbox": [
            34.016,
            569.2072555999999,
            379.8427525000001,
            579.1698556
        ],
        "prefix": "",
        "content": "applied in classification tasks. However, implementing such mechanisms in our ",
        "suffix": "context",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                208,
                286
            ]
        ]
    },
    {
        "page": 2,
        "index": 2,
        "bbox": [
            34.016,
            557.2522555999999,
            379.84374876000004,
            567.2148556
        ],
        "prefix": "our ",
        "content": "context would necessitate the inclusion of a decoder and a prediction head to ",
        "suffix": "generate",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.8033191378911908,
                51,
                129
            ]
        ]
    },
    {
        "page": 2,
        "index": 3,
        "bbox": [
            34.016,
            545.2962555999999,
            379.84574128000014,
            555.2588556
        ],
        "prefix": "to ",
        "content": "generate a reliable confidence score. This additional complexity introduces a sig",
        "suffix": "nificant",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                286,
                376
            ]
        ]
    },
    {
        "page": 2,
        "index": 4,
        "bbox": [
            34.016,
            533.3412555999998,
            379.83976372000006,
            543.3038555999999
        ],
        "prefix": "sig",
        "content": "nificant number of FLOPs, rendering it impractical for our purposes. By contrast, ",
        "suffix": "ECOM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.7730605437206048,
                51,
                124
            ]
        ]
    },
    {
        "page": 2,
        "index": 5,
        "bbox": [
            34.016,
            521.1073027999998,
            379.83963816000005,
            531.3488555999999
        ],
        "prefix": "contrast, ",
        "content": "ECOM2F provides a threestep training recipe that can be used to customize the ",
        "suffix": "transformer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.8012210425925822,
                57,
                128
            ]
        ]
    },
    {
        "page": 2,
        "index": 6,
        "bbox": [
            34.016000000000005,
            509.4312555999999,
            379.84000566,
            519.3938555999998
        ],
        "prefix": "the ",
        "content": "transformer encoder on the fly given the input image. Step A involves training ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 7,
        "bbox": [
            34.01599999999996,
            497.4762555999999,
            379.84357367999996,
            507.4388555999999
        ],
        "prefix": "training ",
        "content": "the parent model to be dynamic by allowing stochastic depths at the transformer ",
        "suffix": "encoder.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                520,
                600
            ]
        ]
    },
    {
        "page": 2,
        "index": 8,
        "bbox": [
            34.01599999999996,
            485.5212555999999,
            379.84673753999994,
            495.4838555999999
        ],
        "prefix": "transformer ",
        "content": "encoder. Using the fact that the transformer encoder maintains the token length ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.9286788170852126,
                212,
                292
            ]
        ]
    },
    {
        "page": 2,
        "index": 9,
        "bbox": [
            34.01599999999996,
            473.5652555999999,
            379.8460314999999,
            483.5278555999999
        ],
        "prefix": "length ",
        "content": "of the input throughout the hidden layers constant, Step B involves creating a ",
        "suffix": "Derived",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.6911919655047214,
                212,
                296
            ]
        ]
    },
    {
        "page": 2,
        "index": 10,
        "bbox": [
            34.01599999999996,
            461.6102555999999,
            379.84509973999997,
            471.5728555999999
        ],
        "prefix": "a ",
        "content": "Derived dataset from the training dataset whose each sample contains a pair of ",
        "suffix": "image",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                684,
                763
            ]
        ]
    },
    {
        "page": 2,
        "index": 11,
        "bbox": [
            34.01599999999997,
            449.6552555999999,
            379.84075998,
            459.6178555999999
        ],
        "prefix": "of ",
        "content": "image and layer number that provides the highest segmentation quality. Finally, ",
        "suffix": "Step",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.9231925722456136,
                684,
                764
            ]
        ]
    },
    {
        "page": 2,
        "index": 12,
        "bbox": [
            34.01599999999997,
            437.70025559999993,
            379.83816995999996,
            447.66285559999994
        ],
        "prefix": "Finally, ",
        "content": "Step C involves training a Gating Network using the derived dataset, whose ",
        "suffix": "function",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 13,
        "bbox": [
            34.01599999999996,
            425.74525559999995,
            364.8609946200001,
            435.70785559999996
        ],
        "prefix": "whose ",
        "content": "function is to decide the number of layers to be used given the input image. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                1.0,
                764,
                840
            ]
        ]
    },
    {
        "page": 2,
        "index": 14,
        "bbox": [
            48.959999999999965,
            413.5103027999999,
            379.8434739399999,
            423.75185559999994
        ],
        "prefix": "",
        "content": "The key contributions of ECOM2F are multifold. First, given a trained M2F",
        "suffix": "style",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.8639899534309535,
                0,
                78
            ]
        ]
    },
    {
        "page": 2,
        "index": 15,
        "bbox": [
            34.01599999999996,
            401.55530279999994,
            379.84732241999995,
            411.79685559999996
        ],
        "prefix": "M2F",
        "content": "style architecture, ECOM2F finetunes the model into one that allows the ability ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.7489045294109912,
                0,
                73
            ]
        ]
    },
    {
        "page": 2,
        "index": 16,
        "bbox": [
            34.01599999999996,
            389.87925559999996,
            379.83976371999995,
            399.8418556
        ],
        "prefix": "ability ",
        "content": "to randomly exit from the encoder by leveraging the fact that the token length ",
        "suffix": "remains",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                151,
                230
            ]
        ]
    },
    {
        "page": 2,
        "index": 17,
        "bbox": [
            34.01599999999996,
            377.9242556,
            379.84232524000004,
            387.8868556
        ],
        "prefix": "length ",
        "content": "remains constant in the hidden layers. Second, it introduces an accessory to the ",
        "suffix": "parent",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.8666666666666667,
                0,
                81
            ]
        ]
    },
    {
        "page": 2,
        "index": 18,
        "bbox": [
            34.01599999999999,
            365.9692556,
            379.84420528,
            375.9318556
        ],
        "prefix": "the ",
        "content": "parent architecture via the Gating network that provides the ability to smartly ",
        "suffix": "use",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.9718950471223309,
                232,
                313
            ]
        ]
    },
    {
        "page": 2,
        "index": 19,
        "bbox": [
            34.016000000000005,
            353.7353028,
            379.84068564,
            363.9768556
        ],
        "prefix": "smartly ",
        "content": "use the encoder layers. Using this module, ECOM2F enables the parent archi",
        "suffix": "tecture",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.7207967841037006,
                81,
                162
            ]
        ]
    },
    {
        "page": 2,
        "index": 20,
        "bbox": [
            34.01599999999999,
            342.0582556,
            379.83976371999995,
            352.0208556
        ],
        "prefix": "archi",
        "content": "tecture to decide the optimal amount of layers for the given input without any ",
        "suffix": "performance",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                313,
                384
            ]
        ]
    },
    {
        "page": 2,
        "index": 21,
        "bbox": [
            34.01599999999999,
            330.1032556,
            379.8427525000001,
            340.0658556
        ],
        "prefix": "any ",
        "content": "performance degradation as well as any confidence threshold (unlike prior early ",
        "suffix": "exiting",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.785714551903798,
                162,
                242
            ]
        ]
    },
    {
        "page": 2,
        "index": 22,
        "bbox": [
            34.01599999999999,
            318.1482556,
            379.84503798000003,
            328.11085560000004
        ],
        "prefix": "early ",
        "content": "exiting strategies). Third, as a result of our Gating network module's training ",
        "suffix": "strategy,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                393,
                473
            ]
        ]
    },
    {
        "page": 2,
        "index": 23,
        "bbox": [
            34.016000000000005,
            305.91430280000003,
            379.8399612600001,
            316.15585560000005
        ],
        "prefix": "training ",
        "content": "strategy, ECOM2F can adapt the parent architecture to varying computational ",
        "suffix": "budgets",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.697323597318718,
                162,
                237
            ]
        ]
    },
    {
        "page": 2,
        "index": 24,
        "bbox": [
            34.01600000000002,
            294.23825560000006,
            379.8450901600001,
            304.20085560000007
        ],
        "prefix": "computational ",
        "content": "budgets using only Step C . On COCO [21] dataset, the computational cost of ",
        "suffix": "Step",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.5610555533162964,
                81,
                156
            ]
        ]
    },
    {
        "page": 2,
        "index": 25,
        "bbox": [
            34.016000000000005,
            282.2832556000001,
            379.84261402,
            292.2458556000001
        ],
        "prefix": "of ",
        "content": "Step B and C are only ∼6% and ∼2.5% of Step A cost, respectively. Finally, ",
        "suffix": "ECOM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.7051819161757165,
                237,
                327
            ]
        ]
    },
    {
        "page": 2,
        "index": 26,
        "bbox": [
            34.01599999999996,
            270.04830280000004,
            379.8429191800001,
            280.28985560000007
        ],
        "prefix": "Finally, ",
        "content": "ECOM2F can also incorporate recent advances [20] in making transformer encoder ",
        "suffix": "efficient",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.5851878878213991,
                87,
                154
            ]
        ]
    },
    {
        "page": 2,
        "index": 27,
        "bbox": [
            34.01599999999997,
            258.3722556000001,
            379.83876746,
            268.3348556000001
        ],
        "prefix": "encoder ",
        "content": "efficient using token length scaling, bringing best of the both methods in pushing ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.9388056665749266,
                706,
                789
            ]
        ]
    },
    {
        "page": 2,
        "index": 28,
        "bbox": [
            34.01599999999997,
            246.41725560000006,
            379.52494555999994,
            256.37985560000004
        ],
        "prefix": "pushing ",
        "content": "the limits of the efficiency. To summarize, we make the following contributions: ",
        "suffix": "–",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.7857142857159213,
                310,
                390
            ]
        ]
    },
    {
        "page": 2,
        "index": 29,
        "bbox": [
            34.01599999999997,
            234.18330280000004,
            379.8384728,
            244.42485560000003
        ],
        "prefix": "contributions: ",
        "content": "– We present a dynamic transformer encoder ECOM2F for M2Fstyle universal ",
        "suffix": "segmentation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.5727892554074507,
                21,
                93
            ]
        ]
    },
    {
        "page": 2,
        "index": 30,
        "bbox": [
            44.72399999999996,
            222.50725560000004,
            379.84295002,
            232.46985560000002
        ],
        "prefix": "universal ",
        "content": "segmentation that maintains performance but reduces the computational load. ",
        "suffix": "–",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.9090909090909091,
                93,
                169
            ]
        ]
    },
    {
        "page": 2,
        "index": 31,
        "bbox": [
            34.01599999999996,
            211.15530280000002,
            379.83984405999996,
            221.3968556
        ],
        "prefix": "load. ",
        "content": "– ECOM2F consists of a novel training recipe that leverages input image based ",
        "suffix": "early",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.7333415606536058,
                101,
                170
            ]
        ]
    },
    {
        "page": 2,
        "index": 32,
        "bbox": [
            44.72399999999997,
            199.47925560000002,
            379.84124918000003,
            209.4418556
        ],
        "prefix": "based ",
        "content": "early exiting (in Step A), creating a derived dataset (based on training set ",
        "suffix": "segmentation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.7275299408934048,
                101,
                183
            ]
        ]
    },
    {
        "page": 2,
        "index": 33,
        "bbox": [
            44.72399999999999,
            187.5242556,
            379.84638316,
            197.48685559999998
        ],
        "prefix": "set ",
        "content": "segmentation performance in Step B), which in turn is used to train a gating ",
        "suffix": "function",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.7730001781859706,
                101,
                183
            ]
        ]
    },
    {
        "page": 2,
        "index": 34,
        "bbox": [
            44.72400000000002,
            175.5692556,
            379.8447919,
            185.53185559999997
        ],
        "prefix": "gating ",
        "content": "function (using Step C ) that allows adapting the number of hidden layers to ",
        "suffix": "reduce",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.668706050057384,
                101,
                182
            ]
        ]
    },
    {
        "page": 2,
        "index": 35,
        "bbox": [
            44.72400000000002,
            163.61425559999998,
            137.77368773999999,
            173.57685559999996
        ],
        "prefix": "to ",
        "content": "reduce computations. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                1.0,
                415,
                436
            ]
        ]
    },
    {
        "page": 2,
        "index": 36,
        "bbox": [
            34.01600000000002,
            152.26230279999996,
            379.84168854,
            162.50385559999995
        ],
        "prefix": "",
        "content": "– Extensive experiments show that ECOM2F improves the overall performance",
        "suffix": "efficiency",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.6272917228516294,
                29,
                112
            ]
        ]
    },
    {
        "page": 2,
        "index": 37,
        "bbox": [
            44.72400000000002,
            140.58625559999996,
            379.84095750000006,
            150.54885559999994
        ],
        "prefix": "performance",
        "content": "efficiency tradeoff, and adaptable to diverse architecture settings and can be ",
        "suffix": "extended",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                1.0,
                498,
                566
            ]
        ]
    },
    {
        "page": 2,
        "index": 38,
        "bbox": [
            44.72400000000002,
            128.63125559999995,
            275.5773672,
            138.59385559999993
        ],
        "prefix": "be ",
        "content": "extended beyond segmentation to the detection task. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.7500000630434578,
                184,
                235
            ]
        ]
    },
    {
        "page": 2,
        "index": 39,
        "bbox": [
            34.01600000000002,
            99.89569119999993,
            141.32348416000002,
            111.85089119999994
        ],
        "prefix": "",
        "content": "2 Related Works ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                11,
                0.6666666666666666,
                0,
                13
            ]
        ]
    },
    {
        "page": 2,
        "index": 40,
        "bbox": [
            34.01600000000002,
            79.90325559999992,
            379.84134058000006,
            89.86585559999993
        ],
        "prefix": "",
        "content": "Efficient image segmentation. With the rise of transformers [31], researchers ",
        "suffix": "are",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 41,
        "bbox": [
            34.01600000000002,
            67.94825559999992,
            379.83976371999995,
            77.91085559999993
        ],
        "prefix": "researchers ",
        "content": "are increasingly interested in creating image segmentation models that work ef",
        "suffix": "fectively",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                1.0,
                43,
                131
            ]
        ]
    },
    {
        "page": 2,
        "index": 42,
        "bbox": [
            34.01600000000002,
            55.993255599999934,
            379.8397637200002,
            65.95585559999994
        ],
        "prefix": "ef",
        "content": "fectively in various settings, without requiring segmentation type specific modi",
        "suffix": "fications",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                0.8082084998623899,
                43,
                123
            ]
        ]
    },
    {
        "page": 2,
        "index": 43,
        "bbox": [
            34.01600000000002,
            44.038255599999935,
            379.8447450200001,
            54.00085559999993
        ],
        "prefix": "modi",
        "content": "fications to the model itself. Building on DETR [2], multiple universal segmen",
        "suffix": "tation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 44,
        "bbox": [
            34.01600000000002,
            32.08225559999993,
            379.8407599800001,
            42.04485559999993
        ],
        "prefix": "segmen",
        "content": "tation architectures were proposed [5, 6, 11, 16] that use transformer decoder to ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04233152000002,
            604.2699184
        ],
        "prefix": "",
        "content": "4 M. Yao et al. ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                14,
                0.38461538461538464,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 1,
        "bbox": [
            34.016,
            569.2072555999999,
            379.83876746000004,
            579.1698556
        ],
        "prefix": "",
        "content": "predict masks for each entity in the input image. However, despite the signif",
        "suffix": "icant",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                1.0,
                254,
                337
            ]
        ]
    },
    {
        "page": 3,
        "index": 2,
        "bbox": [
            34.016,
            557.2522555999999,
            379.8387674600004,
            567.2148556
        ],
        "prefix": "signif",
        "content": "icant progress in overall performance across various tasks, these models still ",
        "suffix": "face",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                0.7500008441744667,
                174,
                247
            ]
        ]
    },
    {
        "page": 3,
        "index": 3,
        "bbox": [
            34.016,
            545.2962555999999,
            379.84574128000014,
            555.2588556
        ],
        "prefix": "still ",
        "content": "face challenges in deployment on resourceconstrained devices. Current empha",
        "suffix": "sis",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                1.0,
                327,
                406
            ]
        ]
    },
    {
        "page": 3,
        "index": 4,
        "bbox": [
            34.016,
            533.3412555999998,
            379.8427525000001,
            543.3038555999999
        ],
        "prefix": "empha",
        "content": "sis [1,4,10,14,15,38,42,43] for efficiency for image segmentation has mostly been ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 5,
        "bbox": [
            34.016,
            521.3862555999998,
            379.84175624,
            531.3488555999999
        ],
        "prefix": "been ",
        "content": "on specialized architectures tailored to a single segmentation task. Unlike these ",
        "suffix": "preceding",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                1.0,
                381,
                463
            ]
        ]
    },
    {
        "page": 3,
        "index": 6,
        "bbox": [
            34.016,
            509.15230279999986,
            379.8412105,
            519.3938555999998
        ],
        "prefix": "these ",
        "content": "preceding works, ECOM2F makes no such assumption on the segmentation task ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                0.6436830482085061,
                228,
                301
            ]
        ]
    },
    {
        "page": 3,
        "index": 7,
        "bbox": [
            34.01599999999999,
            497.4762555999999,
            379.83876745999993,
            507.4388555999999
        ],
        "prefix": "task ",
        "content": "and addresses the limitation of inefficiency in M2Fstyle universal architectures ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                1.0,
                454,
                535
            ]
        ]
    },
    {
        "page": 3,
        "index": 8,
        "bbox": [
            34.01599999999999,
            485.5212555999999,
            131.81485916,
            495.4838555999999
        ],
        "prefix": "architectures ",
        "content": "that are taskagnostic. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                0.7500003427397717,
                301,
                323
            ]
        ]
    },
    {
        "page": 3,
        "index": 9,
        "bbox": [
            34.01599999999999,
            461.7602555999999,
            379.8434409,
            471.7228555999999
        ],
        "prefix": "",
        "content": "Earlyexiting in vision transformers. Recent works on early exiting ",
        "suffix": "[17,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 10,
        "bbox": [
            34.01599999999999,
            449.80425559999986,
            379.83976372000006,
            459.7668555999999
        ],
        "prefix": "exiting ",
        "content": "[17, 23, 27, 28, 30, 32, 33, 37, 39, 41, 44] aim to boost inference efficiency for large ",
        "suffix": "transformers.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 11,
        "bbox": [
            34.01599999999999,
            437.8492555999999,
            379.83876746000016,
            447.8118555999999
        ],
        "prefix": "large ",
        "content": "transformers. Some works [23, 28, 37] used early exiting for classification tasks ",
        "suffix": "along",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.8005442216427193,
                74,
                143
            ]
        ]
    },
    {
        "page": 3,
        "index": 12,
        "bbox": [
            34.01599999999999,
            425.8942555999999,
            379.84574128,
            435.8568555999999
        ],
        "prefix": "tasks ",
        "content": "along with manually chosen confidence threshold in vision transformers. For ex",
        "suffix": "ample,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                1.0,
                143,
                228
            ]
        ]
    },
    {
        "page": 3,
        "index": 13,
        "bbox": [
            34.01599999999999,
            413.9392555999999,
            379.84574128,
            423.9018555999999
        ],
        "prefix": "ex",
        "content": "ample, [37] proposed an early exiting framework for classification task ViTs com",
        "suffix": "bining",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.7503405642865387,
                74,
                149
            ]
        ]
    },
    {
        "page": 3,
        "index": 14,
        "bbox": [
            34.01599999999999,
            401.9842555999999,
            379.8407599800001,
            411.94685559999994
        ],
        "prefix": "com",
        "content": "bining heterogeneous task heads. Similarly, [28] proposed an early exiting strat",
        "suffix": "egy",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.691874311922827,
                74,
                146
            ]
        ]
    },
    {
        "page": 3,
        "index": 15,
        "bbox": [
            34.01599999999999,
            390.0282555999999,
            379.84474502000006,
            399.9908555999999
        ],
        "prefix": "strat",
        "content": "egy for visionlanguage models by measuring layerwise similarities by check",
        "suffix": "ing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                1.0,
                290,
                364
            ]
        ]
    },
    {
        "page": 3,
        "index": 16,
        "bbox": [
            34.01599999999999,
            378.0732555999999,
            379.8387674600001,
            388.03585559999993
        ],
        "prefix": "check",
        "content": "ing multiple times to exit early. Applying early exiting solely to the encoder ",
        "suffix": "(like",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.7356189436573856,
                74,
                149
            ]
        ]
    },
    {
        "page": 3,
        "index": 17,
        "bbox": [
            34.01599999999999,
            366.11825559999994,
            379.8437487600002,
            376.08085559999995
        ],
        "prefix": "encoder ",
        "content": "(like [37]) is infeasible due to the dependency on separate decoders, leading to ",
        "suffix": "an",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.9180312152772137,
                365,
                442
            ]
        ]
    },
    {
        "page": 3,
        "index": 18,
        "bbox": [
            34.01599999999999,
            354.16325559999996,
            379.84175624000005,
            364.12585559999997
        ],
        "prefix": "to ",
        "content": "an unacceptable optimization load. In contrast, methods like [28] suffer from ",
        "suffix": "redundant",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.7452781275643486,
                74,
                147
            ]
        ]
    },
    {
        "page": 3,
        "index": 19,
        "bbox": [
            34.01599999999999,
            342.2082556,
            379.83876746000004,
            352.1708556
        ],
        "prefix": "from ",
        "content": "redundant computations for exit decisions at all possible choices, hindering ef",
        "suffix": "ficient",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                1.0,
                438,
                525
            ]
        ]
    },
    {
        "page": 3,
        "index": 20,
        "bbox": [
            34.01599999999999,
            329.9743028,
            379.8409157,
            340.2158556
        ],
        "prefix": "ef",
        "content": "ficient resource allocation. In contrast, ECOM2F only trains one decoder for all ",
        "suffix": "possible",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.6439974009699928,
                74,
                146
            ]
        ]
    },
    {
        "page": 3,
        "index": 21,
        "bbox": [
            34.01599999999999,
            318.29725559999997,
            379.84175624000005,
            328.2598556
        ],
        "prefix": "all ",
        "content": "possible exit routes, as well as uses a gating module to decide the number of ",
        "suffix": "encoder",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                1.0,
                510,
                588
            ]
        ]
    },
    {
        "page": 3,
        "index": 22,
        "bbox": [
            34.01599999999999,
            306.3422556,
            333.5704605400001,
            316.3048556
        ],
        "prefix": "of ",
        "content": "encoder layers required for the model depending on the input image. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.8333341775077999,
                146,
                213
            ]
        ]
    },
    {
        "page": 3,
        "index": 23,
        "bbox": [
            34.01599999999999,
            273.8899456,
            241.97465279999997,
            286.1798912
        ],
        "prefix": "",
        "content": "3 Proposed Methodology: ECOM2F ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                16,
                0.5,
                0,
                22
            ]
        ]
    },
    {
        "page": 3,
        "index": 24,
        "bbox": [
            34.01599999999999,
            250.8502556,
            379.83886129999996,
            260.8128556
        ],
        "prefix": "",
        "content": "Model preliminaries. We first review the metaarchitecture of M2F [5] upon ",
        "suffix": "which",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                18,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 25,
        "bbox": [
            34.01599999999999,
            238.61630279999997,
            378.66403264000013,
            248.85785559999997
        ],
        "prefix": "upon ",
        "content": "which ECOM2F is based, along with the notation. This class of models contains ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                18,
                0.8730807257248878,
                49,
                127
            ]
        ]
    },
    {
        "page": 3,
        "index": 26,
        "bbox": [
            40.243999999999986,
            219.15625559999998,
            379.84182405999996,
            229.93534999999997
        ],
        "prefix": "",
        "content": "– a backbone b(·) which takes the ith image x(i) as input to generate multi",
        "suffix": "scale",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.5748462663145316,
                0,
                72
            ]
        ]
    },
    {
        "page": 3,
        "index": 27,
        "bbox": [
            50.95199999999991,
            205.89654999999996,
            379.83793169999996,
            217.97934999999995
        ],
        "prefix": "multi",
        "content": "scale feature maps b(x(i)), represented as s1, s2, s3, s4. These multiscale ",
        "suffix": "feature",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.3572310295590028,
                72,
                133
            ]
        ]
    },
    {
        "page": 3,
        "index": 28,
        "bbox": [
            50.95199999999994,
            195.24625559999996,
            379.8426140199999,
            205.20885559999994
        ],
        "prefix": "multiscale ",
        "content": "feature maps correspond to spatial resolutions typically set at 1/32, 1/16, 1/8, ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.9411764730234928,
                133,
                214
            ]
        ]
    },
    {
        "page": 3,
        "index": 29,
        "bbox": [
            50.951999999999884,
            183.29125559999994,
            252.72997081999986,
            193.25385559999992
        ],
        "prefix": "1/8, ",
        "content": "and 1/4 of the original image size, respectively. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.7272728519053715,
                133,
                183
            ]
        ]
    },
    {
        "page": 3,
        "index": 30,
        "bbox": [
            40.24399999999988,
            171.37325559999994,
            379.8442838799999,
            181.33585559999992
        ],
        "prefix": "",
        "content": "– a transformer encoder (called the ''pixel decoder'' [5]), which is composed of ",
        "suffix": "multiple",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.7687648437195642,
                133,
                209
            ]
        ]
    },
    {
        "page": 3,
        "index": 31,
        "bbox": [
            50.9519999999999,
            159.41825559999992,
            379.84133624000003,
            169.3808555999999
        ],
        "prefix": "of ",
        "content": "multiple layers of transformer encoders. The function of this module is to ",
        "suffix": "generate",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.9293649283241602,
                259,
                334
            ]
        ]
    },
    {
        "page": 3,
        "index": 32,
        "bbox": [
            50.9519999999999,
            146.1575499999999,
            379.84079235999985,
            157.4258555999999
        ],
        "prefix": "to ",
        "content": "generate rich token representation from {s1, s2, s3} and generate perpixel ",
        "suffix": "embeddings",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.5359439088862896,
                72,
                142
            ]
        ]
    },
    {
        "page": 3,
        "index": 33,
        "bbox": [
            50.951999999999856,
            134.20254999999992,
            379.84245513999986,
            145.4698555999999
        ],
        "prefix": "perpixel ",
        "content": "embeddings from s4. Each layer in the transformer encoder, denoted as fk(·) ",
        "suffix": "(where",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.7886440546574041,
                203,
                272
            ]
        ]
    },
    {
        "page": 3,
        "index": 34,
        "bbox": [
            50.95199999999983,
            122.24754999999992,
            379.8437098199999,
            134.3313499999999
        ],
        "prefix": "fk(·) ",
        "content": "(where k ∈ {1, 2, . . ., K}) is successively applied to b(x(i)), with fK(·) being ",
        "suffix": "the",
        "equation hit": ", ℓ̃ = h∘f∘⋯∘f2∘f1∘b() .",
        "assigned": true,
        "matches": [
            [
                19,
                0.8648648648648649,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 35,
        "bbox": [
            50.951999999999884,
            111.59725559999991,
            230.2080655399999,
            121.55985559999992
        ],
        "prefix": "being ",
        "content": "the last layer in the transformer encoder. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                1.0,
                464,
                507
            ]
        ]
    },
    {
        "page": 3,
        "index": 36,
        "bbox": [
            40.243999999999886,
            99.6792555999999,
            379.84157559999994,
            109.64185559999991
        ],
        "prefix": "",
        "content": "– a transformer decoder (along with a segmentation head) that takes two in",
        "suffix": "puts:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.8571428571428753,
                269,
                347
            ]
        ]
    },
    {
        "page": 3,
        "index": 37,
        "bbox": [
            50.951999999999884,
            87.7242555999999,
            379.8373512,
            97.68685559999992
        ],
        "prefix": "in",
        "content": "puts: the output of the transformer encoder and the object queries. The ",
        "suffix": "object",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                1.0,
                542,
                608
            ]
        ]
    },
    {
        "page": 3,
        "index": 38,
        "bbox": [
            50.951999999999884,
            75.76925559999991,
            379.8423325,
            85.73185559999992
        ],
        "prefix": "The ",
        "content": "object queries are decoded to output a binary mask along with the corre",
        "suffix": "sponding",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.8571428571428753,
                269,
                349
            ]
        ]
    },
    {
        "page": 3,
        "index": 39,
        "bbox": [
            50.951999999999884,
            63.81425559999992,
            140.20294835999988,
            73.77685559999992
        ],
        "prefix": "corre",
        "content": "sponding class label. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                1.0,
                622,
                634
            ]
        ]
    },
    {
        "page": 3,
        "index": 40,
        "bbox": [
            34.015999999999885,
            44.03825559999992,
            379.84374876,
            54.000855599999916
        ],
        "prefix": "",
        "content": "For brevity, we collectively refer to the operations in the transformer decoder and ",
        "suffix": "segmentation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                20,
                1.0,
                21,
                97
            ]
        ]
    },
    {
        "page": 3,
        "index": 41,
        "bbox": [
            34.015999999999885,
            32.08325559999992,
            379.8440350399999,
            42.04585559999992
        ],
        "prefix": "and ",
        "content": "segmentation head together as h(·). Thus, the output of the metaarchitecture ",
        "suffix": "",
        "equation hit": ", ℓ̃ = h∘f∘⋯∘f2∘f1∘b() .",
        "assigned": true,
        "matches": [
            [
                20,
                0.6204081632653061,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.83945983999996,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 5 ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": false,
        "matches": [
            [
                15,
                0.6666666666666666,
                null,
                null
            ],
            [
                18,
                0.6363636363636364,
                null,
                null
            ],
            [
                61,
                0.6126126126126126,
                null,
                null
            ],
            [
                68,
                0.6119402985074627,
                null,
                null
            ],
            [
                76,
                0.6025641025641025,
                null,
                null
            ],
            [
                59,
                0.6,
                null,
                null
            ],
            [
                57,
                0.591304347826087,
                null,
                null
            ],
            [
                138,
                0.5850340136054422,
                null,
                null
            ],
            [
                83,
                0.5833333333333334,
                null,
                null
            ],
            [
                67,
                0.5660377358490566,
                null,
                null
            ],
            [
                139,
                0.562962962962963,
                null,
                null
            ],
            [
                63,
                0.5595854922279793,
                null,
                null
            ],
            [
                84,
                0.5333333333333333,
                null,
                null
            ],
            [
                74,
                0.5167464114832536,
                null,
                null
            ],
            [
                12,
                0.5111111111111111,
                null,
                null
            ],
            [
                72,
                0.5109489051094891,
                null,
                null
            ],
            [
                71,
                0.4954128440366973,
                null,
                null
            ],
            [
                29,
                0.4946236559139785,
                null,
                null
            ],
            [
                70,
                0.47191011235955055,
                null,
                null
            ],
            [
                49,
                0.46601941747572817,
                null,
                null
            ],
            [
                99,
                0.45714285714285713,
                null,
                null
            ],
            [
                44,
                0.4444444444444444,
                null,
                null
            ],
            [
                65,
                0.4434782608695652,
                null,
                null
            ],
            [
                28,
                0.4222222222222222,
                null,
                null
            ],
            [
                17,
                0.41975308641975306,
                null,
                null
            ],
            [
                2,
                0.4,
                null,
                null
            ],
            [
                56,
                0.4,
                null,
                null
            ],
            [
                60,
                0.3902439024390244,
                null,
                null
            ],
            [
                98,
                0.3888888888888889,
                null,
                null
            ],
            [
                100,
                0.3888888888888889,
                null,
                null
            ],
            [
                128,
                0.3888888888888889,
                null,
                null
            ],
            [
                13,
                0.3806228373702422,
                null,
                null
            ],
            [
                101,
                0.37777777777777777,
                null,
                null
            ],
            [
                58,
                0.36363636363636365,
                null,
                null
            ],
            [
                25,
                0.35443037974683544,
                null,
                null
            ],
            [
                62,
                0.35443037974683544,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 1,
        "bbox": [
            34.016,
            568.7642556,
            232.03110432,
            581.10235
        ],
        "prefix": "",
        "content": "with K encoder layers (a predicted mask ˜y(i) ",
        "suffix": "be",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.38961038961038963,
                null,
                null
            ],
            [
                36,
                0.38461538461538464,
                null,
                null
            ],
            [
                92,
                0.37209302325581395,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 2,
        "bbox": [
            222.61700000000002,
            566.02555,
            379.8383960399999,
            581.3558556
        ],
        "prefix": "",
        "content": "K and corresponding label ˜ℓ(i) K ) can ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                67,
                0.6352941176470588,
                null,
                null
            ],
            [
                61,
                0.6,
                null,
                null
            ],
            [
                49,
                0.5365853658536586,
                null,
                null
            ],
            [
                83,
                0.5333333333333333,
                null,
                null
            ],
            [
                57,
                0.5319148936170213,
                null,
                null
            ],
            [
                29,
                0.5277777777777778,
                null,
                null
            ],
            [
                15,
                0.5263157894736842,
                null,
                null
            ],
            [
                18,
                0.5168539325842697,
                null,
                null
            ],
            [
                128,
                0.5057471264367817,
                null,
                null
            ],
            [
                17,
                0.5,
                null,
                null
            ],
            [
                70,
                0.5,
                null,
                null
            ],
            [
                138,
                0.49206349206349204,
                null,
                null
            ],
            [
                2,
                0.47619047619047616,
                null,
                null
            ],
            [
                59,
                0.46511627906976744,
                null,
                null
            ],
            [
                68,
                0.46017699115044247,
                null,
                null
            ],
            [
                76,
                0.45925925925925926,
                null,
                null
            ],
            [
                139,
                0.45614035087719296,
                null,
                null
            ],
            [
                84,
                0.4523809523809524,
                null,
                null
            ],
            [
                12,
                0.43478260869565216,
                null,
                null
            ],
            [
                60,
                0.4262295081967213,
                null,
                null
            ],
            [
                72,
                0.41379310344827586,
                null,
                null
            ],
            [
                56,
                0.4067796610169492,
                null,
                null
            ],
            [
                28,
                0.4057971014492754,
                null,
                null
            ],
            [
                101,
                0.4057971014492754,
                null,
                null
            ],
            [
                88,
                0.39436619718309857,
                null,
                null
            ],
            [
                58,
                0.39285714285714285,
                null,
                null
            ],
            [
                98,
                0.39080459770114945,
                null,
                null
            ],
            [
                100,
                0.39080459770114945,
                null,
                null
            ],
            [
                99,
                0.3865546218487395,
                null,
                null
            ],
            [
                62,
                0.3793103448275862,
                null,
                null
            ],
            [
                92,
                0.35,
                null,
                null
            ],
            [
                63,
                0.3488372093023256,
                null,
                null
            ],
            [
                74,
                0.3404255319148936,
                null,
                null
            ],
            [
                71,
                0.3248730964467005,
                null,
                null
            ],
            [
                94,
                0.3235294117647059,
                null,
                null
            ],
            [
                103,
                0.3235294117647059,
                null,
                null
            ],
            [
                127,
                0.3137254901960784,
                null,
                null
            ],
            [
                25,
                0.3103448275862069,
                null,
                null
            ],
            [
                36,
                0.3055555555555556,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 3,
        "bbox": [
            34.015999999999906,
            556.8092555999999,
            91.3657068999999,
            566.7718556
        ],
        "prefix": "˜y(i) ",
        "content": "be written as ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                70,
                0.5714285714285714,
                null,
                null
            ],
            [
                62,
                0.5625,
                null,
                null
            ],
            [
                56,
                0.5454545454545454,
                null,
                null
            ],
            [
                60,
                0.5142857142857142,
                null,
                null
            ],
            [
                101,
                0.5116279069767442,
                null,
                null
            ],
            [
                83,
                0.4897959183673469,
                null,
                null
            ],
            [
                17,
                0.47058823529411764,
                null,
                null
            ],
            [
                58,
                0.4666666666666667,
                null,
                null
            ],
            [
                12,
                0.46511627906976744,
                null,
                null
            ],
            [
                79,
                0.46153846153846156,
                null,
                null
            ],
            [
                25,
                0.4375,
                null,
                null
            ],
            [
                29,
                0.43478260869565216,
                null,
                null
            ],
            [
                36,
                0.43478260869565216,
                null,
                null
            ],
            [
                54,
                0.43478260869565216,
                null,
                null
            ],
            [
                49,
                0.42857142857142855,
                null,
                null
            ],
            [
                94,
                0.42857142857142855,
                null,
                null
            ],
            [
                103,
                0.42857142857142855,
                null,
                null
            ],
            [
                28,
                0.4186046511627907,
                null,
                null
            ],
            [
                2,
                0.41379310344827586,
                null,
                null
            ],
            [
                18,
                0.4126984126984127,
                null,
                null
            ],
            [
                67,
                0.4067796610169492,
                null,
                null
            ],
            [
                127,
                0.4,
                null,
                null
            ],
            [
                98,
                0.39344262295081966,
                null,
                null
            ],
            [
                100,
                0.39344262295081966,
                null,
                null
            ],
            [
                122,
                0.38461538461538464,
                null,
                null
            ],
            [
                57,
                0.38235294117647056,
                null,
                null
            ],
            [
                84,
                0.3793103448275862,
                null,
                null
            ],
            [
                61,
                0.375,
                null,
                null
            ],
            [
                31,
                0.36363636363636365,
                null,
                null
            ],
            [
                144,
                0.35714285714285715,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 4,
        "bbox": [
            34.01599999999996,
            502.0622556,
            379.84322149999997,
            548.0048556
        ],
        "prefix": "",
        "content": "Here, the operation ◦ represents function composition, e.g., g ◦ f (x) = g(f (x)) and subscript denotes output predicted using K encoder layers. With {y(i), ℓ(i)} { ˜y(i) K, ˜ℓ(i) K } = h ◦ fK ◦ · · · ◦ f2 ◦ f1 ◦ b(x(i)) . (1) ",
        "suffix": "and",
        "equation hit": "gating=∑i^N∑^softmax(())ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                13,
                0.6505494505494506,
                null,
                null
            ],
            [
                44,
                0.6405867970660146,
                null,
                null
            ],
            [
                80,
                0.6352941176470588,
                null,
                null
            ],
            [
                71,
                0.6197916666666666,
                null,
                null
            ],
            [
                63,
                0.6128133704735376,
                null,
                null
            ],
            [
                74,
                0.6026666666666667,
                null,
                null
            ],
            [
                78,
                0.5665529010238908,
                null,
                null
            ],
            [
                65,
                0.5505050505050505,
                null,
                null
            ],
            [
                76,
                0.484472049689441,
                null,
                null
            ],
            [
                138,
                0.46645367412140576,
                null,
                null
            ],
            [
                15,
                0.46511627906976744,
                null,
                null
            ],
            [
                59,
                0.4430379746835443,
                null,
                null
            ],
            [
                68,
                0.4066666666666667,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 5,
        "bbox": [
            34.016000000000076,
            490.10725560000003,
            379.8437487600002,
            500.06985560000004
        ],
        "prefix": "ℓ(i)} ",
        "content": "as the pair of ground truth segmentation map and corresponding label of image ",
        "suffix": "x(i),",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": false,
        "matches": [
            [
                92,
                0.3559322033898305,
                null,
                null
            ],
            [
                88,
                0.3119266055045872,
                null,
                null
            ],
            [
                36,
                0.2545454545454545,
                null,
                null
            ],
            [
                21,
                0.1568627450980392,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 6,
        "bbox": [
            34.016000000000076,
            478.15225560000005,
            193.10723894000012,
            488.93035000000003
        ],
        "prefix": "image ",
        "content": "x(i), the final loss [5] is computed as ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                18,
                0.6067415730337079,
                null,
                null
            ],
            [
                49,
                0.5853658536585366,
                null,
                null
            ],
            [
                61,
                0.5777777777777777,
                null,
                null
            ],
            [
                67,
                0.5647058823529412,
                null,
                null
            ],
            [
                83,
                0.56,
                null,
                null
            ],
            [
                57,
                0.5531914893617021,
                null,
                null
            ],
            [
                70,
                0.5294117647058824,
                null,
                null
            ],
            [
                59,
                0.5271317829457365,
                null,
                null
            ],
            [
                72,
                0.5172413793103449,
                null,
                null
            ],
            [
                68,
                0.5132743362831859,
                null,
                null
            ],
            [
                139,
                0.5087719298245614,
                null,
                null
            ],
            [
                56,
                0.5084745762711864,
                null,
                null
            ],
            [
                88,
                0.5070422535211268,
                null,
                null
            ],
            [
                76,
                0.5037037037037037,
                null,
                null
            ],
            [
                17,
                0.5,
                null,
                null
            ],
            [
                84,
                0.5,
                null,
                null
            ],
            [
                12,
                0.4927536231884058,
                null,
                null
            ],
            [
                15,
                0.49122807017543857,
                null,
                null
            ],
            [
                98,
                0.4827586206896552,
                null,
                null
            ],
            [
                100,
                0.4827586206896552,
                null,
                null
            ],
            [
                128,
                0.4827586206896552,
                null,
                null
            ],
            [
                2,
                0.47619047619047616,
                null,
                null
            ],
            [
                138,
                0.47619047619047616,
                null,
                null
            ],
            [
                92,
                0.475,
                null,
                null
            ],
            [
                58,
                0.4642857142857143,
                null,
                null
            ],
            [
                60,
                0.45901639344262296,
                null,
                null
            ],
            [
                25,
                0.4482758620689655,
                null,
                null
            ],
            [
                28,
                0.43478260869565216,
                null,
                null
            ],
            [
                101,
                0.43478260869565216,
                null,
                null
            ],
            [
                29,
                0.4166666666666667,
                null,
                null
            ],
            [
                63,
                0.4069767441860465,
                null,
                null
            ],
            [
                99,
                0.40336134453781514,
                null,
                null
            ],
            [
                36,
                0.3888888888888889,
                null,
                null
            ],
            [
                79,
                0.38461538461538464,
                null,
                null
            ],
            [
                94,
                0.38235294117647056,
                null,
                null
            ],
            [
                103,
                0.38235294117647056,
                null,
                null
            ],
            [
                62,
                0.3793103448275862,
                null,
                null
            ],
            [
                74,
                0.3617021276595745,
                null,
                null
            ],
            [
                71,
                0.34517766497461927,
                null,
                null
            ],
            [
                65,
                0.3253588516746411,
                null,
                null
            ],
            [
                44,
                0.3063063063063063,
                null,
                null
            ],
            [
                54,
                0.2857142857142857,
                null,
                null
            ],
            [
                21,
                0.28125,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 7,
        "bbox": [
            95.434,
            452.08155,
            379.84322149999997,
            467.4118556
        ],
        "prefix": "",
        "content": "LK = λmaskLmask( ˜y(i) K, y(i)) + λclassLclass(˜ℓ(i) K, ℓ(i)), (2) ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                23,
                0.6923076923076923,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 8,
        "bbox": [
            34.01599999999996,
            432.51008279999996,
            379.84487405999994,
            443.3868556
        ],
        "prefix": "",
        "content": "where Lmask(·, ·) is a binary mask loss and Lclass(·, ·) is the corresponding clas",
        "suffix": "sification",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                24,
                0.5556623717821683,
                0,
                89
            ]
        ]
    },
    {
        "page": 4,
        "index": 9,
        "bbox": [
            34.015999999999934,
            420.5550828,
            331.78406015999997,
            431.4318556
        ],
        "prefix": "clas",
        "content": "sification loss. λmask and λclass represent the associated loss weights. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                24,
                1.0,
                89,
                150
            ]
        ]
    },
    {
        "page": 4,
        "index": 10,
        "bbox": [
            34.015999999999934,
            397.9772556,
            379.8402785199999,
            407.9398556
        ],
        "prefix": "",
        "content": "Method motivation. Our motivation stems from the observation that layers ",
        "suffix": "within",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                26,
                0.8503937007874016,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 11,
        "bbox": [
            34.015999999999934,
            386.0222556,
            379.8467375399999,
            395.9848556
        ],
        "prefix": "layers ",
        "content": "within the transformer encoder of M2F exhibit nonuniform contributions to ",
        "suffix": "Panoptic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                1.0,
                54,
                128
            ]
        ]
    },
    {
        "page": 4,
        "index": 12,
        "bbox": [
            34.015999999999934,
            374.0662556,
            379.8467375400001,
            384.0288556
        ],
        "prefix": "to ",
        "content": "Panoptic Quality (PQ) [19], as discussed in Sec. 1. This prompts us to question ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                0.46603682371152,
                54,
                141
            ]
        ]
    },
    {
        "page": 4,
        "index": 13,
        "bbox": [
            34.015999999999934,
            362.1112556,
            379.84243551999987,
            372.0738556
        ],
        "prefix": "question ",
        "content": "the necessity of all K = 6 layers for every image and target minimizing layer ",
        "suffix": "usage",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                0.7863458494806731,
                141,
                217
            ]
        ]
    },
    {
        "page": 4,
        "index": 14,
        "bbox": [
            34.01599999999996,
            350.1562556,
            379.84175623999994,
            360.1188556
        ],
        "prefix": "layer ",
        "content": "usage according to the user's computational constraints while ensuring that over",
        "suffix": "all",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                1.0,
                217,
                301
            ]
        ]
    },
    {
        "page": 4,
        "index": 15,
        "bbox": [
            34.01599999999996,
            338.2012556,
            379.8437487599999,
            348.16385560000003
        ],
        "prefix": "over",
        "content": "all performance remains within acceptable bounds. Hence, we adopt an adaptive ",
        "suffix": "early",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                0.7500008441744667,
                141,
                215
            ]
        ]
    },
    {
        "page": 4,
        "index": 16,
        "bbox": [
            34.01599999999996,
            326.24625560000004,
            291.79428996,
            336.20885560000005
        ],
        "prefix": "adaptive ",
        "content": "early exiting approach driven by three critical components: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                1.0,
                291,
                350
            ]
        ]
    },
    {
        "page": 4,
        "index": 17,
        "bbox": [
            38.22399999999996,
            306.8432556,
            379.8400583,
            316.80585560000003
        ],
        "prefix": "",
        "content": "1. Model suitability for early exiting. Traditional early exiting techniques [17, ",
        "suffix": "23,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.6923076923076923,
                0,
                74
            ]
        ]
    },
    {
        "page": 4,
        "index": 18,
        "bbox": [
            50.95199999999997,
            294.8872556,
            379.84532128,
            304.8498556
        ],
        "prefix": "[17, ",
        "content": "23, 27, 28, 30, 33, 37, 41, 44] often face challenges in maintaining satisfactory ",
        "suffix": "performance",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 19,
        "bbox": [
            50.95199999999997,
            282.9322556,
            379.8433287600001,
            292.8948556
        ],
        "prefix": "satisfactory ",
        "content": "performance levels at potential exit points throughout the neural network. ",
        "suffix": "We",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.9181929699073944,
                124,
                199
            ]
        ]
    },
    {
        "page": 4,
        "index": 20,
        "bbox": [
            50.95199999999997,
            270.97725560000003,
            379.84432501999987,
            280.93985560000004
        ],
        "prefix": "network. ",
        "content": "We recognize the importance of a model architecture that not only allows ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7974407140891283,
                50,
                123
            ]
        ]
    },
    {
        "page": 4,
        "index": 21,
        "bbox": [
            50.95199999999997,
            259.02225560000005,
            379.84033998000007,
            268.98485560000006
        ],
        "prefix": "allows ",
        "content": "for early exiting but also ensures that the performance remains consistently ",
        "suffix": "high.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                197,
                274
            ]
        ]
    },
    {
        "page": 4,
        "index": 22,
        "bbox": [
            50.95199999999997,
            247.06725560000004,
            379.8423325,
            257.0298556
        ],
        "prefix": "consistently ",
        "content": "high. Therefore, we aim to develop a model that not only permits early ",
        "suffix": "exits",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.8054723332415932,
                50,
                121
            ]
        ]
    },
    {
        "page": 4,
        "index": 23,
        "bbox": [
            50.95199999999997,
            235.11225560000003,
            379.84532127999995,
            245.0748556
        ],
        "prefix": "early ",
        "content": "exits but also for which the accuracy steadily improves as the network delves ",
        "suffix": "deeper",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                268,
                346
            ]
        ]
    },
    {
        "page": 4,
        "index": 24,
        "bbox": [
            50.95199999999997,
            223.15625560000004,
            379.84532128000006,
            233.11885560000002
        ],
        "prefix": "delves ",
        "content": "deeper into its architecture. By prioritizing this aspect, we seek to establish a ",
        "suffix": "framework",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.8054723332415932,
                50,
                132
            ]
        ]
    },
    {
        "page": 4,
        "index": 25,
        "bbox": [
            50.95199999999997,
            211.20125560000002,
            379.83834746000014,
            221.1638556
        ],
        "prefix": "a ",
        "content": "framework where early exiting does not compromise the overall performance ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.9172281622499238,
                350,
                424
            ]
        ]
    },
    {
        "page": 4,
        "index": 26,
        "bbox": [
            50.95199999999997,
            199.2462556,
            108.49597759999997,
            209.2088556
        ],
        "prefix": "performance ",
        "content": "of the model. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.5205212496559747,
                50,
                64
            ]
        ]
    },
    {
        "page": 4,
        "index": 27,
        "bbox": [
            38.22399999999997,
            187.3952556,
            379.84160842,
            197.3578556
        ],
        "prefix": "",
        "content": "2. Efficient and effective gating network for optimal exit decision making. The ",
        "suffix": "efficacy",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7706396645299025,
                64,
                141
            ]
        ]
    },
    {
        "page": 4,
        "index": 28,
        "bbox": [
            50.95199999999994,
            175.4402556,
            379.8433287599999,
            185.40285559999998
        ],
        "prefix": "The ",
        "content": "efficacy of an early exiting strategy heavily depends on the ability to make ",
        "suffix": "informed",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                441,
                518
            ]
        ]
    },
    {
        "page": 4,
        "index": 29,
        "bbox": [
            50.95199999999994,
            163.4852556,
            379.8413362400001,
            173.44785559999997
        ],
        "prefix": "make ",
        "content": "informed exit decisions. A gating network must strike a delicate balance, ",
        "suffix": "minimizing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7706396645299025,
                64,
                138
            ]
        ]
    },
    {
        "page": 4,
        "index": 30,
        "bbox": [
            50.95199999999994,
            151.53025559999998,
            379.83834745999985,
            161.49285559999996
        ],
        "prefix": "balance, ",
        "content": "minimizing computational overhead while effectively identifying components ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                515,
                590
            ]
        ]
    },
    {
        "page": 4,
        "index": 31,
        "bbox": [
            50.95199999999994,
            139.57525559999996,
            379.84233250000005,
            149.53785559999994
        ],
        "prefix": "components ",
        "content": "that can be bypassed without compromising accuracy. Our objective is to ",
        "suffix": "design",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7706396645299025,
                64,
                136
            ]
        ]
    },
    {
        "page": 4,
        "index": 32,
        "bbox": [
            50.95199999999994,
            127.61925559999996,
            379.84233250000005,
            137.58185559999995
        ],
        "prefix": "to ",
        "content": "design a lightweight yet powerful gating mechanism capable of discerning ",
        "suffix": "optimal",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.9191831152851933,
                587,
                660
            ]
        ]
    },
    {
        "page": 4,
        "index": 33,
        "bbox": [
            50.95199999999994,
            115.66425559999996,
            269.3570984999999,
            125.62685559999997
        ],
        "prefix": "discerning ",
        "content": "optimal exit points within the model architecture. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7522894548610918,
                64,
                115
            ]
        ]
    },
    {
        "page": 4,
        "index": 34,
        "bbox": [
            38.22399999999994,
            103.81425559999997,
            379.84437597999994,
            113.77685559999998
        ],
        "prefix": "",
        "content": "3. Dynamic control mechanism for costperformance tradeoff. We require a ",
        "suffix": "mechanism",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7289377853535212,
                64,
                133
            ]
        ]
    },
    {
        "page": 4,
        "index": 35,
        "bbox": [
            50.95199999999994,
            91.85825559999996,
            379.84133624,
            101.82085559999997
        ],
        "prefix": "a ",
        "content": "mechanism with the ability to adaptively regulate the balance between com",
        "suffix": "putational",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                707,
                791
            ]
        ]
    },
    {
        "page": 4,
        "index": 36,
        "bbox": [
            50.95199999999994,
            79.90325559999997,
            379.8423325,
            89.86585559999997
        ],
        "prefix": "com",
        "content": "putational cost and performance according to userdefined priorities. Such a ",
        "suffix": "mechanism",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7289377853535212,
                64,
                129
            ]
        ]
    },
    {
        "page": 4,
        "index": 37,
        "bbox": [
            50.95199999999994,
            67.94825559999997,
            379.8403399799999,
            77.91085559999998
        ],
        "prefix": "a ",
        "content": "mechanism empowers the model to exit at the optimal layer based on spe",
        "suffix": "cific",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                772,
                848
            ]
        ]
    },
    {
        "page": 4,
        "index": 38,
        "bbox": [
            50.95199999999994,
            55.993255599999976,
            379.8403399800001,
            65.95585559999998
        ],
        "prefix": "spe",
        "content": "cific needs and desired outcomes, ensuring efficient resource allocation and ",
        "suffix": "maximizing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7289377853535212,
                64,
                135
            ]
        ]
    },
    {
        "page": 4,
        "index": 39,
        "bbox": [
            50.95199999999994,
            44.03825559999998,
            379.83934372000004,
            54.00085559999997
        ],
        "prefix": "and ",
        "content": "maximizing utility in various application scenarios, particularly in resource",
        "suffix": "constrained",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                843,
                932
            ]
        ]
    },
    {
        "page": 4,
        "index": 40,
        "bbox": [
            50.95199999999994,
            32.08325559999998,
            364.69818424000005,
            42.045855599999975
        ],
        "prefix": "resource",
        "content": "constrained environments like edge computing or realtime applications. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                0.7522894548610918,
                64,
                122
            ]
        ]
    },
    {
        "page": 5,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04233152000002,
            604.2699184
        ],
        "prefix": "",
        "content": "6 M. Yao et al. ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                27,
                0.3333333333333333,
                null,
                null
            ]
        ]
    },
    {
        "page": 5,
        "index": 1,
        "bbox": [
            34.01599999999996,
            286.8215184,
            379.84692223999997,
            361.5419184
        ],
        "prefix": "the ",
        "content": "model to exit stochastically at K potential exits using Step A. This is followed by Step B, where we use this model to perform inference on the training images at each exit to create a dataset D. In the model adaptation phase, we perform Step C to establish a gating target based on the computational budget and train a lightweight gating network. During inference, the network adheres to the gating network's output and exits at its designated output layer. Fig. 3: ECOM2F framework. During the model preprocessing phase, we train the ",
        "suffix": "Step",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                22,
                0.6128625472887768,
                null,
                null
            ]
        ]
    },
    {
        "page": 5,
        "index": 2,
        "bbox": [
            48.959999999999994,
            253.05730279999997,
            379.84624556,
            263.29885559999997
        ],
        "prefix": "",
        "content": "Driven by these considerations, ECOM2F offers a novel training process that ",
        "suffix": "enables",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                28,
                0.7685941800123691,
                0,
                77
            ]
        ]
    },
    {
        "page": 5,
        "index": 3,
        "bbox": [
            34.01599999999996,
            241.3802556,
            379.8427525000001,
            251.34285559999998
        ],
        "prefix": "that ",
        "content": "enables an adaptive early exiting mechanism designed to bolster computational ",
        "suffix": "efficiency",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                28,
                1.0,
                77,
                155
            ]
        ]
    },
    {
        "page": 5,
        "index": 4,
        "bbox": [
            34.01599999999996,
            229.42525559999999,
            379.8387674599999,
            239.38785559999997
        ],
        "prefix": "computational ",
        "content": "efficiency while preserving satisfactory model accuracy. For better understand",
        "suffix": "ing,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                28,
                0.9,
                0,
                83
            ]
        ]
    },
    {
        "page": 5,
        "index": 5,
        "bbox": [
            34.01599999999996,
            217.47025559999997,
            379.84374876,
            227.43285559999995
        ],
        "prefix": "understand",
        "content": "ing, we'll begin with a general overview of model training and inference before ",
        "suffix": "diving",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                28,
                1.0,
                160,
                235
            ]
        ]
    },
    {
        "page": 5,
        "index": 6,
        "bbox": [
            34.01599999999996,
            205.51525559999996,
            268.65914024000017,
            215.47785559999994
        ],
        "prefix": "before ",
        "content": "diving into the specific details of our training process. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                28,
                0.9,
                0,
                58
            ]
        ]
    },
    {
        "page": 5,
        "index": 7,
        "bbox": [
            34.01599999999996,
            184.23925559999995,
            379.84540058,
            194.20185559999993
        ],
        "prefix": "",
        "content": "Training and Inference overview. As shown in Fig. 3, the training phase of ",
        "suffix": "ECOM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                30,
                0.43823823451690086,
                0,
                62
            ]
        ]
    },
    {
        "page": 5,
        "index": 8,
        "bbox": [
            34.01599999999996,
            172.00530279999992,
            228.23776001999997,
            182.24685559999992
        ],
        "prefix": "of ",
        "content": "ECOM2F involves following three main steps: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                30,
                0.7461614514497757,
                70,
                106
            ]
        ]
    },
    {
        "page": 5,
        "index": 9,
        "bbox": [
            34.01599999999997,
            155.65225559999993,
            352.5112889,
            165.6148555999999
        ],
        "prefix": "",
        "content": "• Step A: Train parent model for early exit via the transformer encoder. ",
        "suffix": "•",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.7405628172265316,
                0,
                76
            ]
        ]
    },
    {
        "page": 5,
        "index": 10,
        "bbox": [
            34.01599999999996,
            144.35625559999994,
            379.8439877799999,
            154.31885559999992
        ],
        "prefix": "encoder. ",
        "content": "• Step B: Derive a dataset (which we call the Derived dataset) from the dynamic ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.7863458494806731,
                0,
                83
            ]
        ]
    },
    {
        "page": 5,
        "index": 11,
        "bbox": [
            43.977999999999966,
            132.40125559999993,
            160.22461401999996,
            142.3638555999999
        ],
        "prefix": "",
        "content": "model obtained in Step A. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.8,
                0,
                23
            ]
        ]
    },
    {
        "page": 5,
        "index": 12,
        "bbox": [
            34.01599999999998,
            121.10425559999992,
            379.83916253999996,
            131.0668555999999
        ],
        "prefix": "",
        "content": "• Step C : Train the Gating Network to learn optimal exit points in the encoder ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.7484006313052547,
                8,
                90
            ]
        ]
    },
    {
        "page": 5,
        "index": 13,
        "bbox": [
            43.97799999999995,
            109.14925559999992,
            179.26811547999998,
            119.11185559999993
        ],
        "prefix": "",
        "content": "tailored to users' requirements. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                1.0,
                272,
                304
            ]
        ]
    },
    {
        "page": 5,
        "index": 14,
        "bbox": [
            34.01599999999995,
            91.85925559999991,
            379.8443503999999,
            101.82185559999992
        ],
        "prefix": "",
        "content": "We refer to Step A and B together as model preprocessing and Step C as model ",
        "suffix": "adaptation.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                0.6531551955008429,
                0,
                92
            ]
        ]
    },
    {
        "page": 5,
        "index": 15,
        "bbox": [
            34.015999999999906,
            79.90325559999991,
            379.83976258,
            89.86585559999992
        ],
        "prefix": "model ",
        "content": "adaptation. The former is required only once, whereas the latter is repeated as ",
        "suffix": "per",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                1.0,
                92,
                172
            ]
        ]
    },
    {
        "page": 5,
        "index": 16,
        "bbox": [
            34.01599999999991,
            67.94825559999991,
            326.20511036,
            77.91085559999992
        ],
        "prefix": "as ",
        "content": "per user requirements. All these steps use the training data subset. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                0.9672108883093861,
                92,
                160
            ]
        ]
    },
    {
        "page": 5,
        "index": 17,
        "bbox": [
            48.959999999999916,
            55.99325559999992,
            379.8388674600001,
            65.95585559999992
        ],
        "prefix": "",
        "content": "During inference, the gating network guides the parent model by selecting ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                33,
                0.9181929699073944,
                0,
                74
            ]
        ]
    },
    {
        "page": 5,
        "index": 18,
        "bbox": [
            34.01599999999991,
            44.03825559999992,
            379.84075997999986,
            54.000855599999916
        ],
        "prefix": "selecting ",
        "content": "the optimal exit point based on features extracted from the backbone with just ",
        "suffix": "one",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                33,
                0.9333333333333333,
                0,
                79
            ]
        ]
    },
    {
        "page": 5,
        "index": 19,
        "bbox": [
            34.01599999999991,
            32.08325559999992,
            198.3620383799999,
            42.04585559999992
        ],
        "prefix": "just ",
        "content": "one forward pass for final predictions. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                33,
                0.8571428571428571,
                0,
                39
            ]
        ]
    },
    {
        "page": 6,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.83945983999996,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 7 ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": true,
        "matches": [
            [
                37,
                0.5813953488372093,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 1,
        "bbox": [
            34.016,
            569.2072555999999,
            366.2416578400001,
            579.1698556
        ],
        "prefix": "",
        "content": "3.1 Step A: Training the Model with Weighted Stochastic Depth ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                34,
                0.6698072219246766,
                0,
                62
            ]
        ]
    },
    {
        "page": 6,
        "index": 2,
        "bbox": [
            34.015999999999984,
            549.8652556,
            379.83876746000004,
            559.8278556
        ],
        "prefix": "",
        "content": "In this step, we enable the model to allow exiting at the encoder. To main",
        "suffix": "tain",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                1.0,
                97,
                164
            ]
        ]
    },
    {
        "page": 6,
        "index": 3,
        "bbox": [
            34.015999999999984,
            537.9102555999999,
            379.8447450199999,
            547.8728556
        ],
        "prefix": "main",
        "content": "tain consistently high performance at each exit point, we input each stochastic ",
        "suffix": "depth's",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                35,
                0.38461538461538464,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 4,
        "bbox": [
            34.015999999999984,
            525.9552555999999,
            379.84574128,
            535.9178555999999
        ],
        "prefix": "stochastic ",
        "content": "depth's output to a shared transformer decoder. We then apply Eq. 2 to compute ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                0.48033741970752597,
                131,
                201
            ]
        ]
    },
    {
        "page": 6,
        "index": 5,
        "bbox": [
            34.015999999999984,
            512.6945499999998,
            379.8462999,
            523.9618555999999
        ],
        "prefix": "compute ",
        "content": "the loss Lk for each exit point k. However, we observe that direct training in this ",
        "suffix": "fashion",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                0.8451700733014037,
                208,
                277
            ]
        ]
    },
    {
        "page": 6,
        "index": 6,
        "bbox": [
            34.01599999999999,
            502.04425559999993,
            379.8447450199999,
            512.0068555999999
        ],
        "prefix": "this ",
        "content": "fashion does not encourage the model to use fewer layers to extract and prioritize ",
        "suffix": "informative",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                1.0,
                312,
                384
            ]
        ]
    },
    {
        "page": 6,
        "index": 7,
        "bbox": [
            34.01599999999999,
            490.08925559999994,
            379.8397637200001,
            500.05185559999995
        ],
        "prefix": "prioritize ",
        "content": "informative representations, as shown in Tab. 5. To address this, we introduce a ",
        "suffix": "set",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                35,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 8,
        "bbox": [
            34.01599999999999,
            476.8295499999999,
            379.83742522000006,
            488.09685559999997
        ],
        "prefix": "a ",
        "content": "set of coefficients αk to emphasize the quality of representations at later layers ",
        "suffix": "more,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                0.9071020439808422,
                392,
                462
            ]
        ]
    },
    {
        "page": 6,
        "index": 9,
        "bbox": [
            34.01599999999999,
            466.1792556,
            379.84574128000014,
            476.1418556
        ],
        "prefix": "layers ",
        "content": "more, enabling earlier layers to also concentrate on producing effective interme",
        "suffix": "diate",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                35,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 10,
        "bbox": [
            34.01599999999999,
            454.2242556,
            379.84175624000005,
            464.1868556
        ],
        "prefix": "interme",
        "content": "diate representations. As the layer depth increases, the corresponding coefficient ",
        "suffix": "αk",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                0.9090909090909091,
                468,
                539
            ]
        ]
    },
    {
        "page": 6,
        "index": 11,
        "bbox": [
            34.01599999999999,
            440.96354999999994,
            379.83696896000004,
            452.2308556
        ],
        "prefix": "coefficient ",
        "content": "αk grows, ensuring a progressively stricter standard for feature quality. The new ",
        "suffix": "loss",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                0.6428571428572771,
                336,
                408
            ]
        ]
    },
    {
        "page": 6,
        "index": 12,
        "bbox": [
            34.015999999999984,
            430.3132556,
            178.24754898000003,
            440.2758556
        ],
        "prefix": "new ",
        "content": "loss function is then expressed as ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                1.0,
                547,
                581
            ]
        ]
    },
    {
        "page": 6,
        "index": 13,
        "bbox": [
            34.01599999999996,
            368.55755,
            379.84322149999997,
            419.54834999999997
        ],
        "prefix": "",
        "content": "where N is the number of images in the training set, and Lk is from Eq. 2. Ltotal = 1 NX i KX k αkLk, where ∀k < k′, αk < αk′, (3) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^softmax(())ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                59,
                0.6,
                null,
                null
            ],
            [
                76,
                0.5929203539823009,
                null,
                null
            ],
            [
                63,
                0.5703422053231939,
                null,
                null
            ],
            [
                71,
                0.5694444444444444,
                null,
                null
            ],
            [
                15,
                0.5658536585365853,
                null,
                null
            ],
            [
                44,
                0.5431309904153354,
                null,
                null
            ],
            [
                72,
                0.5410628019323671,
                null,
                null
            ],
            [
                13,
                0.5292479108635098,
                null,
                null
            ],
            [
                138,
                0.5253456221198156,
                null,
                null
            ],
            [
                74,
                0.5089605734767025,
                null,
                null
            ],
            [
                68,
                0.5,
                null,
                null
            ],
            [
                139,
                0.4975609756097561,
                null,
                null
            ],
            [
                80,
                0.45893719806763283,
                null,
                null
            ],
            [
                18,
                0.45555555555555555,
                null,
                null
            ],
            [
                65,
                0.4533333333333333,
                null,
                null
            ],
            [
                57,
                0.44324324324324327,
                null,
                null
            ],
            [
                78,
                0.40408163265306124,
                null,
                null
            ],
            [
                61,
                0.39779005524861877,
                null,
                null
            ],
            [
                67,
                0.38636363636363635,
                null,
                null
            ],
            [
                49,
                0.3815028901734104,
                null,
                null
            ],
            [
                99,
                0.3619047619047619,
                null,
                null
            ],
            [
                12,
                0.35,
                null,
                null
            ],
            [
                2,
                0.34285714285714286,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 14,
        "bbox": [
            134.241,
            393.0982556,
            142.24594910000002,
            403.0608556
        ],
        "prefix": "",
        "content": "N ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                37,
                1.0,
                15,
                17
            ]
        ]
    },
    {
        "page": 6,
        "index": 15,
        "bbox": [
            34.01599999999996,
            340.55825560000005,
            338.6989351,
            350.52085560000006
        ],
        "prefix": "",
        "content": "3.2 Step B: Deriving the Gating Network Training Dataset ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                38,
                0.6367879441171442,
                0,
                57
            ]
        ]
    },
    {
        "page": 6,
        "index": 16,
        "bbox": [
            34.01600000000005,
            321.2162556,
            214.2583629400001,
            331.1788556
        ],
        "prefix": "",
        "content": "To facilitate informed exit decisions dur",
        "suffix": "ing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                0,
                45
            ]
        ]
    },
    {
        "page": 6,
        "index": 17,
        "bbox": [
            34.01600000000005,
            309.2612556,
            214.26234798000002,
            319.22385560000004
        ],
        "prefix": "dur",
        "content": "ing inference, our approach is to train ",
        "suffix": "a",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.75,
                0,
                36
            ]
        ]
    },
    {
        "page": 6,
        "index": 18,
        "bbox": [
            34.01600000000005,
            297.30625560000004,
            214.25736668,
            307.26885560000005
        ],
        "prefix": "train ",
        "content": "a gating network to learn optimal exit ",
        "suffix": "strategies.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                36,
                75
            ]
        ]
    },
    {
        "page": 6,
        "index": 19,
        "bbox": [
            34.01600000000005,
            285.3502556,
            214.25736668,
            295.31285560000003
        ],
        "prefix": "exit ",
        "content": "strategies. In this step, we facilitate this ",
        "suffix": "gating",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.7777777777777778,
                0,
                45
            ]
        ]
    },
    {
        "page": 6,
        "index": 20,
        "bbox": [
            34.01600000000005,
            273.39525560000004,
            214.2553741600001,
            283.35785560000005
        ],
        "prefix": "this ",
        "content": "gating network training by first deriving ",
        "suffix": "an",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                81,
                123
            ]
        ]
    },
    {
        "page": 6,
        "index": 21,
        "bbox": [
            34.01600000000005,
            261.44025560000006,
            140.06488822000003,
            271.40285560000007
        ],
        "prefix": "deriving ",
        "content": "an intermediate dataset. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.75,
                0,
                24
            ]
        ]
    },
    {
        "page": 6,
        "index": 22,
        "bbox": [
            48.96000000000005,
            249.48525560000004,
            214.26344424000007,
            259.4478556
        ],
        "prefix": "",
        "content": "To this end, we record the perfor",
        "suffix": "mance",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                1.0,
                41,
                74
            ]
        ]
    },
    {
        "page": 6,
        "index": 23,
        "bbox": [
            34.01600000000005,
            237.53025560000003,
            214.25537416000003,
            247.4928556
        ],
        "prefix": "perfor",
        "content": "mance of the pretrained stochastic depth ",
        "suffix": "model",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 24,
        "bbox": [
            34.01600000000005,
            225.57525560000002,
            214.26250064000004,
            235.5378556
        ],
        "prefix": "depth ",
        "content": "model (obtained from Step A) at all po",
        "suffix": "tential",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.539807682459376,
                72,
                113
            ]
        ]
    },
    {
        "page": 6,
        "index": 25,
        "bbox": [
            34.01600000000005,
            213.61925560000003,
            214.26334424000004,
            223.5818556
        ],
        "prefix": "po",
        "content": "tential exit points for each image within ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.8750254335461264,
                114,
                144
            ]
        ]
    },
    {
        "page": 6,
        "index": 26,
        "bbox": [
            34.01600000000005,
            201.66425560000002,
            214.26073102000004,
            211.6268556
        ],
        "prefix": "within ",
        "content": "the training dataset and create a Derived ",
        "suffix": "dataset",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                1.0,
                147,
                185
            ]
        ]
    },
    {
        "page": 6,
        "index": 27,
        "bbox": [
            34.01600000000005,
            189.7092556,
            214.25554984000004,
            199.6718556
        ],
        "prefix": "Derived ",
        "content": "dataset D. Specifically, we associate the ",
        "suffix": "ith",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 28,
        "bbox": [
            34.016000000000055,
            177.7542556,
            213.76010432000007,
            188.53234999999998
        ],
        "prefix": "the ",
        "content": "ith input image x(i) with a vector q(i) ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 29,
        "bbox": [
            34.016000000000076,
            164.4152556,
            178.83510432000006,
            176.75334999999998
        ],
        "prefix": "q(i) ",
        "content": "of length K. Each element q(i) ",
        "suffix": "k",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.2606540789806232,
                134,
                155
            ]
        ]
    },
    {
        "page": 6,
        "index": 30,
        "bbox": [
            169.43200000000007,
            161.59955,
            213.76110432000007,
            175.19334999999998
        ],
        "prefix": "q(i) ",
        "content": "k of q(i) ",
        "suffix": "represents",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 31,
        "bbox": [
            34.016000000000076,
            152.4602556,
            214.25736668000008,
            162.4228556
        ],
        "prefix": "q(i) ",
        "content": "represents the predicted panoptic qual",
        "suffix": "ity",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.5714286434782375,
                158,
                200
            ]
        ]
    },
    {
        "page": 6,
        "index": 32,
        "bbox": [
            34.016000000000076,
            140.5052556,
            214.2553741600001,
            150.46785559999998
        ],
        "prefix": "qual",
        "content": "ity [19] upon exiting at the encoder layer ",
        "suffix": "k.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.7340589621902925,
                241,
                275
            ]
        ]
    },
    {
        "page": 6,
        "index": 33,
        "bbox": [
            34.016000000000076,
            128.5492556,
            214.25817208000007,
            138.5118556
        ],
        "prefix": "layer ",
        "content": "k. Hence, each sample of D can be repre",
        "suffix": "sented",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.5606530965614953,
                160,
                201
            ]
        ]
    },
    {
        "page": 6,
        "index": 34,
        "bbox": [
            34.016000000000076,
            116.5942556,
            143.51461402000007,
            127.37335
        ],
        "prefix": "repre",
        "content": "sented as (x(i), q(i)) ∈ D. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 35,
        "bbox": [
            224.222,
            132.20951839999998,
            379.8464249600001,
            195.96991839999998
        ],
        "prefix": "",
        "content": "Fig. 4: Intuition for Eq. 4. This figure shows that prioritizing PQ would need more encoder layers, and conversely, prioritizing lesser layers would result in poorer PQ. (Backbone: SWINT; training set). ",
        "suffix": "figure",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                40,
                0.7272727272727273,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 36,
        "bbox": [
            34.016000000000076,
            87.2902556,
            247.61285428000008,
            97.2528556
        ],
        "prefix": "",
        "content": "3.3 Step C : Training for Gating Network ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                41,
                0.4853199379079381,
                0,
                40
            ]
        ]
    },
    {
        "page": 6,
        "index": 37,
        "bbox": [
            34.016000000000076,
            67.9482556,
            379.8424588800001,
            77.9108556
        ],
        "prefix": "",
        "content": "In this step, we train the gating network on dataset D (obtained from Step B) ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                0.8083450554676027,
                0,
                73
            ]
        ]
    },
    {
        "page": 6,
        "index": 38,
        "bbox": [
            34.01600000000013,
            55.993255600000005,
            379.8387674600003,
            65.9558556
        ],
        "prefix": "B) ",
        "content": "to selfselect the number of encoder layers based on the input image. Ideally, ",
        "suffix": "this",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                0.8459077105557687,
                8,
                86
            ]
        ]
    },
    {
        "page": 6,
        "index": 39,
        "bbox": [
            34.01600000000013,
            44.03825560000001,
            379.84574128,
            54.0008556
        ],
        "prefix": "Ideally, ",
        "content": "this module should allow exiting at the encoder layer which would result in ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 40,
        "bbox": [
            34.01600000000013,
            32.08325560000001,
            379.8457412800001,
            42.0458556
        ],
        "prefix": "in ",
        "content": "the highest quality segmentation map. With this in mind, we first establish the ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04233152000002,
            604.2699184
        ],
        "prefix": "",
        "content": "8 M. Yao et al. ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                43,
                0.17391304347826086,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 1,
        "bbox": [
            34.016,
            569.2072555999999,
            379.84474502000006,
            579.1698556
        ],
        "prefix": "",
        "content": "target exit for the gating network. Note that the panoptic quality generally ",
        "suffix": "increases",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                1.0,
                315,
                392
            ]
        ]
    },
    {
        "page": 7,
        "index": 2,
        "bbox": [
            34.016,
            557.2522555999999,
            379.83876746,
            567.2148556
        ],
        "prefix": "generally ",
        "content": "increases with increasing encoder layers (see Fig. 4). However, we would like the ",
        "suffix": "gating",
        "equation hit": "() = q,",
        "assigned": true,
        "matches": [
            [
                42,
                0.46956521739130436,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 3,
        "bbox": [
            34.016,
            545.2962555999999,
            379.8437487600001,
            555.2588556
        ],
        "prefix": "the ",
        "content": "gating network to prioritize increasing the panoptic quality while also reducing ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                0.9334873294797394,
                414,
                495
            ]
        ]
    },
    {
        "page": 7,
        "index": 4,
        "bbox": [
            34.016,
            533.3412555999998,
            379.83777119999996,
            543.3038555999999
        ],
        "prefix": "reducing ",
        "content": "the number of layers (to reduce the overall computations). Consequently, we ",
        "suffix": "introduce",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                0.7857142857471361,
                263,
                339
            ]
        ]
    },
    {
        "page": 7,
        "index": 5,
        "bbox": [
            34.016,
            521.3862555999998,
            379.8427525000001,
            531.3488555999999
        ],
        "prefix": "we ",
        "content": "introduce a utility function expressed as the linear combination of segmentation ",
        "suffix": "quality",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                1.0,
                490,
                571
            ]
        ]
    },
    {
        "page": 7,
        "index": 6,
        "bbox": [
            34.016,
            509.4312555999999,
            332.4885221800001,
            519.3938555999998
        ],
        "prefix": "segmentation ",
        "content": "quality and the depth of the network. This function is formulated as ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                0.9230769237874962,
                490,
                558
            ]
        ]
    },
    {
        "page": 7,
        "index": 7,
        "bbox": [
            34.01599999999996,
            461.0212556,
            379.83826347999997,
            470.9838556
        ],
        "prefix": "",
        "content": "where β serves as an adaptation factor governing the tradeoff between segmen",
        "suffix": "tation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 8,
        "bbox": [
            34.01599999999996,
            449.06625560000003,
            379.84143574,
            459.02885560000004
        ],
        "prefix": "segmen",
        "content": "tation quality and computational cost. Clearly, a higher value of β signifies a ",
        "suffix": "greater",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                0.9004664756937596,
                81,
                152
            ]
        ]
    },
    {
        "page": 7,
        "index": 9,
        "bbox": [
            34.01599999999996,
            437.1102556,
            379.84374876000004,
            447.0728556
        ],
        "prefix": "a ",
        "content": "greater emphasis on efficiency over segmentation quality. Using Eq. 4, we deter",
        "suffix": "mine",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 10,
        "bbox": [
            34.01599999999996,
            425.15525560000003,
            266.73062702,
            435.93435
        ],
        "prefix": "deter",
        "content": "mine a target exit point t(i) for each image x(i) using ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                0.5950583755648373,
                182,
                222
            ]
        ]
    },
    {
        "page": 7,
        "index": 11,
        "bbox": [
            169.504,
            481.71855,
            244.35459900000004,
            496.87235
        ],
        "prefix": "",
        "content": "u(k) = q(i) k  βk, ",
        "suffix": "",
        "equation hit": "= (()) .",
        "assigned": true,
        "matches": [
            [
                45,
                0.5185185185185185,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 12,
        "bbox": [
            367.116,
            484.5342556,
            379.84322149999997,
            494.4968556
        ],
        "prefix": "",
        "content": "(4) ",
        "suffix": "",
        "equation hit": "= (1) .",
        "assigned": true,
        "matches": [
            [
                47,
                0.5454545454545454,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 13,
        "bbox": [
            161.05,
            393.39055,
            252.80861028000004,
            412.91835
        ],
        "prefix": "",
        "content": "t(i) = arg max k (u(k)) . ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.49122807017543857,
                null,
                null
            ],
            [
                92,
                0.48484848484848486,
                null,
                null
            ],
            [
                128,
                0.4383561643835616,
                null,
                null
            ],
            [
                70,
                0.4074074074074074,
                null,
                null
            ],
            [
                56,
                0.4,
                null,
                null
            ],
            [
                83,
                0.39344262295081966,
                null,
                null
            ],
            [
                49,
                0.38235294117647056,
                null,
                null
            ],
            [
                18,
                0.37333333333333335,
                null,
                null
            ],
            [
                2,
                0.37142857142857144,
                null,
                null
            ],
            [
                61,
                0.3684210526315789,
                null,
                null
            ],
            [
                67,
                0.36619718309859156,
                null,
                null
            ],
            [
                57,
                0.35,
                null,
                null
            ],
            [
                84,
                0.34285714285714286,
                null,
                null
            ],
            [
                12,
                0.32727272727272727,
                null,
                null
            ],
            [
                28,
                0.32727272727272727,
                null,
                null
            ],
            [
                101,
                0.32727272727272727,
                null,
                null
            ],
            [
                15,
                0.32,
                null,
                null
            ],
            [
                21,
                0.32,
                null,
                null
            ],
            [
                62,
                0.3181818181818182,
                null,
                null
            ],
            [
                29,
                0.3103448275862069,
                null,
                null
            ],
            [
                36,
                0.3103448275862069,
                null,
                null
            ],
            [
                138,
                0.30357142857142855,
                null,
                null
            ],
            [
                139,
                0.3,
                null,
                null
            ],
            [
                60,
                0.2978723404255319,
                null,
                null
            ],
            [
                59,
                0.2956521739130435,
                null,
                null
            ],
            [
                72,
                0.29411764705882354,
                null,
                null
            ],
            [
                98,
                0.273972602739726,
                null,
                null
            ],
            [
                100,
                0.273972602739726,
                null,
                null
            ],
            [
                25,
                0.2727272727272727,
                null,
                null
            ],
            [
                76,
                0.2644628099173554,
                null,
                null
            ],
            [
                79,
                0.2631578947368421,
                null,
                null
            ],
            [
                17,
                0.2608695652173913,
                null,
                null
            ],
            [
                94,
                0.25925925925925924,
                null,
                null
            ],
            [
                103,
                0.25925925925925924,
                null,
                null
            ],
            [
                145,
                0.25,
                null,
                null
            ],
            [
                68,
                0.24242424242424243,
                null,
                null
            ],
            [
                58,
                0.23809523809523808,
                null,
                null
            ],
            [
                54,
                0.22857142857142856,
                null,
                null
            ],
            [
                99,
                0.22857142857142856,
                null,
                null
            ],
            [
                63,
                0.20253164556962025,
                null,
                null
            ],
            [
                9,
                0.1875,
                null,
                null
            ],
            [
                71,
                0.18579234972677597,
                null,
                null
            ],
            [
                30,
                0.17647058823529413,
                null,
                null
            ],
            [
                31,
                0.17647058823529413,
                null,
                null
            ],
            [
                74,
                0.1724137931034483,
                null,
                null
            ],
            [
                65,
                0.1641025641025641,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 14,
        "bbox": [
            367.116,
            401.6422556,
            379.84322149999997,
            411.6048556
        ],
        "prefix": "",
        "content": "(5) ",
        "suffix": "",
        "equation hit": "() = q,",
        "assigned": true,
        "matches": [
            [
                45,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 15,
        "bbox": [
            34.01599999999996,
            372.7892556,
            379.84075998000003,
            382.7518556
        ],
        "prefix": "",
        "content": "With a target designated for each image using Eq. 5, the gating decision can be ",
        "suffix": "approached",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                46,
                0.7584584552022883,
                0,
                92
            ]
        ]
    },
    {
        "page": 7,
        "index": 16,
        "bbox": [
            34.01599999999996,
            360.8342556,
            379.84075998000003,
            370.7968556
        ],
        "prefix": "be ",
        "content": "approached as a straightforward classification problem. The gating architecture ",
        "suffix": "consists",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                46,
                1.0,
                92,
                172
            ]
        ]
    },
    {
        "page": 7,
        "index": 17,
        "bbox": [
            34.01599999999996,
            348.8792556,
            379.84625659999995,
            358.84185560000003
        ],
        "prefix": "architecture ",
        "content": "consists of a pooling operation z(·) on the token length dimension followed by a ",
        "suffix": "linear",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                46,
                0.7639456350092768,
                0,
                80
            ]
        ]
    },
    {
        "page": 7,
        "index": 18,
        "bbox": [
            34.015999999999934,
            336.92425560000004,
            330.1937439999999,
            346.88685560000005
        ],
        "prefix": "a ",
        "content": "linear layer with weights W . Its output logits can be represented as ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                46,
                0.9004664756937595,
                172,
                239
            ]
        ]
    },
    {
        "page": 7,
        "index": 19,
        "bbox": [
            34.01599999999996,
            288.5142556,
            379.84574127999997,
            298.4768556
        ],
        "prefix": "",
        "content": "In consideration of having minimal impact on the computations due to the gating ",
        "suffix": "network,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.9285714285714286,
                0,
                80
            ]
        ]
    },
    {
        "page": 7,
        "index": 20,
        "bbox": [
            34.01599999999996,
            275.25354999999996,
            379.84563005999996,
            286.5208556
        ],
        "prefix": "gating ",
        "content": "network, we use the output of the lowest resolution feature map s1 as input to the ",
        "suffix": "pooling",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.9225850366507018,
                80,
                162
            ]
        ]
    },
    {
        "page": 7,
        "index": 21,
        "bbox": [
            34.01599999999996,
            264.6032556,
            379.8407599799999,
            274.5658556
        ],
        "prefix": "the ",
        "content": "pooling operation. To optimize the gating network, we use the standard cross",
        "suffix": "entropy",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.9697331276702025,
                80,
                164
            ]
        ]
    },
    {
        "page": 7,
        "index": 22,
        "bbox": [
            34.01599999999996,
            252.64825559999997,
            379.8416243799999,
            263.42634999999996
        ],
        "prefix": "cross",
        "content": "entropy loss between the output logits g(i) and the onehot version of target exit ",
        "suffix": "t(i)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.6686987906571437,
                0,
                69
            ]
        ]
    },
    {
        "page": 7,
        "index": 23,
        "bbox": [
            34.01599999999996,
            240.69325559999996,
            379.83862473999983,
            251.47134999999994
        ],
        "prefix": "exit ",
        "content": "t(i) as our training objective. During inference, the gating network identifies the ",
        "suffix": "layer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.8,
                0,
                79
            ]
        ]
    },
    {
        "page": 7,
        "index": 24,
        "bbox": [
            169.895,
            309.55955,
            243.96361028,
            324.36535
        ],
        "prefix": "",
        "content": "g(i) = W z(s(i) 1 ) . ",
        "suffix": "",
        "equation hit": "= (()) .",
        "assigned": true,
        "matches": [
            [
                46,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 25,
        "bbox": [
            367.116,
            312.0272556,
            379.84322149999997,
            321.9898556
        ],
        "prefix": "",
        "content": "(6) ",
        "suffix": "",
        "equation hit": "() = q,",
        "assigned": true,
        "matches": [
            [
                47,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 26,
        "bbox": [
            34.01599999999996,
            225.10854999999995,
            285.59810431999995,
            239.69234999999995
        ],
        "prefix": "the ",
        "content": "layer with the highest predicted logits, i.e., arg maxk(g(i) ",
        "suffix": "k",
        "equation hit": "= (()) .",
        "assigned": true,
        "matches": [
            [
                48,
                0.875,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 27,
        "bbox": [
            276.19499999999994,
            224.53854999999996,
            379.84659963999997,
            237.31685559999994
        ],
        "prefix": "maxk(g(i) ",
        "content": "k ), as the optimal exit ",
        "suffix": "layer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.2737371815034766,
                51,
                71
            ]
        ]
    },
    {
        "page": 7,
        "index": 28,
        "bbox": [
            34.01599999999996,
            215.39925559999995,
            379.84294332,
            226.17834999999994
        ],
        "prefix": "exit ",
        "content": "layer for image x(i). Note that while there can be more complex choices for the ",
        "suffix": "gating",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.8537710800650802,
                299,
                375
            ]
        ]
    },
    {
        "page": 7,
        "index": 29,
        "bbox": [
            34.01599999999996,
            203.44425559999993,
            376.75733528000006,
            213.40685559999991
        ],
        "prefix": "the ",
        "content": "gating network, our simple linear layer in Eq. 6 works well in our experiments. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.7668809816272036,
                299,
                390
            ]
        ]
    },
    {
        "page": 7,
        "index": 30,
        "bbox": [
            34.01599999999996,
            175.26630279999992,
            379.84025858,
            185.5078555999999
        ],
        "prefix": "",
        "content": "Saving training costs through Step C . ECOM2F presents a distinct ad",
        "suffix": "vantage",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 31,
        "bbox": [
            34.01599999999999,
            163.58925559999994,
            379.8467375400001,
            173.55185559999993
        ],
        "prefix": "ad",
        "content": "vantage in terms of its adaptability to varying computational constraints. In ",
        "suffix": "scenarios",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                1.0,
                38,
                108
            ]
        ]
    },
    {
        "page": 7,
        "index": 32,
        "bbox": [
            34.01599999999999,
            151.35530279999992,
            379.83868502,
            161.5968555999999
        ],
        "prefix": "In ",
        "content": "scenarios where a smaller model is desired, ECOM2F necessitates training solely ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.6364207932989571,
                38,
                119
            ]
        ]
    },
    {
        "page": 7,
        "index": 33,
        "bbox": [
            34.01600000000002,
            139.67925559999992,
            379.84503354,
            149.6418555999999
        ],
        "prefix": "solely ",
        "content": "the gating network (i.e., repeat Step C ). Assuming that the computational load ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.4924403794353424,
                38,
                121
            ]
        ]
    },
    {
        "page": 7,
        "index": 34,
        "bbox": [
            34.01600000000002,
            127.72425559999989,
            379.84574127999997,
            137.6868555999999
        ],
        "prefix": "load ",
        "content": "is proportional to the depth of the network, Eq. 4 enables us to weigh the perfor",
        "suffix": "mance",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 35,
        "bbox": [
            34.01600000000002,
            115.7692555999999,
            379.8447450200001,
            125.7318555999999
        ],
        "prefix": "perfor",
        "content": "mance gain against the computational overhead for each exit layer. We achieve ",
        "suffix": "this",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                1.0,
                306,
                378
            ]
        ]
    },
    {
        "page": 7,
        "index": 36,
        "bbox": [
            34.01600000000002,
            103.8142555999999,
            379.84419856000005,
            113.7768555999999
        ],
        "prefix": "achieve ",
        "content": "this by setting the total number of layers K to a smaller number depending ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.7879081662323588,
                306,
                379
            ]
        ]
    },
    {
        "page": 7,
        "index": 37,
        "bbox": [
            34.01600000000002,
            91.8582555999999,
            379.84519552,
            101.8208555999999
        ],
        "prefix": "depending ",
        "content": "on user preferences. For instance, as illustrated in Fig. 3, User X preferring a ",
        "suffix": "smaller",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 38,
        "bbox": [
            34.01599999999996,
            78.5985499999999,
            379.8426140199999,
            89.8658555999999
        ],
        "prefix": "a ",
        "content": "smaller model compared to User Y may opt for a smaller K, i.e., KX < KY . ",
        "suffix": "Then,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 39,
        "bbox": [
            34.015999999999906,
            67.9482555999999,
            379.8429737199999,
            77.9108555999999
        ],
        "prefix": ". ",
        "content": "Then, given the importance of segmentation quality, we choose β. With these ",
        "suffix": "two",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.8571428571428571,
                471,
                547
            ]
        ]
    },
    {
        "page": 7,
        "index": 40,
        "bbox": [
            34.015999999999906,
            55.993255599999905,
            379.8387674599999,
            65.95585559999991
        ],
        "prefix": "these ",
        "content": "two variables set in Eq. 5, we train the gating network. This capability shows ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.6959584552022883,
                471,
                562
            ]
        ]
    },
    {
        "page": 7,
        "index": 41,
        "bbox": [
            34.015999999999906,
            43.7593027999999,
            379.84370781999996,
            54.0008555999999
        ],
        "prefix": "shows ",
        "content": "that ECOM2F is versatile and resourceefficient as it adapts to diverse needs and ",
        "suffix": "optimizes",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.6815420106766872,
                307,
                389
            ]
        ]
    },
    {
        "page": 7,
        "index": 42,
        "bbox": [
            34.01599999999991,
            32.08325559999991,
            127.3625732199999,
            42.0458555999999
        ],
        "prefix": "and ",
        "content": "optimizes allocations. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                1.0,
                793,
                815
            ]
        ]
    },
    {
        "page": 8,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.83945983999996,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 9 ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                50,
                0.30434782608695654,
                null,
                null
            ]
        ]
    },
    {
        "page": 8,
        "index": 1,
        "bbox": [
            34.016,
            569.2072555999999,
            106.23887244,
            579.1698556
        ],
        "prefix": "",
        "content": "3.4 Inference ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                51,
                0.3333333333333333,
                0,
                9
            ]
        ]
    },
    {
        "page": 8,
        "index": 2,
        "bbox": [
            34.016,
            547.8592556,
            379.84474501999995,
            557.8218556
        ],
        "prefix": "",
        "content": "In the inference phase, the gating network guides the parent model toward an ",
        "suffix": "optimal",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.9382382345169009,
                0,
                77
            ]
        ]
    },
    {
        "page": 8,
        "index": 3,
        "bbox": [
            34.016,
            535.9042555999999,
            379.8387674600001,
            545.8668556
        ],
        "prefix": "an ",
        "content": "optimal exit point tailored to each input image. Similar to the training phase, ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.8815420106765619,
                0,
                80
            ]
        ]
    },
    {
        "page": 8,
        "index": 4,
        "bbox": [
            34.016,
            523.9492555999999,
            379.84474502,
            533.9118556
        ],
        "prefix": "phase, ",
        "content": "the gating mechanism receives lowresolution features from the backbone and ",
        "suffix": "produces",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                80,
                155
            ]
        ]
    },
    {
        "page": 8,
        "index": 5,
        "bbox": [
            34.016,
            511.9942555999999,
            379.84123009999996,
            521.9568555999999
        ],
        "prefix": "and ",
        "content": "produces a vector of length K for each image. The value of K remains consistent ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.7772389011426627,
                0,
                76
            ]
        ]
    },
    {
        "page": 8,
        "index": 6,
        "bbox": [
            34.01600000000002,
            500.0382555999999,
            379.83800288,
            510.0008555999999
        ],
        "prefix": "consistent ",
        "content": "with that determined in Step C . Subsequently, the gating network identifies the ",
        "suffix": "layer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.6911919627447628,
                0,
                85
            ]
        ]
    },
    {
        "page": 8,
        "index": 7,
        "bbox": [
            34.01600000000002,
            488.0832555999999,
            379.8407599799999,
            498.0458555999999
        ],
        "prefix": "the ",
        "content": "layer with the highest predicted logits as the optimal exit layer for each image. ",
        "suffix": "The",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                241,
                323
            ]
        ]
    },
    {
        "page": 8,
        "index": 8,
        "bbox": [
            34.01600000000002,
            476.12825559999993,
            379.84673753999994,
            486.09085559999994
        ],
        "prefix": "image. ",
        "content": "The parent model adheres to this decision, exiting at the determined layer, and ",
        "suffix": "subsequently",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.9333415606536057,
                241,
                321
            ]
        ]
    },
    {
        "page": 8,
        "index": 9,
        "bbox": [
            34.01600000000002,
            464.17325559999995,
            379.83976372,
            474.13585559999996
        ],
        "prefix": "and ",
        "content": "subsequently progresses through the subsequent components to make the final ",
        "suffix": "prediction.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.8333333333333334,
                0,
                76
            ]
        ]
    },
    {
        "page": 8,
        "index": 10,
        "bbox": [
            34.01600000000002,
            452.21825559999996,
            379.84374876000004,
            462.1808556
        ],
        "prefix": "final ",
        "content": "prediction. This dynamic process ensures that the model adaptively selects the ",
        "suffix": "most",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                317,
                396
            ]
        ]
    },
    {
        "page": 8,
        "index": 11,
        "bbox": [
            34.01600000000002,
            440.2632556,
            379.84474502000006,
            450.2258556
        ],
        "prefix": "the ",
        "content": "most optimal layer for exit during inference, enhancing its efficiency in handling ",
        "suffix": "diverse",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.9718950471223309,
                317,
                400
            ]
        ]
    },
    {
        "page": 8,
        "index": 12,
        "bbox": [
            34.01600000000002,
            428.30725559999996,
            115.99524662000002,
            438.26985559999997
        ],
        "prefix": "handling ",
        "content": "diverse input data. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.75,
                0,
                19
            ]
        ]
    },
    {
        "page": 8,
        "index": 13,
        "bbox": [
            34.01600000000002,
            394.61869119999994,
            128.28633856000002,
            406.57389119999993
        ],
        "prefix": "",
        "content": "4 Experiments ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                53,
                0.5,
                0,
                11
            ]
        ]
    },
    {
        "page": 8,
        "index": 14,
        "bbox": [
            34.01600000000002,
            369.3933027999999,
            379.84648396,
            379.6348555999999
        ],
        "prefix": "",
        "content": "Datasets. Our study illustrates the adaptability of ECOM2F in dynamically ",
        "suffix": "managing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.7475572872862208,
                0,
                65
            ]
        ]
    },
    {
        "page": 8,
        "index": 15,
        "bbox": [
            34.01600000000002,
            357.71725559999993,
            379.83777120000013,
            367.67985559999994
        ],
        "prefix": "dynamically ",
        "content": "managing the tradeoff between computation and performance based on M2F [5] ",
        "suffix": "metaarchitecture.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.8158869738240487,
                0,
                71
            ]
        ]
    },
    {
        "page": 8,
        "index": 16,
        "bbox": [
            34.01600000000002,
            345.76225559999995,
            379.83876746,
            355.72485559999996
        ],
        "prefix": "[5] ",
        "content": "metaarchitecture. We do this on two widely used image segmentation datasets: ",
        "suffix": "COCO",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.8565642525566625,
                0,
                77
            ]
        ]
    },
    {
        "page": 8,
        "index": 17,
        "bbox": [
            34.01600000000002,
            333.80725559999996,
            379.8467375400001,
            343.76985559999997
        ],
        "prefix": "datasets: ",
        "content": "COCO [21] and Cityscapes [7]. COCO comprises 80 ''things'' and 53 ''stuff'' cat",
        "suffix": "egories,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.8006874378644877,
                0,
                80
            ]
        ]
    },
    {
        "page": 8,
        "index": 18,
        "bbox": [
            34.01600000000002,
            321.85125559999994,
            379.84374876000015,
            331.81385559999995
        ],
        "prefix": "cat",
        "content": "egories, with 118k training images and 5k validation images. Cityscapes consists ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.9191831152851933,
                293,
                365
            ]
        ]
    },
    {
        "page": 8,
        "index": 19,
        "bbox": [
            34.01600000000002,
            309.89625559999996,
            379.8387674600001,
            319.85885559999997
        ],
        "prefix": "consists ",
        "content": "of 8 ''things'' and 11 ''stuff'' categories, with approximately 3k training images ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.8889196157983414,
                80,
                163
            ]
        ]
    },
    {
        "page": 8,
        "index": 20,
        "bbox": [
            34.01600000000002,
            297.9412556,
            379.0138641800001,
            307.9038556
        ],
        "prefix": "images ",
        "content": "and 500 validation images. The evaluation is conducted over the union of ''things'' ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                1.0,
                376,
                460
            ]
        ]
    },
    {
        "page": 8,
        "index": 21,
        "bbox": [
            34.01600000000002,
            285.9862556,
            129.55434522000002,
            295.9488556
        ],
        "prefix": "''things'' ",
        "content": "and ''stuff'' categories. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.9209849301464303,
                80,
                105
            ]
        ]
    },
    {
        "page": 8,
        "index": 22,
        "bbox": [
            34.01600000000002,
            260.6532556,
            379.84601222000003,
            270.61585560000003
        ],
        "prefix": "",
        "content": "Evaluation metrics. We follow the evaluation setting of [5] for evaluation of ",
        "suffix": "''universal''",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 8,
        "index": 23,
        "bbox": [
            34.016000000000005,
            248.6982556,
            379.84307776,
            258.6608556
        ],
        "prefix": "of ",
        "content": "''universal'' segmentation, i.e., we train the model solely with panoptic segmenta",
        "suffix": "tion",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.8245252960780962,
                54,
                140
            ]
        ]
    },
    {
        "page": 8,
        "index": 24,
        "bbox": [
            34.01599999999999,
            236.7432556,
            379.84175623999994,
            246.70585559999998
        ],
        "prefix": "segmenta",
        "content": "tion annotations but evaluate it for panoptic, semantic, and instance segmenta",
        "suffix": "tion",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                1.0,
                140,
                218
            ]
        ]
    },
    {
        "page": 8,
        "index": 25,
        "bbox": [
            34.01599999999999,
            224.78825559999999,
            379.84104854000003,
            234.75085559999997
        ],
        "prefix": "segmenta",
        "content": "tion tasks. We use the standard PQ (Panoptic Quality [19]) metric to evaluate ",
        "suffix": "panoptic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.9129081662320396,
                218,
                287
            ]
        ]
    },
    {
        "page": 8,
        "index": 26,
        "bbox": [
            34.01599999999999,
            211.52754999999996,
            379.84004014,
            222.79585559999995
        ],
        "prefix": "evaluate ",
        "content": "panoptic segmentation performance. We report APp (Average Precision [21]) ",
        "suffix": "computed",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.8182098494719194,
                218,
                288
            ]
        ]
    },
    {
        "page": 8,
        "index": 27,
        "bbox": [
            34.01600000000002,
            199.57254999999998,
            379.83911732,
            210.83985559999996
        ],
        "prefix": "[21]) ",
        "content": "computed across all categories for instance segmentation, and mIOUp(mean In",
        "suffix": "tersection",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.7692307778873212,
                218,
                304
            ]
        ]
    },
    {
        "page": 8,
        "index": 28,
        "bbox": [
            34.01600000000002,
            188.92225559999997,
            379.8397637200001,
            198.88485559999995
        ],
        "prefix": "In",
        "content": "tersection over Union [9]) for semantic segmentation by merging instance masks ",
        "suffix": "from",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.6620408286344468,
                218,
                283
            ]
        ]
    },
    {
        "page": 8,
        "index": 29,
        "bbox": [
            34.01600000000002,
            176.96725559999996,
            379.84126334,
            186.92985559999994
        ],
        "prefix": "masks ",
        "content": "from the same category. The subscript p denotes that these metrics are computed ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                1.0,
                508,
                588
            ]
        ]
    },
    {
        "page": 8,
        "index": 30,
        "bbox": [
            34.01600000000005,
            165.01225559999995,
            379.83876746000004,
            174.97485559999993
        ],
        "prefix": "computed ",
        "content": "for the model trained solely with panoptic segmentation annotations. In terms of ",
        "suffix": "computational",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.9285746714235544,
                508,
                589
            ]
        ]
    },
    {
        "page": 8,
        "index": 31,
        "bbox": [
            34.01600000000005,
            153.05725559999993,
            379.83976372000024,
            163.01985559999991
        ],
        "prefix": "of ",
        "content": "computational cost, we use GFLOPs calculated as the average GFLOPs across ",
        "suffix": "all",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.9230769230769232,
                508,
                582
            ]
        ]
    },
    {
        "page": 8,
        "index": 32,
        "bbox": [
            34.01600000000005,
            141.10125559999994,
            379.83786418,
            151.06385559999993
        ],
        "prefix": "across ",
        "content": "all validation images. All models are trained on the train split and evaluated on ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.937504678239368,
                508,
                590
            ]
        ]
    },
    {
        "page": 8,
        "index": 33,
        "bbox": [
            34.01600000000002,
            129.14625559999993,
            119.39578216000002,
            139.1088555999999
        ],
        "prefix": "on ",
        "content": "the validation split. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.5000041754251976,
                140,
                161
            ]
        ]
    },
    {
        "page": 8,
        "index": 34,
        "bbox": [
            34.01600000000003,
            103.53530279999993,
            379.84617624000003,
            113.77685559999993
        ],
        "prefix": "",
        "content": "Baseline models. We compare ECOM2F with two sets of efficient segmentation ",
        "suffix": "methods.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 8,
        "index": 35,
        "bbox": [
            34.01600000000005,
            91.85825559999992,
            379.8414986200001,
            101.82085559999993
        ],
        "prefix": "segmentation ",
        "content": "methods. First, we compare with our baseline universal segmentation architec",
        "suffix": "ture",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                57,
                138
            ]
        ]
    },
    {
        "page": 8,
        "index": 36,
        "bbox": [
            34.01600000000006,
            79.90325559999992,
            379.84474502000006,
            89.86585559999993
        ],
        "prefix": "architec",
        "content": "ture M2F [5]. Further, we also integrate recently proposed transformer encoder ",
        "suffix": "designs",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.7398184350962212,
                57,
                128
            ]
        ]
    },
    {
        "page": 8,
        "index": 37,
        "bbox": [
            34.01600000000006,
            67.94825559999992,
            379.84673754000005,
            77.91085559999993
        ],
        "prefix": "encoder ",
        "content": "designs (LiteDETR [20] and RTDETR [24]) for efficient object detection into ",
        "suffix": "M2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.6149446877309006,
                57,
                124
            ]
        ]
    },
    {
        "page": 8,
        "index": 38,
        "bbox": [
            34.01600000000006,
            55.993255599999934,
            379.84388652000007,
            65.95585559999994
        ],
        "prefix": "into ",
        "content": "M2F and named them LiteM2F and RTM2F, respectively. Second, we include ",
        "suffix": "comparisons",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                195,
                266
            ]
        ]
    },
    {
        "page": 8,
        "index": 39,
        "bbox": [
            34.016000000000076,
            44.038255599999935,
            379.8417562400002,
            54.00085559999993
        ],
        "prefix": "include ",
        "content": "comparisons with recent efficient architectures that proposed taskspecific com",
        "suffix": "ponents,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.8000045399929763,
                124,
                211
            ]
        ]
    },
    {
        "page": 8,
        "index": 40,
        "bbox": [
            34.016000000000076,
            32.08325559999994,
            305.89834278000023,
            42.04585559999993
        ],
        "prefix": "com",
        "content": "ponents, namely YOSO [15], RAPSAM [40], and ReMax [26]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04053824,
            604.2699184
        ],
        "prefix": "",
        "content": "10 M. Yao et al. ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                2,
                0.4918032786885246,
                null,
                null
            ],
            [
                83,
                0.46153846153846156,
                null,
                null
            ],
            [
                36,
                0.4489795918367347,
                null,
                null
            ],
            [
                56,
                0.4444444444444444,
                null,
                null
            ],
            [
                25,
                0.4,
                null,
                null
            ],
            [
                70,
                0.4,
                null,
                null
            ],
            [
                54,
                0.38461538461538464,
                null,
                null
            ],
            [
                17,
                0.3783783783783784,
                null,
                null
            ],
            [
                49,
                0.3728813559322034,
                null,
                null
            ],
            [
                58,
                0.36363636363636365,
                null,
                null
            ],
            [
                84,
                0.36065573770491804,
                null,
                null
            ],
            [
                67,
                0.3548387096774194,
                null,
                null
            ],
            [
                12,
                0.34782608695652173,
                null,
                null
            ],
            [
                101,
                0.34782608695652173,
                null,
                null
            ],
            [
                128,
                0.34375,
                null,
                null
            ],
            [
                18,
                0.3333333333333333,
                null,
                null
            ],
            [
                61,
                0.3283582089552239,
                null,
                null
            ],
            [
                29,
                0.32653061224489793,
                null,
                null
            ],
            [
                72,
                0.3225806451612903,
                null,
                null
            ],
            [
                31,
                0.32,
                null,
                null
            ],
            [
                60,
                0.3157894736842105,
                null,
                null
            ],
            [
                57,
                0.30985915492957744,
                null,
                null
            ],
            [
                21,
                0.2926829268292683,
                null,
                null
            ],
            [
                88,
                0.2916666666666667,
                null,
                null
            ],
            [
                62,
                0.2857142857142857,
                null,
                null
            ],
            [
                98,
                0.28125,
                null,
                null
            ],
            [
                100,
                0.28125,
                null,
                null
            ],
            [
                79,
                0.27586206896551724,
                null,
                null
            ],
            [
                59,
                0.2641509433962264,
                null,
                null
            ],
            [
                144,
                0.25806451612903225,
                null,
                null
            ],
            [
                15,
                0.24175824175824176,
                null,
                null
            ],
            [
                139,
                0.24175824175824176,
                null,
                null
            ],
            [
                138,
                0.23300970873786409,
                null,
                null
            ],
            [
                68,
                0.2222222222222222,
                null,
                null
            ],
            [
                94,
                0.2222222222222222,
                null,
                null
            ],
            [
                103,
                0.2222222222222222,
                null,
                null
            ],
            [
                28,
                0.21739130434782608,
                null,
                null
            ],
            [
                127,
                0.21428571428571427,
                null,
                null
            ],
            [
                92,
                0.21052631578947367,
                null,
                null
            ],
            [
                122,
                0.20689655172413793,
                null,
                null
            ],
            [
                86,
                0.2,
                null,
                null
            ],
            [
                76,
                0.19642857142857142,
                null,
                null
            ],
            [
                99,
                0.1875,
                null,
                null
            ],
            [
                133,
                0.17647058823529413,
                null,
                null
            ],
            [
                63,
                0.174496644295302,
                null,
                null
            ],
            [
                9,
                0.17391304347826086,
                null,
                null
            ],
            [
                145,
                0.17391304347826086,
                null,
                null
            ],
            [
                142,
                0.16666666666666666,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 1,
        "bbox": [
            34.016,
            554.1535184,
            379.84256416,
            580.6579184000001
        ],
        "prefix": "",
        "content": "Table 1: COCO evaluation. Our method, Taskspecific architectures method, Taskspecific architectures Table 2: Cityscapes evaluation. Our ",
        "suffix": "method,",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                74,
                0.7323943661971831,
                null,
                null
            ],
            [
                71,
                0.7303754266211604,
                null,
                null
            ],
            [
                65,
                0.7081967213114754,
                null,
                null
            ],
            [
                63,
                0.7014925373134329,
                null,
                null
            ],
            [
                44,
                0.660377358490566,
                null,
                null
            ],
            [
                76,
                0.6320346320346321,
                null,
                null
            ],
            [
                138,
                0.6216216216216216,
                null,
                null
            ],
            [
                13,
                0.6153846153846154,
                null,
                null
            ],
            [
                59,
                0.5955555555555555,
                null,
                null
            ],
            [
                15,
                0.5714285714285714,
                null,
                null
            ],
            [
                68,
                0.5645933014354066,
                null,
                null
            ],
            [
                80,
                0.5536992840095465,
                null,
                null
            ],
            [
                139,
                0.5523809523809524,
                null,
                null
            ],
            [
                72,
                0.5283018867924528,
                null,
                null
            ],
            [
                78,
                0.4888888888888889,
                null,
                null
            ],
            [
                18,
                0.4864864864864865,
                null,
                null
            ],
            [
                57,
                0.47368421052631576,
                null,
                null
            ],
            [
                67,
                0.4419889502762431,
                null,
                null
            ],
            [
                99,
                0.42790697674418604,
                null,
                null
            ],
            [
                61,
                0.40860215053763443,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 2,
        "bbox": [
            37.155285379999995,
            531.095591702608,
            204.22626774893124,
            541.542237070912
        ],
        "prefix": "",
        "content": "Model PQ mIoUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                36,
                0.30303030303030304,
                null,
                null
            ],
            [
                88,
                0.27692307692307694,
                null,
                null
            ],
            [
                92,
                0.24324324324324326,
                null,
                null
            ],
            [
                21,
                0.1724137931034483,
                null,
                null
            ],
            [
                23,
                0,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 3,
        "bbox": [
            99.58952798000001,
            539.091541918912,
            200.05648249017923,
            545.394293470912
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                128,
                0.5135135135135135,
                null,
                null
            ],
            [
                83,
                0.4838709677419355,
                null,
                null
            ],
            [
                70,
                0.4727272727272727,
                null,
                null
            ],
            [
                101,
                0.42857142857142855,
                null,
                null
            ],
            [
                17,
                0.425531914893617,
                null,
                null
            ],
            [
                18,
                0.42105263157894735,
                null,
                null
            ],
            [
                127,
                0.42105263157894735,
                null,
                null
            ],
            [
                67,
                0.4166666666666667,
                null,
                null
            ],
            [
                29,
                0.4067796610169492,
                null,
                null
            ],
            [
                84,
                0.39436619718309857,
                null,
                null
            ],
            [
                12,
                0.39285714285714285,
                null,
                null
            ],
            [
                56,
                0.391304347826087,
                null,
                null
            ],
            [
                88,
                0.3793103448275862,
                null,
                null
            ],
            [
                49,
                0.37681159420289856,
                null,
                null
            ],
            [
                58,
                0.37209302325581395,
                null,
                null
            ],
            [
                28,
                0.35714285714285715,
                null,
                null
            ],
            [
                98,
                0.35135135135135137,
                null,
                null
            ],
            [
                100,
                0.35135135135135137,
                null,
                null
            ],
            [
                61,
                0.33766233766233766,
                null,
                null
            ],
            [
                60,
                0.3333333333333333,
                null,
                null
            ],
            [
                92,
                0.3283582089552239,
                null,
                null
            ],
            [
                2,
                0.30985915492957744,
                null,
                null
            ],
            [
                79,
                0.3076923076923077,
                null,
                null
            ],
            [
                36,
                0.3050847457627119,
                null,
                null
            ],
            [
                68,
                0.3,
                null,
                null
            ],
            [
                15,
                0.297029702970297,
                null,
                null
            ],
            [
                57,
                0.2962962962962963,
                null,
                null
            ],
            [
                59,
                0.29310344827586204,
                null,
                null
            ],
            [
                138,
                0.2831858407079646,
                null,
                null
            ],
            [
                99,
                0.2830188679245283,
                null,
                null
            ],
            [
                139,
                0.27722772277227725,
                null,
                null
            ],
            [
                21,
                0.27450980392156865,
                null,
                null
            ],
            [
                25,
                0.26666666666666666,
                null,
                null
            ],
            [
                62,
                0.26666666666666666,
                null,
                null
            ],
            [
                76,
                0.26229508196721313,
                null,
                null
            ],
            [
                72,
                0.2524271844660194,
                null,
                null
            ],
            [
                9,
                0.24242424242424243,
                null,
                null
            ],
            [
                30,
                0.22857142857142856,
                null,
                null
            ],
            [
                94,
                0.21818181818181817,
                null,
                null
            ],
            [
                103,
                0.21818181818181817,
                null,
                null
            ],
            [
                63,
                0.2138364779874214,
                null,
                null
            ],
            [
                132,
                0.21052631578947367,
                null,
                null
            ],
            [
                16,
                0.1875,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 4,
        "bbox": [
            37.155285379999995,
            419.00926547545606,
            199.4788699508287,
            526.4721208009121
        ],
        "prefix": "",
        "content": "RTM2F [24] 41.36 61.54 24.68 158.30 59.66 M2F [5] 52.03 62.49 42.18 235.57 121.69 ECOM2F(β = 0.02) 50.79 62.25 39.71 181.64 67.71 MF [6] 46.50 57.80 33.00 181.00 – RAPSAM [40] 46.90 – – 123.00 – ECOM2F 51.89 61.07 41.25 195.55 92.37 ReMax [26] 53.50 – – – – YOSO [15] 48.40 58.74 36.87 114.50 – M2F [5] 51.73 61.94 41.72 229.10 135.00 LiteECOM2F 52.84 63.23 42.18 178.43 64.42 ECOM2F(β = 0.0005) 52.06 62.76 41.51 202.39 88.47 LiteM2F [20] 52.70 63.08 41.10 188.00 79.78 Backbone: SWINT Backbone: Res50 ",
        "suffix": "LiteM2F",
        "equation hit": ", ℓ̃ = h∘f∘⋯∘f2∘f1∘b() .",
        "assigned": false,
        "matches": [
            [
                63,
                0.1700787401574803,
                null,
                null
            ],
            [
                59,
                0.16554054054054054,
                null,
                null
            ],
            [
                80,
                0.16539440203562342,
                null,
                null
            ],
            [
                13,
                0.16142270861833105,
                null,
                null
            ],
            [
                78,
                0.16009280742459397,
                null,
                null
            ],
            [
                72,
                0.15889464594127806,
                null,
                null
            ],
            [
                71,
                0.14545454545454545,
                null,
                null
            ],
            [
                139,
                0.1386481802426343,
                null,
                null
            ],
            [
                128,
                0.13454545454545455,
                null,
                null
            ],
            [
                44,
                0.1343065693430657,
                null,
                null
            ],
            [
                76,
                0.13377926421404682,
                null,
                null
            ],
            [
                74,
                0.13210445468509985,
                null,
                null
            ],
            [
                15,
                0.12478336221837089,
                null,
                null
            ],
            [
                61,
                0.12296564195298372,
                null,
                null
            ],
            [
                138,
                0.12224108658743633,
                null,
                null
            ],
            [
                65,
                0.12202380952380952,
                null,
                null
            ],
            [
                99,
                0.1134020618556701,
                null,
                null
            ],
            [
                83,
                0.11152416356877323,
                null,
                null
            ],
            [
                18,
                0.10869565217391304,
                null,
                null
            ],
            [
                57,
                0.09694793536804308,
                null,
                null
            ],
            [
                2,
                0.09140767824497258,
                null,
                null
            ],
            [
                68,
                0.09027777777777778,
                null,
                null
            ],
            [
                92,
                0.0847145488029466,
                null,
                null
            ],
            [
                49,
                0.08440366972477065,
                null,
                null
            ],
            [
                70,
                0.08286252354048965,
                null,
                null
            ],
            [
                67,
                0.08029197080291971,
                null,
                null
            ],
            [
                98,
                0.08,
                null,
                null
            ],
            [
                100,
                0.08,
                null,
                null
            ],
            [
                88,
                0.07865168539325842,
                null,
                null
            ],
            [
                84,
                0.07678244972577697,
                null,
                null
            ],
            [
                12,
                0.07142857142857142,
                null,
                null
            ],
            [
                29,
                0.07102803738317758,
                null,
                null
            ],
            [
                133,
                0.06538461538461539,
                null,
                null
            ],
            [
                94,
                0.064030131826742,
                null,
                null
            ],
            [
                103,
                0.064030131826742,
                null,
                null
            ],
            [
                56,
                0.05363984674329502,
                null,
                null
            ],
            [
                60,
                0.05343511450381679,
                null,
                null
            ],
            [
                101,
                0.05263157894736842,
                null,
                null
            ],
            [
                36,
                0.052336448598130844,
                null,
                null
            ],
            [
                25,
                0.046065259117082535,
                null,
                null
            ],
            [
                62,
                0.046065259117082535,
                null,
                null
            ],
            [
                17,
                0.045889101338432124,
                null,
                null
            ],
            [
                28,
                0.045112781954887216,
                null,
                null
            ],
            [
                58,
                0.04238921001926782,
                null,
                null
            ],
            [
                21,
                0.04174573055028463,
                null,
                null
            ],
            [
                79,
                0.038834951456310676,
                null,
                null
            ],
            [
                127,
                0.03501945525291829,
                null,
                null
            ],
            [
                132,
                0.03501945525291829,
                null,
                null
            ],
            [
                144,
                0.03481624758220503,
                null,
                null
            ],
            [
                122,
                0.031067961165048542,
                null,
                null
            ],
            [
                54,
                0.02734375,
                null,
                null
            ],
            [
                31,
                0.023483365949119372,
                null,
                null
            ],
            [
                145,
                0.015717092337917484,
                null,
                null
            ],
            [
                86,
                0.011857707509881422,
                null,
                null
            ],
            [
                9,
                0.011787819253438114,
                null,
                null
            ],
            [
                142,
                0.011764705882352941,
                null,
                null
            ],
            [
                30,
                0.011741682974559686,
                null,
                null
            ],
            [
                87,
                0.007889546351084813,
                null,
                null
            ],
            [
                89,
                0.007889546351084813,
                null,
                null
            ],
            [
                91,
                0.007889546351084813,
                null,
                null
            ],
            [
                16,
                0.007874015748031496,
                null,
                null
            ],
            [
                0,
                0,
                null,
                null
            ],
            [
                1,
                0.0,
                null,
                null
            ],
            [
                3,
                0,
                null,
                null
            ],
            [
                4,
                0,
                null,
                null
            ],
            [
                5,
                0,
                null,
                null
            ],
            [
                6,
                0,
                null,
                null
            ],
            [
                7,
                0,
                null,
                null
            ],
            [
                8,
                0,
                null,
                null
            ],
            [
                10,
                0,
                null,
                null
            ],
            [
                11,
                0,
                null,
                null
            ],
            [
                14,
                0,
                null,
                null
            ],
            [
                19,
                0,
                null,
                null
            ],
            [
                20,
                0,
                null,
                null
            ],
            [
                22,
                0,
                null,
                null
            ],
            [
                23,
                0,
                null,
                null
            ],
            [
                24,
                0,
                null,
                null
            ],
            [
                26,
                0,
                null,
                null
            ],
            [
                27,
                0,
                null,
                null
            ],
            [
                32,
                0,
                null,
                null
            ],
            [
                33,
                0,
                null,
                null
            ],
            [
                34,
                0,
                null,
                null
            ],
            [
                35,
                0,
                null,
                null
            ],
            [
                37,
                0,
                null,
                null
            ],
            [
                38,
                0,
                null,
                null
            ],
            [
                39,
                0,
                null,
                null
            ],
            [
                40,
                0,
                null,
                null
            ],
            [
                41,
                0,
                null,
                null
            ],
            [
                42,
                0,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                46,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ],
            [
                48,
                0,
                null,
                null
            ],
            [
                50,
                0,
                null,
                null
            ],
            [
                51,
                0,
                null,
                null
            ],
            [
                52,
                0,
                null,
                null
            ],
            [
                53,
                0,
                null,
                null
            ],
            [
                55,
                0,
                null,
                null
            ],
            [
                64,
                0,
                null,
                null
            ],
            [
                66,
                0,
                null,
                null
            ],
            [
                69,
                0,
                null,
                null
            ],
            [
                73,
                0,
                null,
                null
            ],
            [
                75,
                0,
                null,
                null
            ],
            [
                77,
                0,
                null,
                null
            ],
            [
                81,
                0,
                null,
                null
            ],
            [
                82,
                0,
                null,
                null
            ],
            [
                85,
                0,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ],
            [
                93,
                0,
                null,
                null
            ],
            [
                95,
                0,
                null,
                null
            ],
            [
                96,
                0,
                null,
                null
            ],
            [
                97,
                0,
                null,
                null
            ],
            [
                102,
                0.0,
                null,
                null
            ],
            [
                104,
                0,
                null,
                null
            ],
            [
                105,
                0,
                null,
                null
            ],
            [
                106,
                0,
                null,
                null
            ],
            [
                107,
                0.0,
                null,
                null
            ],
            [
                108,
                0,
                null,
                null
            ],
            [
                109,
                0,
                null,
                null
            ],
            [
                110,
                0,
                null,
                null
            ],
            [
                111,
                0,
                null,
                null
            ],
            [
                112,
                0,
                null,
                null
            ],
            [
                113,
                0,
                null,
                null
            ],
            [
                114,
                0,
                null,
                null
            ],
            [
                115,
                0,
                null,
                null
            ],
            [
                116,
                0,
                null,
                null
            ],
            [
                117,
                0,
                null,
                null
            ],
            [
                118,
                0,
                null,
                null
            ],
            [
                119,
                0,
                null,
                null
            ],
            [
                120,
                0,
                null,
                null
            ],
            [
                121,
                0,
                null,
                null
            ],
            [
                123,
                0,
                null,
                null
            ],
            [
                124,
                0,
                null,
                null
            ],
            [
                125,
                0,
                null,
                null
            ],
            [
                126,
                0,
                null,
                null
            ],
            [
                129,
                0,
                null,
                null
            ],
            [
                130,
                0,
                null,
                null
            ],
            [
                131,
                0,
                null,
                null
            ],
            [
                134,
                0,
                null,
                null
            ],
            [
                135,
                0,
                null,
                null
            ],
            [
                136,
                0,
                null,
                null
            ],
            [
                137,
                0,
                null,
                null
            ],
            [
                140,
                0,
                null,
                null
            ],
            [
                141,
                0,
                null,
                null
            ],
            [
                143,
                0,
                null,
                null
            ],
            [
                146,
                0,
                null,
                null
            ],
            [
                147,
                0,
                null,
                null
            ],
            [
                148,
                0,
                null,
                null
            ],
            [
                149,
                0,
                null,
                null
            ],
            [
                150,
                0,
                null,
                null
            ],
            [
                151,
                0,
                null,
                null
            ],
            [
                152,
                0,
                null,
                null
            ],
            [
                153,
                0,
                null,
                null
            ],
            [
                154,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 5,
        "bbox": [
            211.85984434000002,
            524.1849688289441,
            378.8521541955616,
            534.8338536144161
        ],
        "prefix": "",
        "content": "Model PQ mIoUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                92,
                0.24324324324324326,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 6,
        "bbox": [
            272.19761671000003,
            532.335166388416,
            374.6019309300257,
            538.7595023244161
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                94,
                0.21818181818181817,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 7,
        "bbox": [
            211.85984434000002,
            504.910795148416,
            374.0171501341695,
            511.335131084416
        ],
        "prefix": "",
        "content": "RTM2F [24] 59.73 77.89 31.35 361.10 130.00 ",
        "suffix": "LiteM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 8,
        "bbox": [
            264.85359421,
            513.0486885684161,
            325.8586588228096,
            519.4730245044161
        ],
        "prefix": "",
        "content": "Backbone: SWINT ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                97,
                0.2857142857142857,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 9,
        "bbox": [
            211.85984434000002,
            497.059497728416,
            374.0158652669823,
            503.48383366441595
        ],
        "prefix": "130.00 ",
        "content": "LiteM2F [20] 62.29 79.43 36.57 428.71 172.00 ",
        "suffix": "M2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                0.5600355159823072,
                2,
                53
            ]
        ]
    },
    {
        "page": 9,
        "index": 10,
        "bbox": [
            211.85984434000002,
            489.207483818416,
            374.0126530990143,
            495.631819754416
        ],
        "prefix": "172.00 ",
        "content": "M2F [5] 64.00 80.77 39.26 537.85 281.13 ",
        "suffix": "ECOM2F(β",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 11,
        "bbox": [
            211.85984434000002,
            480.995707096,
            374.01564057571835,
            487.779805844416
        ],
        "prefix": "281.13 ",
        "content": "ECOM2F(β = 0.003) 64.18 80.49 39.64 507.51 250.80 ",
        "suffix": "ECOM2F(β",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 12,
        "bbox": [
            211.85984434000002,
            473.143693186,
            374.01564057571835,
            479.927791934416
        ],
        "prefix": "250.80 ",
        "content": "ECOM2F(β = 0.01) 62.09 79.58 36.04 439.67 182.95 ",
        "suffix": "LiteECOM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 13,
        "bbox": [
            211.85984434000002,
            465.47156068220795,
            374.01564057571835,
            472.07577802441597
        ],
        "prefix": "182.95 ",
        "content": "LiteECOM2F 62.64 79.99 36.52 412.88 156.17 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                0.5632928233496888,
                18,
                59
            ]
        ]
    },
    {
        "page": 9,
        "index": 14,
        "bbox": [
            211.85984434000002,
            449.376371738416,
            374.0152228333887,
            455.800707674416
        ],
        "prefix": "",
        "content": "M2F 61.86 76.94 37.35 524.11 281.13 ",
        "suffix": "YOSO",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 15,
        "bbox": [
            211.85984434000002,
            433.672343918416,
            366.4969694539168,
            463.93860109441596
        ],
        "prefix": "281.13 ",
        "content": "YOSO [15] 59.70 76.05 33.76 265.1 – ReMax [26] 65.40 – – 294.7 – Backbone: Res50 ",
        "suffix": "ReMax",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": true,
        "matches": [
            [
                96,
                0.2356164383561644,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 16,
        "bbox": [
            211.85984434000002,
            425.640448602208,
            374.01564057571835,
            432.244665944416
        ],
        "prefix": "– ",
        "content": "ECOM2F 62.20 77.34 37.21 453.50 220.59 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 17,
        "bbox": [
            34.016,
            380.7662556,
            379.8393252,
            390.72885560000003
        ],
        "prefix": "",
        "content": "Architecture details. We focus on standard backbones Res50 [13] and SWIN",
        "suffix": "Tiny",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                61,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 18,
        "bbox": [
            34.01599999999999,
            368.81125560000004,
            379.8387674600001,
            378.77385560000005
        ],
        "prefix": "SWIN",
        "content": "Tiny [22] pretrained on ImageNet1K [8], unless specified otherwise. We set the ",
        "suffix": "total",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                61,
                0.5592614871329331,
                50,
                115
            ]
        ]
    },
    {
        "page": 9,
        "index": 19,
        "bbox": [
            34.01599999999999,
            356.85625560000005,
            379.8407599800001,
            366.81885560000006
        ],
        "prefix": "the ",
        "content": "total number of encoder layers to be 6 following [5]. We consider layers 2 to 6 as ",
        "suffix": "potential",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                61,
                0.9303265329856316,
                115,
                195
            ]
        ]
    },
    {
        "page": 9,
        "index": 20,
        "bbox": [
            34.01599999999999,
            344.90025560000004,
            379.83777119999996,
            354.86285560000005
        ],
        "prefix": "as ",
        "content": "potential exit points, unless stated otherwise. In our gating network, we use a ",
        "suffix": "straightforward",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                61,
                0.8000223641751935,
                115,
                195
            ]
        ]
    },
    {
        "page": 9,
        "index": 21,
        "bbox": [
            34.01599999999999,
            332.94525560000005,
            379.8427525000002,
            342.90785560000006
        ],
        "prefix": "a ",
        "content": "straightforward 1D adaptive average pooling operation as our pooling function. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                61,
                1.0,
                195,
                273
            ]
        ]
    },
    {
        "page": 9,
        "index": 22,
        "bbox": [
            34.01599999999999,
            309.03825560000007,
            379.84478179999996,
            319.0008556000001
        ],
        "prefix": "",
        "content": "Training settings. The experimental setup closely mirrors that of M2F [5], ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 23,
        "bbox": [
            34.01599999999998,
            297.0832556000001,
            379.84075998000014,
            307.0458556000001
        ],
        "prefix": "[5], ",
        "content": "with all model configurations and training specifics following identical proce",
        "suffix": "dures.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.7525164486185266,
                52,
                137
            ]
        ]
    },
    {
        "page": 9,
        "index": 24,
        "bbox": [
            34.01599999999998,
            285.1282556000001,
            379.83876746000016,
            295.0908556000001
        ],
        "prefix": "proce",
        "content": "dures. We use Detectron2 [34] and PyTorch [25] for our implementation. For ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 25,
        "bbox": [
            34.01599999999998,
            273.1722556000001,
            379.83757519999995,
            283.1348556000001
        ],
        "prefix": "For ",
        "content": "the stochastic depth training phase (Step A), we initialize weights as provided ",
        "suffix": "by",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.8911919627447629,
                110,
                195
            ]
        ]
    },
    {
        "page": 9,
        "index": 26,
        "bbox": [
            34.01599999999999,
            261.2172556000001,
            379.8407599800001,
            271.1798556000001
        ],
        "prefix": "provided ",
        "content": "by M2F and subsequently train 50 epochs for the COCO dataset and 90k it",
        "suffix": "erations",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.8666890308418601,
                110,
                190
            ]
        ]
    },
    {
        "page": 9,
        "index": 27,
        "bbox": [
            34.01599999999999,
            249.2622556000001,
            379.84673754,
            259.22485560000007
        ],
        "prefix": "it",
        "content": "erations for Cityscapes, with a batch size of 16. For the training of the gating ",
        "suffix": "network",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                1.0,
                360,
                432
            ]
        ]
    },
    {
        "page": 9,
        "index": 28,
        "bbox": [
            34.01599999999999,
            237.30725560000008,
            379.83869756000007,
            247.26985560000006
        ],
        "prefix": "gating ",
        "content": "network (Step C ), we perform 2 epochs of training on the COCO dataset and ",
        "suffix": "20k",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.6959542350553027,
                190,
                269
            ]
        ]
    },
    {
        "page": 9,
        "index": 29,
        "bbox": [
            34.01599999999999,
            225.35225560000006,
            379.83777120000013,
            235.31485560000004
        ],
        "prefix": "and ",
        "content": "20k iterations on the Cityscapes dataset, employing the Adam optimizer [18]. ",
        "suffix": "The",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.7838864357774341,
                190,
                263
            ]
        ]
    },
    {
        "page": 9,
        "index": 30,
        "bbox": [
            34.01599999999999,
            213.39725560000005,
            379.8377625,
            223.35985560000003
        ],
        "prefix": "[18]. ",
        "content": "The adaptation factor β in the utility function, as discussed in Sec. 3.3, is set ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.5653613655268631,
                263,
                354
            ]
        ]
    },
    {
        "page": 9,
        "index": 31,
        "bbox": [
            34.01599999999999,
            201.44125560000006,
            379.8477338000002,
            211.40385560000004
        ],
        "prefix": "set ",
        "content": "to 0.0005 for COCO and 0.003 for Cityscapes, unless otherwise specified. Dis",
        "suffix": "tributed",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                1.0,
                603,
                688
            ]
        ]
    },
    {
        "page": 9,
        "index": 32,
        "bbox": [
            34.01599999999999,
            189.48625560000005,
            379.84673754000005,
            199.44885560000003
        ],
        "prefix": "Dis",
        "content": "tributed training is performed using 8 A6000 GPUs. On the COCO dataset, the ",
        "suffix": "training",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.7857142858035824,
                263,
                330
            ]
        ]
    },
    {
        "page": 9,
        "index": 33,
        "bbox": [
            34.01599999999999,
            177.53125560000004,
            379.83741123999994,
            187.49385560000002
        ],
        "prefix": "the ",
        "content": "training time of Step A is 280 GPU hours, Step B is 17 GPU hours, and Step ",
        "suffix": "C",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.775566256965415,
                421,
                506
            ]
        ]
    },
    {
        "page": 9,
        "index": 34,
        "bbox": [
            34.01599999999996,
            165.57625560000002,
            379.84263777999996,
            175.5388556
        ],
        "prefix": "Step ",
        "content": "C 7.2 GPU hours. Similarly for Cityscapes dataset, the training time of Step A ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.7060281618927451,
                428,
                503
            ]
        ]
    },
    {
        "page": 9,
        "index": 35,
        "bbox": [
            34.01599999999996,
            153.6212556,
            379.8472040799999,
            163.5838556
        ],
        "prefix": "A ",
        "content": "is 45 GPU hours, Step B is 1 GPU hours, and Step C is 7.2 GPU hours. In Step ",
        "suffix": "A,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.7152617673792221,
                435,
                522
            ]
        ]
    },
    {
        "page": 9,
        "index": 36,
        "bbox": [
            34.015999999999934,
            141.6662556,
            379.8391296799999,
            151.62885559999998
        ],
        "prefix": "Step ",
        "content": "A, we use identical settings as M2F for the loss between the predicted segment ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.8125,
                443,
                519
            ]
        ]
    },
    {
        "page": 9,
        "index": 37,
        "bbox": [
            34.015999999999934,
            128.40555,
            379.34439851999986,
            139.6728556
        ],
        "prefix": "segment ",
        "content": "and ground truth segment, i.e., Lk. The weight λmask is fixed at 5.0, while λclass ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.6433226400110881,
                285,
                365
            ]
        ]
    },
    {
        "page": 9,
        "index": 38,
        "bbox": [
            34.015999999999906,
            117.7552556,
            305.32549327999993,
            127.71785560000001
        ],
        "prefix": "λclass ",
        "content": "is set to 2.0 for all classes, except 0.1 for the ''no object'' class. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                1.0,
                1095,
                1165
            ]
        ]
    },
    {
        "page": 9,
        "index": 39,
        "bbox": [
            34.015999999999906,
            87.8702556,
            126.7887274599999,
            97.8328556
        ],
        "prefix": "",
        "content": "4.1 Main Results ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                64,
                0.5,
                0,
                12
            ]
        ]
    },
    {
        "page": 9,
        "index": 40,
        "bbox": [
            34.015999999999906,
            67.6693028,
            379.8429906799999,
            77.9108556
        ],
        "prefix": "",
        "content": "In Table 1 and Table 2, we compare ECOM2F with our baseline prior works on ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 41,
        "bbox": [
            34.015999999999934,
            55.993255600000005,
            379.8397637200002,
            65.9558556
        ],
        "prefix": "on ",
        "content": "the validation set of COCO and Cityscapes dataset, respectively. In Table 1, ",
        "suffix": "we",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.795381091659758,
                114,
                182
            ]
        ]
    },
    {
        "page": 9,
        "index": 42,
        "bbox": [
            34.015999999999934,
            43.7593028,
            379.84240100000005,
            54.0008556
        ],
        "prefix": "1, ",
        "content": "we observe that ECOM2F effectively reduces computational costs while uphold",
        "suffix": "ing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.6566487549418893,
                139,
                219
            ]
        ]
    },
    {
        "page": 9,
        "index": 43,
        "bbox": [
            34.015999999999934,
            32.08325560000001,
            379.8467375400001,
            42.0458556
        ],
        "prefix": "uphold",
        "content": "ing performance levels in comparison to M2F [5] using both SWINT [22] and ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.6317744202798169,
                139,
                200
            ]
        ]
    },
    {
        "page": 10,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.8466329599999,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 11 ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": false,
        "matches": [
            [
                15,
                0.6617647058823529,
                null,
                null
            ],
            [
                18,
                0.6306306306306306,
                null,
                null
            ],
            [
                68,
                0.6074074074074074,
                null,
                null
            ],
            [
                76,
                0.5987261146496815,
                null,
                null
            ],
            [
                59,
                0.5960264900662252,
                null,
                null
            ],
            [
                61,
                0.5892857142857143,
                null,
                null
            ],
            [
                57,
                0.5862068965517241,
                null,
                null
            ],
            [
                138,
                0.581081081081081,
                null,
                null
            ],
            [
                83,
                0.5773195876288659,
                null,
                null
            ],
            [
                67,
                0.5607476635514018,
                null,
                null
            ],
            [
                139,
                0.5588235294117647,
                null,
                null
            ],
            [
                63,
                0.5567010309278351,
                null,
                null
            ],
            [
                84,
                0.5283018867924528,
                null,
                null
            ],
            [
                74,
                0.5142857142857142,
                null,
                null
            ],
            [
                12,
                0.5054945054945055,
                null,
                null
            ],
            [
                71,
                0.4931506849315068,
                null,
                null
            ],
            [
                72,
                0.4927536231884058,
                null,
                null
            ],
            [
                29,
                0.48936170212765956,
                null,
                null
            ],
            [
                70,
                0.4666666666666667,
                null,
                null
            ],
            [
                49,
                0.46153846153846156,
                null,
                null
            ],
            [
                99,
                0.45390070921985815,
                null,
                null
            ],
            [
                44,
                0.4426229508196721,
                null,
                null
            ],
            [
                65,
                0.44155844155844154,
                null,
                null
            ],
            [
                28,
                0.4175824175824176,
                null,
                null
            ],
            [
                17,
                0.4146341463414634,
                null,
                null
            ],
            [
                2,
                0.39622641509433965,
                null,
                null
            ],
            [
                56,
                0.3950617283950617,
                null,
                null
            ],
            [
                60,
                0.3855421686746988,
                null,
                null
            ],
            [
                98,
                0.3853211009174312,
                null,
                null
            ],
            [
                100,
                0.3853211009174312,
                null,
                null
            ],
            [
                13,
                0.3793103448275862,
                null,
                null
            ],
            [
                101,
                0.37362637362637363,
                null,
                null
            ],
            [
                128,
                0.3669724770642202,
                null,
                null
            ],
            [
                58,
                0.358974358974359,
                null,
                null
            ],
            [
                25,
                0.35,
                null,
                null
            ],
            [
                62,
                0.35,
                null,
                null
            ]
        ]
    },
    {
        "page": 10,
        "index": 1,
        "bbox": [
            34.01599999999999,
            394.265926374896,
            379.8465088,
            580.6579184000001
        ],
        "prefix": "datasets. ",
        "content": "Baseline is M2F [5]. (Backbone: SWINT) both in COCO and Cityscapes datasets. sis on reducing GFLOPs over performance increases, the model places greater emphaTable 3: Impact of β. As the value of β Data β PQ mIoUp APp Total Tx. Enc. e sca C i ty p s O O C C Baseline 52.03 62.49 42.18 235.57 121.69 Baseline 64.00 80.77 39.26 537.85 281.13 0.0005 52.06 62.76 41.51 202.39 88.47 0.001 51.72 62.60 41.12 193.10 79.18 0.003 64.18 80.49 39.64 507.51 250.80 0.005 63.24 79.73 37.97 469.38 212.66 0.02 50.79 62.25 39.71 181.64 67.71 0.01 62.09 79.58 36.04 439.67 182.95 0.0 52.24 62.95 41.61 220.61 107.18 0.0 64.58 80.35 40.31 536.09 279.37 0.1 60.71 78.15 33.86 411.98 155.26 Performance (↑) GFLOPs (↓) Table 4: Impact of K. The baseline M2F [5] refers to the complete M2F model trained with 6/5/4 layers for 50 epochs. ECOM2F pertains to the training of only the gating network for 2 epochs by setting K = 6, 5, 4 respectively. (Dataset: COCO; Backbone: SWINT) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                78,
                0.4996203492786636,
                null,
                null
            ],
            [
                80,
                0.43352135374697826,
                null,
                null
            ],
            [
                13,
                0.3777403035413153,
                null,
                null
            ],
            [
                44,
                0.30526315789473685,
                null,
                null
            ],
            [
                65,
                0.2608695652173913,
                null,
                null
            ],
            [
                71,
                0.25829596412556055,
                null,
                null
            ],
            [
                74,
                0.2513562386980108,
                null,
                null
            ],
            [
                63,
                0.23486238532110093,
                null,
                null
            ],
            [
                76,
                0.1728395061728395,
                null,
                null
            ]
        ]
    },
    {
        "page": 10,
        "index": 2,
        "bbox": [
            212.35842857999998,
            463.302393221728,
            378.6974318148992,
            475.61053563459194
        ],
        "prefix": "",
        "content": "K Model PQ mIOUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                36,
                0.29411764705882354,
                null,
                null
            ],
            [
                88,
                0.26865671641791045,
                null,
                null
            ],
            [
                21,
                0.16666666666666666,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 10,
        "index": 3,
        "bbox": [
            254.32143194,
            472.72251507259205,
            373.7849593548672,
            480.147859904592
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                128,
                0.5135135135135135,
                null,
                null
            ],
            [
                83,
                0.4838709677419355,
                null,
                null
            ],
            [
                70,
                0.4727272727272727,
                null,
                null
            ],
            [
                101,
                0.42857142857142855,
                null,
                null
            ],
            [
                17,
                0.425531914893617,
                null,
                null
            ],
            [
                18,
                0.42105263157894735,
                null,
                null
            ],
            [
                127,
                0.42105263157894735,
                null,
                null
            ],
            [
                67,
                0.4166666666666667,
                null,
                null
            ],
            [
                29,
                0.4067796610169492,
                null,
                null
            ],
            [
                84,
                0.39436619718309857,
                null,
                null
            ],
            [
                12,
                0.39285714285714285,
                null,
                null
            ],
            [
                56,
                0.391304347826087,
                null,
                null
            ],
            [
                88,
                0.3793103448275862,
                null,
                null
            ],
            [
                49,
                0.37681159420289856,
                null,
                null
            ],
            [
                58,
                0.37209302325581395,
                null,
                null
            ],
            [
                28,
                0.35714285714285715,
                null,
                null
            ],
            [
                98,
                0.35135135135135137,
                null,
                null
            ],
            [
                100,
                0.35135135135135137,
                null,
                null
            ],
            [
                61,
                0.33766233766233766,
                null,
                null
            ],
            [
                60,
                0.3333333333333333,
                null,
                null
            ],
            [
                2,
                0.30985915492957744,
                null,
                null
            ],
            [
                79,
                0.3076923076923077,
                null,
                null
            ],
            [
                36,
                0.3050847457627119,
                null,
                null
            ],
            [
                68,
                0.3,
                null,
                null
            ],
            [
                15,
                0.297029702970297,
                null,
                null
            ],
            [
                57,
                0.2962962962962963,
                null,
                null
            ],
            [
                59,
                0.29310344827586204,
                null,
                null
            ],
            [
                138,
                0.2831858407079646,
                null,
                null
            ],
            [
                99,
                0.2830188679245283,
                null,
                null
            ],
            [
                139,
                0.27722772277227725,
                null,
                null
            ],
            [
                21,
                0.27450980392156865,
                null,
                null
            ],
            [
                25,
                0.26666666666666666,
                null,
                null
            ],
            [
                62,
                0.26666666666666666,
                null,
                null
            ],
            [
                76,
                0.26229508196721313,
                null,
                null
            ],
            [
                72,
                0.2524271844660194,
                null,
                null
            ],
            [
                9,
                0.24242424242424243,
                null,
                null
            ],
            [
                30,
                0.22857142857142856,
                null,
                null
            ],
            [
                103,
                0.21818181818181817,
                null,
                null
            ],
            [
                63,
                0.2138364779874214,
                null,
                null
            ],
            [
                132,
                0.21052631578947367,
                null,
                null
            ],
            [
                16,
                0.1875,
                null,
                null
            ]
        ]
    },
    {
        "page": 10,
        "index": 4,
        "bbox": [
            212.35842857999998,
            404.185599117296,
            373.10945994140474,
            457.85542843459194
        ],
        "prefix": "",
        "content": "6 M2F [5] 52.03 62.49 42.18 235.57 121.69 5 M2F [5] 51.61 61.93 41.55 221.95 108.07 4 M2F [5] 51.38 62.30 41.11 208.33 94.45 ECOM2F 52.20 62.58 41.55 202.47 88.65 ECOM2F 52.26 62.67 41.56 208.82 94.59 ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 5,
        "bbox": [
            221.65915661,
            441.147525407296,
            371.1982612471616,
            448.78077989459194
        ],
        "prefix": "",
        "content": "ECOM2F 52.06 62.76 41.51 202.39 88.47 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                0.7085456436383615,
                9,
                49
            ]
        ]
    },
    {
        "page": 10,
        "index": 6,
        "bbox": [
            34.016,
            353.60430279999997,
            379.83824708000003,
            363.8458556
        ],
        "prefix": "",
        "content": "Res50 [13] backbones. Additionally, ECOM2F can be seamlessly integrated into ",
        "suffix": "efficient",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.6208782563510057,
                200,
                273
            ]
        ]
    },
    {
        "page": 10,
        "index": 7,
        "bbox": [
            34.01599999999999,
            341.9282556,
            379.8377712,
            351.8908556
        ],
        "prefix": "into ",
        "content": "efficient encoder designs, such as LiteM2F [5] [20], further reducing GLOPs by ",
        "suffix": "approximately",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.6756890188824408,
                353,
                423
            ]
        ]
    },
    {
        "page": 10,
        "index": 8,
        "bbox": [
            34.01599999999999,
            329.9732556,
            379.84474502000006,
            339.9358556
        ],
        "prefix": "by ",
        "content": "approximately 12.6%. With Res50 as the backbone, MF [6], YOSO [15], and ",
        "suffix": "RAPSAM",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.414693359398073,
                200,
                263
            ]
        ]
    },
    {
        "page": 10,
        "index": 9,
        "bbox": [
            34.01599999999999,
            317.7393028,
            379.84450760000004,
            327.98085560000004
        ],
        "prefix": "and ",
        "content": "RAPSAM [40] exhibit inferior performance compared to ECOM2F. Although ",
        "suffix": "ReMax",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.7117873472600966,
                416,
                482
            ]
        ]
    },
    {
        "page": 10,
        "index": 10,
        "bbox": [
            34.01600000000002,
            306.06325560000005,
            379.8447450200001,
            316.02585560000006
        ],
        "prefix": "Although ",
        "content": "ReMax [26] demonstrates competitive accuracy, its focus on specialized panop",
        "suffix": "tic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.6915027872466032,
                416,
                491
            ]
        ]
    },
    {
        "page": 10,
        "index": 11,
        "bbox": [
            34.01600000000002,
            294.10725560000003,
            379.84474502,
            304.06985560000004
        ],
        "prefix": "panop",
        "content": "tic segmentation models limits its applicability. Our work, however, aims for a ",
        "suffix": "broader",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                1.0,
                695,
                771
            ]
        ]
    },
    {
        "page": 10,
        "index": 12,
        "bbox": [
            34.01600000000002,
            282.15225560000005,
            379.84075998,
            292.11485560000006
        ],
        "prefix": "a ",
        "content": "broader impact by creating efficient segmentation architectures that can be used ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.7692307692307694,
                416,
                497
            ]
        ]
    },
    {
        "page": 10,
        "index": 13,
        "bbox": [
            34.01600000000002,
            270.19725560000006,
            379.8427525000001,
            280.15985560000007
        ],
        "prefix": "used ",
        "content": "for various segmentation tasks. We make similar observations on the Cityscapes ",
        "suffix": "dataset",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                1.0,
                776,
                855
            ]
        ]
    },
    {
        "page": 10,
        "index": 14,
        "bbox": [
            34.01600000000002,
            258.2422556000001,
            172.54993804000003,
            268.2048556000001
        ],
        "prefix": "Cityscapes ",
        "content": "dataset as presented in Table 2. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.42857143448562535,
                200,
                224
            ]
        ]
    },
    {
        "page": 10,
        "index": 15,
        "bbox": [
            34.01600000000002,
            224.2752556000001,
            143.91941816000002,
            234.23785560000007
        ],
        "prefix": "",
        "content": "4.2 Ablation Studies ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                66,
                0.5,
                0,
                16
            ]
        ]
    },
    {
        "page": 10,
        "index": 16,
        "bbox": [
            34.01600000000002,
            199.9923028000001,
            379.84121831999994,
            210.23385560000008
        ],
        "prefix": "",
        "content": "Balancing computational cost and performance. Within ECOM2F, the ",
        "suffix": "parameter",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 10,
        "index": 17,
        "bbox": [
            34.01599999999996,
            188.3162556000001,
            379.8436449,
            198.27885560000007
        ],
        "prefix": "the ",
        "content": "parameter β serves as an adaptation factor that governs the tradeoff between ",
        "suffix": "computational",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.9004664756937595,
                18,
                93
            ]
        ]
    },
    {
        "page": 10,
        "index": 18,
        "bbox": [
            34.01599999999997,
            176.3602556000001,
            379.8417562399998,
            186.32285560000008
        ],
        "prefix": "between ",
        "content": "computational cost and performance. Its value, however, is contingent upon the ",
        "suffix": "backbone",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.7863946277037253,
                18,
                97
            ]
        ]
    },
    {
        "page": 10,
        "index": 19,
        "bbox": [
            34.01599999999997,
            164.4052556000001,
            379.84474502000006,
            174.36785560000007
        ],
        "prefix": "the ",
        "content": "backbone and dataset characteristics. This dependency arises due to the dis",
        "suffix": "parate",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                1.0,
                97,
                179
            ]
        ]
    },
    {
        "page": 10,
        "index": 20,
        "bbox": [
            34.01599999999997,
            152.45025560000008,
            379.84275249999985,
            162.41285560000006
        ],
        "prefix": "dis",
        "content": "parate ranges of GFLOPs and segmentation quality (represented by PQ) which ",
        "suffix": "are",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.7863946277037253,
                18,
                86
            ]
        ]
    },
    {
        "page": 10,
        "index": 21,
        "bbox": [
            34.01599999999997,
            140.49525560000006,
            379.84374876,
            150.45785560000004
        ],
        "prefix": "which ",
        "content": "are a function of the architecture components and the training data distribution. ",
        "suffix": "Fig.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.9285714285714286,
                165,
                247
            ]
        ]
    },
    {
        "page": 10,
        "index": 22,
        "bbox": [
            34.01599999999997,
            128.26130280000004,
            379.8417393199999,
            138.50285560000003
        ],
        "prefix": "distribution. ",
        "content": "Fig. 5 illustrates ECOM2F with different values of β in Step C using the exact ",
        "suffix": "same",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.42516103790910725,
                38,
                114
            ]
        ]
    },
    {
        "page": 10,
        "index": 23,
        "bbox": [
            34.015999999999906,
            116.58525560000004,
            379.84198187999993,
            126.54785560000005
        ],
        "prefix": "exact ",
        "content": "same weights for the parent model from Step A during inference. In comparison ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.8245252960780962,
                114,
                197
            ]
        ]
    },
    {
        "page": 10,
        "index": 24,
        "bbox": [
            34.015999999999934,
            103.32455000000004,
            379.84613257999996,
            114.59185560000005
        ],
        "prefix": "comparison ",
        "content": "to the M2Fi model (where each is trained standalone with i layers), adjusting ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.9129081662320396,
                344,
                420
            ]
        ]
    },
    {
        "page": 10,
        "index": 25,
        "bbox": [
            34.015999999999906,
            92.67425560000004,
            302.97149641999994,
            102.63685560000005
        ],
        "prefix": "adjusting ",
        "content": "the value of β provides a tradeoff between GFLOPs and PQ. ",
        "suffix": "–",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.6620421047241094,
                114,
                170
            ]
        ]
    },
    {
        "page": 10,
        "index": 26,
        "bbox": [
            34.015999999999906,
            79.62430280000004,
            379.8427598199999,
            89.86585560000005
        ],
        "prefix": "PQ. ",
        "content": "– Impact of adaptation factor β. We analyze the impact of β on ECOM2F and ",
        "suffix": "present",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.5767100541614788,
                21,
                87
            ]
        ]
    },
    {
        "page": 10,
        "index": 27,
        "bbox": [
            44.72399999999993,
            67.94825560000004,
            379.84271415999996,
            77.91085560000005
        ],
        "prefix": "and ",
        "content": "present our analysis in Table 3. As expected, a smaller β prioritizes segmenta",
        "suffix": "tion",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 10,
        "index": 28,
        "bbox": [
            44.72399999999993,
            55.99325560000005,
            379.84693506,
            65.95585560000005
        ],
        "prefix": "segmenta",
        "content": "tion quality over computations resulting in superior performance. Conversely, ",
        "suffix": "a",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.9000045399929762,
                186,
                259
            ]
        ]
    },
    {
        "page": 10,
        "index": 29,
        "bbox": [
            44.72399999999993,
            44.03825560000005,
            379.8377215,
            54.000855600000044
        ],
        "prefix": "Conversely, ",
        "content": "a larger β signifies a greater emphasis on GFLOPs. This results in a slight ",
        "suffix": "sacrifice",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.7254081778282356,
                186,
                260
            ]
        ]
    },
    {
        "page": 10,
        "index": 30,
        "bbox": [
            44.723999999999926,
            32.08325560000005,
            311.72566503999997,
            42.045855600000046
        ],
        "prefix": "slight ",
        "content": "sacrifice in PQ leading to a significant reduction in GFLOPs. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                1.0,
                260,
                322
            ]
        ]
    },
    {
        "page": 11,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04053824,
            604.2699184
        ],
        "prefix": "",
        "content": "12 M. Yao et al. ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                83,
                0.5,
                null,
                null
            ],
            [
                2,
                0.4918032786885246,
                null,
                null
            ],
            [
                36,
                0.4489795918367347,
                null,
                null
            ],
            [
                56,
                0.4444444444444444,
                null,
                null
            ],
            [
                25,
                0.4,
                null,
                null
            ],
            [
                70,
                0.4,
                null,
                null
            ],
            [
                84,
                0.39344262295081966,
                null,
                null
            ],
            [
                54,
                0.38461538461538464,
                null,
                null
            ],
            [
                17,
                0.3783783783783784,
                null,
                null
            ],
            [
                49,
                0.3728813559322034,
                null,
                null
            ],
            [
                18,
                0.36363636363636365,
                null,
                null
            ],
            [
                58,
                0.36363636363636365,
                null,
                null
            ],
            [
                67,
                0.3548387096774194,
                null,
                null
            ],
            [
                12,
                0.34782608695652173,
                null,
                null
            ],
            [
                101,
                0.34782608695652173,
                null,
                null
            ],
            [
                128,
                0.34375,
                null,
                null
            ],
            [
                21,
                0.34146341463414637,
                null,
                null
            ],
            [
                29,
                0.32653061224489793,
                null,
                null
            ],
            [
                31,
                0.32,
                null,
                null
            ],
            [
                60,
                0.3157894736842105,
                null,
                null
            ],
            [
                98,
                0.3125,
                null,
                null
            ],
            [
                100,
                0.3125,
                null,
                null
            ],
            [
                57,
                0.30985915492957744,
                null,
                null
            ],
            [
                72,
                0.3010752688172043,
                null,
                null
            ],
            [
                61,
                0.29850746268656714,
                null,
                null
            ],
            [
                88,
                0.2916666666666667,
                null,
                null
            ],
            [
                62,
                0.2857142857142857,
                null,
                null
            ],
            [
                79,
                0.27586206896551724,
                null,
                null
            ],
            [
                59,
                0.2641509433962264,
                null,
                null
            ],
            [
                144,
                0.25806451612903225,
                null,
                null
            ],
            [
                15,
                0.24175824175824176,
                null,
                null
            ],
            [
                139,
                0.24175824175824176,
                null,
                null
            ],
            [
                138,
                0.23300970873786409,
                null,
                null
            ],
            [
                68,
                0.2222222222222222,
                null,
                null
            ],
            [
                28,
                0.21739130434782608,
                null,
                null
            ],
            [
                127,
                0.21428571428571427,
                null,
                null
            ],
            [
                99,
                0.20833333333333334,
                null,
                null
            ],
            [
                122,
                0.20689655172413793,
                null,
                null
            ],
            [
                86,
                0.2,
                null,
                null
            ],
            [
                76,
                0.19642857142857142,
                null,
                null
            ],
            [
                63,
                0.18791946308724833,
                null,
                null
            ],
            [
                103,
                0.17777777777777778,
                null,
                null
            ],
            [
                133,
                0.17647058823529413,
                null,
                null
            ],
            [
                9,
                0.17391304347826086,
                null,
                null
            ],
            [
                145,
                0.17391304347826086,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 1,
        "bbox": [
            34.01599999999999,
            498.9965184000001,
            376.7755088,
            580.6579184000001
        ],
        "prefix": "layer ",
        "content": "at inference. ''USD'': Unweighted; ''WSD'': Weighted. (Baseline: M2F w/ SWINT) deterministically exit at the marked layer Table 5: Stochastic Depth (SD) training. Here, all models (w/ 6 encoder layers) baselines across all backbone sizes on both COCO and Cityscapes datasets while reducing GFLOPs in the transformer encoder. †ImageNet21K pretrained ECOM2F shows strong performance w.r.t. ",
        "suffix": "Weighted.",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                78,
                0.7817938420348058,
                null,
                null
            ],
            [
                80,
                0.7570789865871833,
                null,
                null
            ],
            [
                13,
                0.685064935064935,
                null,
                null
            ],
            [
                44,
                0.5859649122807018,
                null,
                null
            ],
            [
                71,
                0.5137614678899083,
                null,
                null
            ],
            [
                65,
                0.5134649910233393,
                null,
                null
            ],
            [
                74,
                0.503731343283582,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 2,
        "bbox": [
            44.3583089,
            348.9635184,
            371.1322008452672,
            512.761463318112
        ],
        "prefix": "64.00 ",
        "content": "w/ USD 59.96 61.85 63.18 62.98 63.73 w/ USD 49.40 50.25 50.49 50.51 50.44 w/ WSD 50.70 51.76 52.30 52.39 52.48 Baseline 10.16 17.02 23.43 33.63 51.71 w/ WSD 60.71 62.14 62.94 63.89 64.60 Baseline 03.21 14.37 26.66 42.50 64.00 PQ (↑)Model 2 3 4 5 6 Dataset: Cityscapes Dataset: COCO Fig. 5: M2Fi is Dataset: COCO. Values denote β. model from result of same i layers. ℓi is trained w/ total SWINT M2F [5] 52.03 62.49 42.18 235.57 121.69 SWINS M2F [5] 54.63 64.24 44.69 316.50 121.69 SWINB† M2F 56.40 67.09 46.29 470.98 122.56 SWINT M2F [5] 64.00 80.77 39.26 537.85 281.13 SWINS M2F [5] 64.84 81.76 40.73 724.29 281.13 SWINB† M2F [5] 66.12 82.70 42.84 1051.19 283.14 ECOM2F 65.12 81.64 41.17 665.38 222.22 ECOM2F 64.18 80.49 39.64 507.51 250.80 ECOM2F 54.76 64.46 44.48 275.96 81.05 ECOM2F 52.06 62.76 41.51 202.39 88.47 ECOM2F 56.49 66.56 46.40 425.17 76.50 ECOM2F 65.44 82.05 40.51 984.73 216.69 ",
        "suffix": "w/",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                13,
                0.24577025823686555,
                null,
                null
            ],
            [
                80,
                0.24448217317487267,
                null,
                null
            ],
            [
                78,
                0.24242424242424243,
                null,
                null
            ],
            [
                44,
                0.22098421541318478,
                null,
                null
            ],
            [
                71,
                0.21102661596958175,
                null,
                null
            ],
            [
                65,
                0.20112781954887218,
                null,
                null
            ],
            [
                63,
                0.2005842259006816,
                null,
                null
            ],
            [
                74,
                0.1975071907957814,
                null,
                null
            ],
            [
                76,
                0.16565656565656567,
                null,
                null
            ],
            [
                59,
                0.15447154471544716,
                null,
                null
            ],
            [
                138,
                0.1488277268093782,
                null,
                null
            ],
            [
                139,
                0.13415892672858618,
                null,
                null
            ],
            [
                72,
                0.12770339855818744,
                null,
                null
            ],
            [
                15,
                0.1259029927760578,
                null,
                null
            ],
            [
                68,
                0.12396694214876033,
                null,
                null
            ],
            [
                99,
                0.1026694045174538,
                null,
                null
            ],
            [
                57,
                0.101159114857745,
                null,
                null
            ],
            [
                18,
                0.09533898305084745,
                null,
                null
            ],
            [
                61,
                0.09312169312169312,
                null,
                null
            ],
            [
                128,
                0.08917197452229299,
                null,
                null
            ],
            [
                67,
                0.0851063829787234,
                null,
                null
            ],
            [
                49,
                0.07470651013874066,
                null,
                null
            ],
            [
                2,
                0.0724174653887114,
                null,
                null
            ],
            [
                84,
                0.06815761448349308,
                null,
                null
            ],
            [
                98,
                0.06369426751592357,
                null,
                null
            ],
            [
                100,
                0.06369426751592357,
                null,
                null
            ],
            [
                29,
                0.06256742179072276,
                null,
                null
            ],
            [
                83,
                0.06236559139784946,
                null,
                null
            ],
            [
                12,
                0.06060606060606061,
                null,
                null
            ],
            [
                28,
                0.05411255411255411,
                null,
                null
            ],
            [
                70,
                0.05200433369447454,
                null,
                null
            ],
            [
                103,
                0.047670639219934995,
                null,
                null
            ],
            [
                88,
                0.04535637149028078,
                null,
                null
            ],
            [
                17,
                0.04371584699453552,
                null,
                null
            ],
            [
                101,
                0.04329004329004329,
                null,
                null
            ],
            [
                56,
                0.03938730853391685,
                null,
                null
            ],
            [
                60,
                0.039301310043668124,
                null,
                null
            ],
            [
                36,
                0.038834951456310676,
                null,
                null
            ],
            [
                133,
                0.03728070175438596,
                null,
                null
            ],
            [
                62,
                0.03723986856516977,
                null,
                null
            ],
            [
                58,
                0.03512623490669594,
                null,
                null
            ],
            [
                25,
                0.03504928806133625,
                null,
                null
            ],
            [
                21,
                0.026115342763873776,
                null,
                null
            ],
            [
                127,
                0.024282560706401765,
                null,
                null
            ],
            [
                79,
                0.024255788313120176,
                null,
                null
            ],
            [
                132,
                0.02207505518763797,
                null,
                null
            ],
            [
                54,
                0.01991150442477876,
                null,
                null
            ],
            [
                144,
                0.0176017601760176,
                null,
                null
            ],
            [
                122,
                0.015435501653803748,
                null,
                null
            ],
            [
                31,
                0.013289036544850499,
                null,
                null
            ],
            [
                9,
                0.011098779134295227,
                null,
                null
            ],
            [
                30,
                0.01107419712070875,
                null,
                null
            ],
            [
                16,
                0.008888888888888889,
                null,
                null
            ],
            [
                145,
                0.008879023307436182,
                null,
                null
            ],
            [
                86,
                0.0066815144766146995,
                null,
                null
            ],
            [
                87,
                0.004449388209121246,
                null,
                null
            ],
            [
                89,
                0.004449388209121246,
                null,
                null
            ],
            [
                91,
                0.004449388209121246,
                null,
                null
            ],
            [
                142,
                0.004434589800443459,
                null,
                null
            ],
            [
                0,
                0,
                null,
                null
            ],
            [
                1,
                0.0,
                null,
                null
            ],
            [
                3,
                0,
                null,
                null
            ],
            [
                4,
                0,
                null,
                null
            ],
            [
                5,
                0,
                null,
                null
            ],
            [
                6,
                0,
                null,
                null
            ],
            [
                7,
                0,
                null,
                null
            ],
            [
                8,
                0,
                null,
                null
            ],
            [
                10,
                0,
                null,
                null
            ],
            [
                11,
                0,
                null,
                null
            ],
            [
                14,
                0,
                null,
                null
            ],
            [
                19,
                0,
                null,
                null
            ],
            [
                20,
                0,
                null,
                null
            ],
            [
                22,
                0,
                null,
                null
            ],
            [
                23,
                0,
                null,
                null
            ],
            [
                24,
                0,
                null,
                null
            ],
            [
                26,
                0,
                null,
                null
            ],
            [
                27,
                0,
                null,
                null
            ],
            [
                32,
                0,
                null,
                null
            ],
            [
                33,
                0,
                null,
                null
            ],
            [
                34,
                0,
                null,
                null
            ],
            [
                35,
                0,
                null,
                null
            ],
            [
                37,
                0,
                null,
                null
            ],
            [
                38,
                0,
                null,
                null
            ],
            [
                39,
                0,
                null,
                null
            ],
            [
                40,
                0,
                null,
                null
            ],
            [
                41,
                0,
                null,
                null
            ],
            [
                42,
                0,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                46,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ],
            [
                48,
                0,
                null,
                null
            ],
            [
                50,
                0,
                null,
                null
            ],
            [
                51,
                0,
                null,
                null
            ],
            [
                52,
                0,
                null,
                null
            ],
            [
                53,
                0,
                null,
                null
            ],
            [
                55,
                0,
                null,
                null
            ],
            [
                64,
                0,
                null,
                null
            ],
            [
                66,
                0,
                null,
                null
            ],
            [
                69,
                0,
                null,
                null
            ],
            [
                73,
                0,
                null,
                null
            ],
            [
                75,
                0,
                null,
                null
            ],
            [
                77,
                0,
                null,
                null
            ],
            [
                81,
                0,
                null,
                null
            ],
            [
                82,
                0,
                null,
                null
            ],
            [
                85,
                0,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ],
            [
                92,
                0,
                null,
                null
            ],
            [
                93,
                0,
                null,
                null
            ],
            [
                94,
                0,
                null,
                null
            ],
            [
                95,
                0,
                null,
                null
            ],
            [
                96,
                0,
                null,
                null
            ],
            [
                97,
                0,
                null,
                null
            ],
            [
                102,
                0.0,
                null,
                null
            ],
            [
                104,
                0,
                null,
                null
            ],
            [
                105,
                0,
                null,
                null
            ],
            [
                106,
                0,
                null,
                null
            ],
            [
                107,
                0.0,
                null,
                null
            ],
            [
                108,
                0,
                null,
                null
            ],
            [
                109,
                0,
                null,
                null
            ],
            [
                110,
                0,
                null,
                null
            ],
            [
                111,
                0,
                null,
                null
            ],
            [
                112,
                0,
                null,
                null
            ],
            [
                113,
                0,
                null,
                null
            ],
            [
                114,
                0,
                null,
                null
            ],
            [
                115,
                0,
                null,
                null
            ],
            [
                116,
                0,
                null,
                null
            ],
            [
                117,
                0,
                null,
                null
            ],
            [
                118,
                0,
                null,
                null
            ],
            [
                119,
                0,
                null,
                null
            ],
            [
                120,
                0,
                null,
                null
            ],
            [
                121,
                0,
                null,
                null
            ],
            [
                123,
                0,
                null,
                null
            ],
            [
                124,
                0,
                null,
                null
            ],
            [
                125,
                0,
                null,
                null
            ],
            [
                126,
                0,
                null,
                null
            ],
            [
                129,
                0,
                null,
                null
            ],
            [
                130,
                0,
                null,
                null
            ],
            [
                131,
                0,
                null,
                null
            ],
            [
                134,
                0,
                null,
                null
            ],
            [
                135,
                0,
                null,
                null
            ],
            [
                136,
                0,
                null,
                null
            ],
            [
                137,
                0,
                null,
                null
            ],
            [
                140,
                0,
                null,
                null
            ],
            [
                141,
                0,
                null,
                null
            ],
            [
                143,
                0,
                null,
                null
            ],
            [
                146,
                0,
                null,
                null
            ],
            [
                147,
                0,
                null,
                null
            ],
            [
                148,
                0,
                null,
                null
            ],
            [
                149,
                0,
                null,
                null
            ],
            [
                150,
                0,
                null,
                null
            ],
            [
                151,
                0,
                null,
                null
            ],
            [
                152,
                0,
                null,
                null
            ],
            [
                153,
                0,
                null,
                null
            ],
            [
                154,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 3,
        "bbox": [
            136.72500000000002,
            370.8805184,
            204.34301056,
            379.8469184
        ],
        "prefix": "from ",
        "content": "our Step A. ",
        "suffix": "Values",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                36,
                0.3181818181818182,
                null,
                null
            ],
            [
                21,
                0.2222222222222222,
                null,
                null
            ],
            [
                88,
                0.18604651162790697,
                null,
                null
            ],
            [
                49,
                0.044626032029685965,
                30,
                35
            ],
            [
                74,
                0.027067056647322542,
                36,
                40
            ],
            [
                63,
                0.0003006878385955145,
                86,
                90
            ],
            [
                65,
                0.00011061687402956673,
                86,
                90
            ],
            [
                71,
                9.07998595249697e-06,
                122,
                126
            ],
            [
                23,
                0,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 4,
        "bbox": [
            205.58900000000003,
            553.7915184,
            376.77192224000004,
            562.7579184
        ],
        "prefix": "",
        "content": "Table 6: Impact of backbone size. ",
        "suffix": "ECOM2F",
        "equation hit": false,
        "assigned": false,
        "matches": [
            [
                70,
                0.42857142857142855,
                0,
                19
            ],
            [
                83,
                0.42857142857142855,
                0,
                19
            ],
            [
                88,
                0.36923076923076925,
                null,
                null
            ],
            [
                36,
                0.3333333333333333,
                null,
                null
            ],
            [
                21,
                0.2413793103448276,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 5,
        "bbox": [
            208.68398266,
            469.60106935425597,
            375.8112061089663,
            479.900980930384
        ],
        "prefix": "",
        "content": "Bakbone Model PQ mIOUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.3013698630136986,
                null,
                null
            ],
            [
                36,
                0.2972972972972973,
                null,
                null
            ],
            [
                21,
                0.18181818181818182,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 6,
        "bbox": [
            268.53509829999996,
            477.484177856384,
            370.10331850365446,
            483.697982720384
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                128,
                0.5135135135135135,
                null,
                null
            ],
            [
                83,
                0.4838709677419355,
                null,
                null
            ],
            [
                70,
                0.4727272727272727,
                null,
                null
            ],
            [
                101,
                0.42857142857142855,
                null,
                null
            ],
            [
                17,
                0.425531914893617,
                null,
                null
            ],
            [
                18,
                0.42105263157894735,
                null,
                null
            ],
            [
                127,
                0.42105263157894735,
                null,
                null
            ],
            [
                67,
                0.4166666666666667,
                null,
                null
            ],
            [
                29,
                0.4067796610169492,
                null,
                null
            ],
            [
                84,
                0.39436619718309857,
                null,
                null
            ],
            [
                12,
                0.39285714285714285,
                null,
                null
            ],
            [
                56,
                0.391304347826087,
                null,
                null
            ],
            [
                88,
                0.3793103448275862,
                null,
                null
            ],
            [
                49,
                0.37681159420289856,
                null,
                null
            ],
            [
                58,
                0.37209302325581395,
                null,
                null
            ],
            [
                28,
                0.35714285714285715,
                null,
                null
            ],
            [
                98,
                0.35135135135135137,
                null,
                null
            ],
            [
                100,
                0.35135135135135137,
                null,
                null
            ],
            [
                61,
                0.33766233766233766,
                null,
                null
            ],
            [
                60,
                0.3333333333333333,
                null,
                null
            ],
            [
                2,
                0.30985915492957744,
                null,
                null
            ],
            [
                79,
                0.3076923076923077,
                null,
                null
            ],
            [
                36,
                0.3050847457627119,
                null,
                null
            ],
            [
                68,
                0.3,
                null,
                null
            ],
            [
                15,
                0.297029702970297,
                null,
                null
            ],
            [
                57,
                0.2962962962962963,
                null,
                null
            ],
            [
                59,
                0.29310344827586204,
                null,
                null
            ],
            [
                138,
                0.2831858407079646,
                null,
                null
            ],
            [
                99,
                0.2830188679245283,
                null,
                null
            ],
            [
                139,
                0.27722772277227725,
                null,
                null
            ],
            [
                21,
                0.27450980392156865,
                null,
                null
            ],
            [
                25,
                0.26666666666666666,
                null,
                null
            ],
            [
                62,
                0.26666666666666666,
                null,
                null
            ],
            [
                76,
                0.26229508196721313,
                null,
                null
            ],
            [
                72,
                0.2524271844660194,
                null,
                null
            ],
            [
                9,
                0.24242424242424243,
                null,
                null
            ],
            [
                30,
                0.22857142857142856,
                null,
                null
            ],
            [
                103,
                0.21818181818181817,
                null,
                null
            ],
            [
                63,
                0.2138364779874214,
                null,
                null
            ],
            [
                132,
                0.21052631578947367,
                null,
                null
            ],
            [
                16,
                0.1875,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 7,
        "bbox": [
            268.33343239,
            458.82973467638396,
            316.15621185544006,
            465.04353954038396
        ],
        "prefix": "",
        "content": "Dataset: COCO ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.26666666666666666,
                null,
                null
            ],
            [
                36,
                0.2608695652173913,
                null,
                null
            ],
            [
                21,
                0.10526315789473684,
                null,
                null
            ],
            [
                23,
                0,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 8,
        "bbox": [
            263.06447735999996,
            404.562893616384,
            321.4308409186752,
            410.77669848038397
        ],
        "prefix": "",
        "content": "Dataset: Cityscapes ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.27450980392156865,
                null,
                null
            ],
            [
                36,
                0.2692307692307692,
                null,
                null
            ],
            [
                21,
                0.09090909090909091,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 9,
        "bbox": [
            34.016,
            322.7362556,
            379.84342472000003,
            332.6988556
        ],
        "prefix": "",
        "content": "– Impact of total encoder layers K in the parent architecture. In situations where ",
        "suffix": "computational",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.7125743895917112,
                186,
                265
            ]
        ]
    },
    {
        "page": 11,
        "index": 10,
        "bbox": [
            44.72399999999999,
            310.5023028,
            379.84458118,
            320.7438556
        ],
        "prefix": "where ",
        "content": "computational resources are limited, we present an approach using ECOM2F ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.6735070986802528,
                186,
                252
            ]
        ]
    },
    {
        "page": 11,
        "index": 11,
        "bbox": [
            44.72399999999999,
            298.8252556,
            379.83996124,
            308.7878556
        ],
        "prefix": "ECOM2F ",
        "content": "to create a scaleddown version of the parent model. As illustrated in Tab. 4, ",
        "suffix": "we",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.6926303150014548,
                194,
                264
            ]
        ]
    },
    {
        "page": 11,
        "index": 12,
        "bbox": [
            44.72399999999999,
            286.8702556,
            379.84003744,
            296.8328556
        ],
        "prefix": "4, ",
        "content": "we analyze the impact of K set to 5 and 4 (in place of the default value of ",
        "suffix": "6).",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.8384062221578775,
                228,
                302
            ]
        ]
    },
    {
        "page": 11,
        "index": 13,
        "bbox": [
            44.72399999999999,
            274.6363028,
            379.84458118000003,
            284.87785560000003
        ],
        "prefix": "of ",
        "content": "6). We set β = 0.0005 for all the models. It can be observed that ECOM2F ",
        "suffix": "not",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.7805086603428544,
                228,
                291
            ]
        ]
    },
    {
        "page": 11,
        "index": 14,
        "bbox": [
            44.724000000000046,
            262.96025560000004,
            379.83996124000015,
            272.92285560000005
        ],
        "prefix": "ECOM2F ",
        "content": "not only reduces the computational load but also preserves the performance of ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.8571428572321539,
                236,
                314
            ]
        ]
    },
    {
        "page": 11,
        "index": 15,
        "bbox": [
            44.724000000000046,
            251.00525560000003,
            379.8430197,
            260.9678556
        ],
        "prefix": "of ",
        "content": "the parent model. Importantly, we only execute Step C for each configuration ",
        "suffix": "which",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.7405628766214402,
                236,
                318
            ]
        ]
    },
    {
        "page": 11,
        "index": 16,
        "bbox": [
            44.724000000000046,
            239.04925560000004,
            233.25026484000009,
            249.01185560000002
        ],
        "prefix": "configuration ",
        "content": "which involves training the gating network. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                1.0,
                822,
                865
            ]
        ]
    },
    {
        "page": 11,
        "index": 17,
        "bbox": [
            34.01600000000005,
            212.47625560000003,
            379.84539190000004,
            222.4388556
        ],
        "prefix": "",
        "content": "Impact of backbone features. We analyze the impact of backbone features ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 18,
        "bbox": [
            34.01600000000005,
            200.24130280000003,
            379.8463884000001,
            210.48285560000002
        ],
        "prefix": "features ",
        "content": "on ECOM2F in Tab. 6 and Tab. 8, since our gating network mechanism takes ",
        "suffix": "these",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 19,
        "bbox": [
            34.01600000000005,
            188.56525560000003,
            135.19417308000004,
            198.5278556
        ],
        "prefix": "takes ",
        "content": "these features as input. ",
        "suffix": "–",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                0.8333333333333334,
                157,
                181
            ]
        ]
    },
    {
        "page": 11,
        "index": 20,
        "bbox": [
            34.01600000000005,
            175.79830280000002,
            379.84288016000005,
            186.0398556
        ],
        "prefix": "input. ",
        "content": "– Size variations. In Table 6, we evaluate ECOM2F with backbones of different ",
        "suffix": "sizes.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.3054397069022315,
                21,
                106
            ]
        ]
    },
    {
        "page": 11,
        "index": 21,
        "bbox": [
            44.724000000000046,
            164.12225560000002,
            379.8429500200001,
            174.0848556
        ],
        "prefix": "different ",
        "content": "sizes. Specifically, we observe the performance with SWINTiny (T), SWIN",
        "suffix": "Small",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                119,
                196
            ]
        ]
    },
    {
        "page": 11,
        "index": 22,
        "bbox": [
            44.724000000000046,
            152.1672556,
            379.8399612399999,
            162.12985559999998
        ],
        "prefix": "SWIN",
        "content": "Small (S), and SWINBase (B) architectures [22]. We can observe the adapt",
        "suffix": "ability",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.7737737007695015,
                119,
                189
            ]
        ]
    },
    {
        "page": 11,
        "index": 23,
        "bbox": [
            44.724000000000046,
            139.93330279999998,
            379.84143914000015,
            150.17485559999997
        ],
        "prefix": "adapt",
        "content": "ability of ECOM2F in delivering robust performance efficiency across a range ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.6132224093128378,
                106,
                189
            ]
        ]
    },
    {
        "page": 11,
        "index": 24,
        "bbox": [
            44.72400000000003,
            127.97830279999997,
            379.8475995400001,
            138.21985559999996
        ],
        "prefix": "range ",
        "content": "of these backbone sizes. Furthermore, this versatility of ECOM2F extends to ",
        "suffix": "LiteM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.7863946277037253,
                189,
                266
            ]
        ]
    },
    {
        "page": 11,
        "index": 25,
        "bbox": [
            44.724000000000046,
            116.30225559999997,
            331.3579646000002,
            126.26485559999998
        ],
        "prefix": "to ",
        "content": "LiteM2F metaarchitecture as well (see supplementary material). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                336,
                399
            ]
        ]
    },
    {
        "page": 11,
        "index": 26,
        "bbox": [
            34.01600000000005,
            103.81425559999997,
            379.84546802000006,
            113.77685559999998
        ],
        "prefix": "",
        "content": "– Pretrained weight variations. We explore how different pretraining strate",
        "suffix": "gies",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.8000000185539136,
                189,
                267
            ]
        ]
    },
    {
        "page": 11,
        "index": 27,
        "bbox": [
            44.724000000000046,
            91.58030279999997,
            379.84580768000006,
            101.82185559999998
        ],
        "prefix": "strate",
        "content": "gies for the backbones affect the performance of ECOM2F in Table 8. We ",
        "suffix": "initialize",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.4541906365538609,
                106,
                192
            ]
        ]
    },
    {
        "page": 11,
        "index": 28,
        "bbox": [
            44.724000000000046,
            79.90325559999997,
            379.8431101000001,
            89.86585559999997
        ],
        "prefix": "We ",
        "content": "initialize the backbone weights using both supervised learning (SL) and self",
        "suffix": "supervised",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                500,
                587
            ]
        ]
    },
    {
        "page": 11,
        "index": 29,
        "bbox": [
            44.7240000000001,
            67.94825559999997,
            379.8411529600001,
            77.91085559999998
        ],
        "prefix": "self",
        "content": "supervised learning (SSL) techniques on the ImageNet1K dataset [8]. For SSL ",
        "suffix": "pretraining",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.6861952948629746,
                106,
                168
            ]
        ]
    },
    {
        "page": 11,
        "index": 30,
        "bbox": [
            44.7240000000001,
            55.993255599999976,
            379.84295002000005,
            65.95585559999998
        ],
        "prefix": "SSL ",
        "content": "pretraining on the SWINT [22] backbone, we utilize MoBY [35]. For SSL pre",
        "suffix": "training",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.8142040879616844,
                337,
                410
            ]
        ]
    },
    {
        "page": 11,
        "index": 31,
        "bbox": [
            44.7240000000001,
            44.03825559999998,
            379.83796872,
            54.00085559999997
        ],
        "prefix": "pre",
        "content": "training on the Res50 [13] backbone, we use DINO [3]. With MoBY weights ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 32,
        "bbox": [
            44.7240000000001,
            31.804302799999977,
            379.83937260000016,
            42.045855599999975
        ],
        "prefix": "weights ",
        "content": "on the SWINT backbone, ECOM2F maintains 99.7% of the PQ of M2F while ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.8815420106765619,
                392,
                462
            ]
        ]
    },
    {
        "page": 12,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.8466329599999,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 13 ",
        "suffix": "",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": false,
        "matches": [
            [
                15,
                0.6617647058823529,
                null,
                null
            ],
            [
                18,
                0.6306306306306306,
                null,
                null
            ],
            [
                68,
                0.6074074074074074,
                null,
                null
            ],
            [
                76,
                0.5987261146496815,
                null,
                null
            ],
            [
                59,
                0.5960264900662252,
                null,
                null
            ],
            [
                61,
                0.5892857142857143,
                null,
                null
            ],
            [
                57,
                0.5862068965517241,
                null,
                null
            ],
            [
                138,
                0.581081081081081,
                null,
                null
            ],
            [
                83,
                0.5773195876288659,
                null,
                null
            ],
            [
                67,
                0.5607476635514018,
                null,
                null
            ],
            [
                139,
                0.5588235294117647,
                null,
                null
            ],
            [
                63,
                0.5567010309278351,
                null,
                null
            ],
            [
                84,
                0.5283018867924528,
                null,
                null
            ],
            [
                74,
                0.5142857142857142,
                null,
                null
            ],
            [
                12,
                0.5054945054945055,
                null,
                null
            ],
            [
                71,
                0.4931506849315068,
                null,
                null
            ],
            [
                72,
                0.4927536231884058,
                null,
                null
            ],
            [
                29,
                0.48936170212765956,
                null,
                null
            ],
            [
                70,
                0.4666666666666667,
                null,
                null
            ],
            [
                49,
                0.46153846153846156,
                null,
                null
            ],
            [
                99,
                0.45390070921985815,
                null,
                null
            ],
            [
                44,
                0.4426229508196721,
                null,
                null
            ],
            [
                65,
                0.44155844155844154,
                null,
                null
            ],
            [
                28,
                0.4175824175824176,
                null,
                null
            ],
            [
                17,
                0.4146341463414634,
                null,
                null
            ],
            [
                2,
                0.39622641509433965,
                null,
                null
            ],
            [
                56,
                0.3950617283950617,
                null,
                null
            ],
            [
                60,
                0.3855421686746988,
                null,
                null
            ],
            [
                98,
                0.3853211009174312,
                null,
                null
            ],
            [
                100,
                0.3853211009174312,
                null,
                null
            ],
            [
                128,
                0.3853211009174312,
                null,
                null
            ],
            [
                13,
                0.3793103448275862,
                null,
                null
            ],
            [
                101,
                0.37362637362637363,
                null,
                null
            ],
            [
                58,
                0.358974358974359,
                null,
                null
            ],
            [
                25,
                0.35,
                null,
                null
            ],
            [
                62,
                0.35,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 1,
        "bbox": [
            34.01599999999999,
            537.8615184000001,
            379.8465088,
            580.6579184000001
        ],
        "prefix": "detec",
        "content": "tion tasks as ECODETR. (Dataset: COCO; Backbone: Res50) our approach to DETR [2] for object detecTable 7: Impact on DETR. We extend ECOM2F applies to backbone weights obtained through selfsupervised pretraining as well. (Dataset: COCO) Table 8: Impact of backbone weights. ",
        "suffix": "Backbone:",
        "equation hit": "= λmaskmask(, ) + λclassclass(ℓ̃, ℓ),",
        "assigned": false,
        "matches": [
            [
                13,
                0.718562874251497,
                null,
                null
            ],
            [
                80,
                0.7050359712230215,
                null,
                null
            ],
            [
                78,
                0.6677215189873418,
                null,
                null
            ],
            [
                71,
                0.6558139534883721,
                null,
                null
            ],
            [
                44,
                0.6417582417582418,
                null,
                null
            ],
            [
                65,
                0.6244343891402715,
                null,
                null
            ],
            [
                74,
                0.5938242280285035,
                null,
                null
            ],
            [
                63,
                0.5777777777777777,
                null,
                null
            ],
            [
                76,
                0.4673913043478261,
                null,
                null
            ],
            [
                138,
                0.45125348189415043,
                null,
                null
            ],
            [
                59,
                0.425414364640884,
                null,
                null
            ],
            [
                15,
                0.4092219020172911,
                null,
                null
            ],
            [
                139,
                0.3919308357348703,
                null,
                null
            ],
            [
                72,
                0.38968481375358166,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 2,
        "bbox": [
            36.70980188,
            482.098890592,
            375.1588722587648,
            523.877862800512
        ],
        "prefix": "",
        "content": "Model AP AP50 APS APM APL Total Tx. Enc. DETR [2] 42.0 62.4 20.5 45.8 61.1 83.59 9.92 ECODETR(β = 0.0001) 41.9 62.2 20.8 45.8 60.4 81.87 6.41 ECODETR(β = 0.001) 40.9 61.5 20.2 44.5 59.1 79.92 4.52 ECODETR(β = 0.01) 40.2 61.0 18.7 43.6 58.8 79.33 3.94 Performance (↑) GFLOPs (↓) SWINT(MoBY [36]) M2F [5] 51.64 62.42 41.93 235.57 121.69 Res50(DINO [3]) M2F [5] 51.57 61.65 41.24 229.41 126.05 ECOM2F 51.89 61.67 41.30 191.97 88.50 ECOM2F 51.48 62.49 41.27 203.56 89.64 ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                63,
                0.19699499165275458,
                null,
                null
            ],
            [
                59,
                0.18705035971223022,
                null,
                null
            ],
            [
                13,
                0.18129496402877698,
                null,
                null
            ],
            [
                80,
                0.17866666666666667,
                null,
                null
            ],
            [
                78,
                0.1694915254237288,
                null,
                null
            ],
            [
                128,
                0.15953307392996108,
                null,
                null
            ],
            [
                139,
                0.1589648798521257,
                null,
                null
            ],
            [
                72,
                0.15837937384898712,
                null,
                null
            ],
            [
                44,
                0.14791987673343607,
                null,
                null
            ],
            [
                71,
                0.14743589743589744,
                null,
                null
            ],
            [
                76,
                0.14590747330960854,
                null,
                null
            ],
            [
                138,
                0.14466546112115733,
                null,
                null
            ],
            [
                74,
                0.14308943089430895,
                null,
                null
            ],
            [
                15,
                0.1367837338262477,
                null,
                null
            ],
            [
                99,
                0.13186813186813187,
                null,
                null
            ],
            [
                61,
                0.13152804642166344,
                null,
                null
            ],
            [
                65,
                0.12578616352201258,
                null,
                null
            ],
            [
                18,
                0.1124031007751938,
                null,
                null
            ],
            [
                83,
                0.10756972111553785,
                null,
                null
            ],
            [
                57,
                0.10748560460652591,
                null,
                null
            ],
            [
                67,
                0.10546875,
                null,
                null
            ],
            [
                68,
                0.1037037037037037,
                null,
                null
            ],
            [
                84,
                0.10176125244618395,
                null,
                null
            ],
            [
                2,
                0.09393346379647749,
                null,
                null
            ],
            [
                98,
                0.0933852140077821,
                null,
                null
            ],
            [
                100,
                0.0933852140077821,
                null,
                null
            ],
            [
                49,
                0.09037328094302555,
                null,
                null
            ],
            [
                88,
                0.08433734939759036,
                null,
                null
            ],
            [
                70,
                0.08080808080808081,
                null,
                null
            ],
            [
                29,
                0.08016032064128256,
                null,
                null
            ],
            [
                12,
                0.07258064516129033,
                null,
                null
            ],
            [
                133,
                0.07024793388429752,
                null,
                null
            ],
            [
                17,
                0.06570841889117043,
                null,
                null
            ],
            [
                103,
                0.06464646464646465,
                null,
                null
            ],
            [
                101,
                0.06451612903225806,
                null,
                null
            ],
            [
                36,
                0.06412825651302605,
                null,
                null
            ],
            [
                58,
                0.062111801242236024,
                null,
                null
            ],
            [
                60,
                0.06147540983606557,
                null,
                null
            ],
            [
                56,
                0.05761316872427984,
                null,
                null
            ],
            [
                28,
                0.05241935483870968,
                null,
                null
            ],
            [
                25,
                0.049484536082474224,
                null,
                null
            ],
            [
                127,
                0.04602510460251046,
                null,
                null
            ],
            [
                62,
                0.04536082474226804,
                null,
                null
            ],
            [
                21,
                0.04480651731160896,
                null,
                null
            ],
            [
                54,
                0.03361344537815126,
                null,
                null
            ],
            [
                79,
                0.033402922755741124,
                null,
                null
            ],
            [
                144,
                0.033264033264033266,
                null,
                null
            ],
            [
                132,
                0.029288702928870293,
                null,
                null
            ],
            [
                122,
                0.029227557411273485,
                null,
                null
            ],
            [
                31,
                0.02526315789473684,
                null,
                null
            ],
            [
                9,
                0.016913319238900635,
                null,
                null
            ],
            [
                30,
                0.016842105263157894,
                null,
                null
            ],
            [
                86,
                0.01276595744680851,
                null,
                null
            ],
            [
                16,
                0.012711864406779662,
                null,
                null
            ],
            [
                142,
                0.012658227848101266,
                null,
                null
            ],
            [
                145,
                0.008456659619450317,
                null,
                null
            ],
            [
                87,
                0.004246284501061571,
                null,
                null
            ],
            [
                89,
                0.004246284501061571,
                null,
                null
            ],
            [
                91,
                0.004246284501061571,
                null,
                null
            ],
            [
                0,
                0,
                null,
                null
            ],
            [
                1,
                0.0,
                null,
                null
            ],
            [
                3,
                0,
                null,
                null
            ],
            [
                4,
                0,
                null,
                null
            ],
            [
                5,
                0,
                null,
                null
            ],
            [
                6,
                0,
                null,
                null
            ],
            [
                7,
                0,
                null,
                null
            ],
            [
                8,
                0,
                null,
                null
            ],
            [
                10,
                0,
                null,
                null
            ],
            [
                11,
                0,
                null,
                null
            ],
            [
                14,
                0,
                null,
                null
            ],
            [
                19,
                0,
                null,
                null
            ],
            [
                20,
                0,
                null,
                null
            ],
            [
                22,
                0,
                null,
                null
            ],
            [
                23,
                0,
                null,
                null
            ],
            [
                24,
                0,
                null,
                null
            ],
            [
                26,
                0,
                null,
                null
            ],
            [
                27,
                0,
                null,
                null
            ],
            [
                32,
                0,
                null,
                null
            ],
            [
                33,
                0,
                null,
                null
            ],
            [
                34,
                0,
                null,
                null
            ],
            [
                35,
                0,
                null,
                null
            ],
            [
                37,
                0,
                null,
                null
            ],
            [
                38,
                0,
                null,
                null
            ],
            [
                39,
                0,
                null,
                null
            ],
            [
                40,
                0,
                null,
                null
            ],
            [
                41,
                0,
                null,
                null
            ],
            [
                42,
                0,
                null,
                null
            ],
            [
                43,
                0,
                null,
                null
            ],
            [
                45,
                0,
                null,
                null
            ],
            [
                46,
                0,
                null,
                null
            ],
            [
                47,
                0,
                null,
                null
            ],
            [
                48,
                0,
                null,
                null
            ],
            [
                50,
                0,
                null,
                null
            ],
            [
                51,
                0,
                null,
                null
            ],
            [
                52,
                0,
                null,
                null
            ],
            [
                53,
                0,
                null,
                null
            ],
            [
                55,
                0,
                null,
                null
            ],
            [
                64,
                0,
                null,
                null
            ],
            [
                66,
                0,
                null,
                null
            ],
            [
                69,
                0,
                null,
                null
            ],
            [
                73,
                0,
                null,
                null
            ],
            [
                75,
                0,
                null,
                null
            ],
            [
                77,
                0,
                null,
                null
            ],
            [
                81,
                0,
                null,
                null
            ],
            [
                82,
                0,
                null,
                null
            ],
            [
                85,
                0,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ],
            [
                92,
                0,
                null,
                null
            ],
            [
                93,
                0,
                null,
                null
            ],
            [
                94,
                0,
                null,
                null
            ],
            [
                95,
                0,
                null,
                null
            ],
            [
                96,
                0,
                null,
                null
            ],
            [
                97,
                0,
                null,
                null
            ],
            [
                102,
                0.0,
                null,
                null
            ],
            [
                104,
                0,
                null,
                null
            ],
            [
                105,
                0,
                null,
                null
            ],
            [
                106,
                0,
                null,
                null
            ],
            [
                107,
                0.0,
                null,
                null
            ],
            [
                108,
                0,
                null,
                null
            ],
            [
                109,
                0,
                null,
                null
            ],
            [
                110,
                0,
                null,
                null
            ],
            [
                111,
                0,
                null,
                null
            ],
            [
                112,
                0,
                null,
                null
            ],
            [
                113,
                0,
                null,
                null
            ],
            [
                114,
                0,
                null,
                null
            ],
            [
                115,
                0,
                null,
                null
            ],
            [
                116,
                0,
                null,
                null
            ],
            [
                117,
                0,
                null,
                null
            ],
            [
                118,
                0,
                null,
                null
            ],
            [
                119,
                0,
                null,
                null
            ],
            [
                120,
                0,
                null,
                null
            ],
            [
                121,
                0,
                null,
                null
            ],
            [
                123,
                0,
                null,
                null
            ],
            [
                124,
                0,
                null,
                null
            ],
            [
                125,
                0,
                null,
                null
            ],
            [
                126,
                0,
                null,
                null
            ],
            [
                129,
                0,
                null,
                null
            ],
            [
                130,
                0,
                null,
                null
            ],
            [
                131,
                0,
                null,
                null
            ],
            [
                134,
                0,
                null,
                null
            ],
            [
                135,
                0,
                null,
                null
            ],
            [
                136,
                0,
                null,
                null
            ],
            [
                137,
                0,
                null,
                null
            ],
            [
                140,
                0,
                null,
                null
            ],
            [
                141,
                0,
                null,
                null
            ],
            [
                143,
                0,
                null,
                null
            ],
            [
                146,
                0,
                null,
                null
            ],
            [
                147,
                0,
                null,
                null
            ],
            [
                148,
                0,
                null,
                null
            ],
            [
                149,
                0,
                null,
                null
            ],
            [
                150,
                0,
                null,
                null
            ],
            [
                151,
                0,
                null,
                null
            ],
            [
                152,
                0,
                null,
                null
            ],
            [
                153,
                0,
                null,
                null
            ],
            [
                154,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 3,
        "bbox": [
            211.23064708,
            511.332091951328,
            379.0413632403392,
            519.8837190889919
        ],
        "prefix": "",
        "content": "Bakbone Model PQ mIOUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.3013698630136986,
                null,
                null
            ],
            [
                36,
                0.2972972972972973,
                null,
                null
            ],
            [
                21,
                0.18181818181818182,
                null,
                null
            ],
            [
                90,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 4,
        "bbox": [
            292.62505264,
            517.877138876992,
            375.62820539790727,
            523.036226108992
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                128,
                0.5135135135135135,
                null,
                null
            ],
            [
                83,
                0.4838709677419355,
                null,
                null
            ],
            [
                70,
                0.4727272727272727,
                null,
                null
            ],
            [
                101,
                0.42857142857142855,
                null,
                null
            ],
            [
                17,
                0.425531914893617,
                null,
                null
            ],
            [
                18,
                0.42105263157894735,
                null,
                null
            ],
            [
                127,
                0.42105263157894735,
                null,
                null
            ],
            [
                67,
                0.4166666666666667,
                null,
                null
            ],
            [
                29,
                0.4067796610169492,
                null,
                null
            ],
            [
                84,
                0.39436619718309857,
                null,
                null
            ],
            [
                12,
                0.39285714285714285,
                null,
                null
            ],
            [
                56,
                0.391304347826087,
                null,
                null
            ],
            [
                88,
                0.3793103448275862,
                null,
                null
            ],
            [
                49,
                0.37681159420289856,
                null,
                null
            ],
            [
                58,
                0.37209302325581395,
                null,
                null
            ],
            [
                28,
                0.35714285714285715,
                null,
                null
            ],
            [
                98,
                0.35135135135135137,
                null,
                null
            ],
            [
                100,
                0.35135135135135137,
                null,
                null
            ],
            [
                61,
                0.33766233766233766,
                null,
                null
            ],
            [
                60,
                0.3333333333333333,
                null,
                null
            ],
            [
                2,
                0.30985915492957744,
                null,
                null
            ],
            [
                79,
                0.3076923076923077,
                null,
                null
            ],
            [
                36,
                0.3050847457627119,
                null,
                null
            ],
            [
                68,
                0.3,
                null,
                null
            ],
            [
                15,
                0.297029702970297,
                null,
                null
            ],
            [
                57,
                0.2962962962962963,
                null,
                null
            ],
            [
                59,
                0.29310344827586204,
                null,
                null
            ],
            [
                138,
                0.2831858407079646,
                null,
                null
            ],
            [
                99,
                0.2830188679245283,
                null,
                null
            ],
            [
                139,
                0.27722772277227725,
                null,
                null
            ],
            [
                21,
                0.27450980392156865,
                null,
                null
            ],
            [
                25,
                0.26666666666666666,
                null,
                null
            ],
            [
                62,
                0.26666666666666666,
                null,
                null
            ],
            [
                76,
                0.26229508196721313,
                null,
                null
            ],
            [
                72,
                0.2524271844660194,
                null,
                null
            ],
            [
                9,
                0.24242424242424243,
                null,
                null
            ],
            [
                30,
                0.22857142857142856,
                null,
                null
            ],
            [
                103,
                0.21818181818181817,
                null,
                null
            ],
            [
                63,
                0.2138364779874214,
                null,
                null
            ],
            [
                132,
                0.21052631578947367,
                null,
                null
            ],
            [
                16,
                0.1875,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 5,
        "bbox": [
            44.724,
            445.0742556,
            379.83697245999997,
            455.0368556
        ],
        "prefix": "",
        "content": "reducing GFLOPs in the transformer encoder by 26.34%. With DINO weights ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                760,
                832
            ]
        ]
    },
    {
        "page": 12,
        "index": 6,
        "bbox": [
            44.724,
            433.1182556,
            379.83896498,
            443.0808556
        ],
        "prefix": "weights ",
        "content": "on the Res50 backbone, we observe a reduction of 29.79% in GFLOPs in the ",
        "suffix": "transformer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.9411962036839943,
                760,
                833
            ]
        ]
    },
    {
        "page": 12,
        "index": 7,
        "bbox": [
            44.724,
            421.1632556,
            305.51697271999996,
            431.1258556
        ],
        "prefix": "the ",
        "content": "transformer encoder, alongside a slight improvement in PQ. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.9039261425818458,
                760,
                818
            ]
        ]
    },
    {
        "page": 12,
        "index": 8,
        "bbox": [
            34.016,
            397.9422556,
            379.84474167999997,
            407.9048556
        ],
        "prefix": "",
        "content": "Performance in object detection. To demonstrate the applicability of our ",
        "suffix": "method",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 9,
        "bbox": [
            34.01599999999999,
            385.9872556,
            379.83976372000024,
            395.94985560000003
        ],
        "prefix": "our ",
        "content": "method beyond segmentation, we extend our proposed three step recipe for ob",
        "suffix": "ject",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                1.0,
                40,
                120
            ]
        ]
    },
    {
        "page": 12,
        "index": 10,
        "bbox": [
            34.01599999999999,
            373.75330280000003,
            379.84347496000004,
            383.99485560000005
        ],
        "prefix": "ob",
        "content": "ject detection task using DETR [2] for object detection task and name it ECO",
        "suffix": "DETR.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                0.829037904265188,
                120,
                184
            ]
        ]
    },
    {
        "page": 12,
        "index": 11,
        "bbox": [
            34.01600000000002,
            361.79830280000004,
            379.83816054000005,
            372.03985560000007
        ],
        "prefix": "ECO",
        "content": "DETR. In particular, we vary the values of the adaptation factor β to analyze ",
        "suffix": "performancecomputation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                0.7737737007695015,
                131,
                201
            ]
        ]
    },
    {
        "page": 12,
        "index": 12,
        "bbox": [
            34.01600000000002,
            349.84330280000006,
            379.84028942000003,
            360.0848556000001
        ],
        "prefix": "analyze ",
        "content": "performancecomputation tradeoffs of ECODETR in Table 7. Clearly, the resul",
        "suffix": "tant",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 13,
        "bbox": [
            34.01600000000002,
            338.16625560000006,
            379.8377712000001,
            348.12885560000007
        ],
        "prefix": "resul",
        "content": "tant architecture maintains the performance but helps in reducing the compu",
        "suffix": "tations",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                1.0,
                362,
                440
            ]
        ]
    },
    {
        "page": 12,
        "index": 14,
        "bbox": [
            34.01600000000002,
            326.2112556000001,
            379.84521088,
            336.1738556000001
        ],
        "prefix": "compu",
        "content": "tations of the encoder (e.g., it achieves a 35.38% reduction in GFLOPs in the ",
        "suffix": "transformer",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                0.6871044196503676,
                228,
                297
            ]
        ]
    },
    {
        "page": 12,
        "index": 15,
        "bbox": [
            34.016000000000005,
            314.2562556000001,
            324.24048564000003,
            324.2188556000001
        ],
        "prefix": "the ",
        "content": "transformer encoder without significantly impacting performance). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                1.0,
                431,
                496
            ]
        ]
    },
    {
        "page": 12,
        "index": 16,
        "bbox": [
            34.016000000000005,
            285.0582556000001,
            183.96408886,
            295.0208556000001
        ],
        "prefix": "",
        "content": "4.3 Qualitative Comparisons ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                75,
                0.5,
                0,
                23
            ]
        ]
    },
    {
        "page": 12,
        "index": 17,
        "bbox": [
            34.016000000000005,
            265.8222556000001,
            379.83976372000006,
            275.7848556000001
        ],
        "prefix": "",
        "content": "We present a few examples of predicted segmentation maps in Fig. 6 with SWIN",
        "suffix": "T",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 18,
        "bbox": [
            34.016000000000005,
            253.5883028000001,
            379.83848955999997,
            263.8298556000001
        ],
        "prefix": "SWIN",
        "content": "T [22] backbone. Compared to the parent architecture, ECOM2F consistently ",
        "suffix": "shows",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                0.6340372818985522,
                95,
                161
            ]
        ]
    },
    {
        "page": 12,
        "index": 19,
        "bbox": [
            34.01600000000002,
            241.9122556000001,
            379.8407599799998,
            251.87485560000007
        ],
        "prefix": "consistently ",
        "content": "shows strong performance while selfselecting the encoder layers based on the ",
        "suffix": "input",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                1.0,
                161,
                238
            ]
        ]
    },
    {
        "page": 12,
        "index": 20,
        "bbox": [
            34.01600000000002,
            229.9562556000001,
            379.84075998000026,
            239.9188556000001
        ],
        "prefix": "the ",
        "content": "input examples, both in everyday scenes (on COCO dataset) as well as intricate ",
        "suffix": "traffic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                0.9426303124139936,
                161,
                240
            ]
        ]
    },
    {
        "page": 12,
        "index": 21,
        "bbox": [
            34.01600000000002,
            218.0012556000001,
            198.38196358,
            227.96385560000007
        ],
        "prefix": "intricate ",
        "content": "traffic scenes (on Cityscapes dataset). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                0.7142865920303362,
                161,
                200
            ]
        ]
    },
    {
        "page": 12,
        "index": 22,
        "bbox": [
            34.01600000000002,
            186.4236912000001,
            123.80911616000003,
            198.37889120000008
        ],
        "prefix": "",
        "content": "5 Conclusions ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                77,
                0.5,
                0,
                11
            ]
        ]
    },
    {
        "page": 12,
        "index": 23,
        "bbox": [
            34.01600000000002,
            163.31030280000007,
            379.8437653000001,
            173.55185560000007
        ],
        "prefix": "",
        "content": "In this paper, we propose an efficient transformer encoder design ECOM2F for the ",
        "suffix": "Mask2Formerstyle",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.8730807257248878,
                0,
                82
            ]
        ]
    },
    {
        "page": 12,
        "index": 24,
        "bbox": [
            34.016000000000076,
            151.35530280000006,
            379.84331822000007,
            161.59685560000005
        ],
        "prefix": "the ",
        "content": "Mask2Formerstyle frameworks. ECOM2F provides a threestep training recipe ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.6386195080060177,
                0,
                72
            ]
        ]
    },
    {
        "page": 12,
        "index": 25,
        "bbox": [
            34.016000000000076,
            139.67925560000006,
            379.84275249999996,
            149.64185560000004
        ],
        "prefix": "recipe ",
        "content": "that can be used to customize the transformer encoder on the fly given the ",
        "suffix": "input",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.9375,
                72,
                147
            ]
        ]
    },
    {
        "page": 12,
        "index": 26,
        "bbox": [
            34.016000000000076,
            127.72425560000003,
            379.8401070400001,
            137.68685560000003
        ],
        "prefix": "the ",
        "content": "input image. The first step involves training the parent model to be dynamic ",
        "suffix": "by",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                1.0,
                229,
                306
            ]
        ]
    },
    {
        "page": 12,
        "index": 27,
        "bbox": [
            34.016000000000076,
            115.76925560000004,
            379.8397637200002,
            125.73185560000005
        ],
        "prefix": "dynamic ",
        "content": "by allowing stochastic depths at the transformer encoder. The second step in",
        "suffix": "volves",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.9230769230769231,
                0,
                83
            ]
        ]
    },
    {
        "page": 12,
        "index": 28,
        "bbox": [
            34.016000000000076,
            103.81425560000004,
            379.83777120000013,
            113.77685560000005
        ],
        "prefix": "in",
        "content": "volves creating a derived dataset from the training dataset which contains a ",
        "suffix": "pair",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                1.0,
                312,
                382
            ]
        ]
    },
    {
        "page": 12,
        "index": 29,
        "bbox": [
            34.016000000000076,
            91.85825560000004,
            379.84673754000005,
            101.82085560000004
        ],
        "prefix": "a ",
        "content": "pair of image and layer number that provides the highest segmentation quality. ",
        "suffix": "Finally,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.9285714645962616,
                312,
                391
            ]
        ]
    },
    {
        "page": 12,
        "index": 30,
        "bbox": [
            34.016000000000076,
            79.90325560000004,
            379.84374876000015,
            89.86585560000005
        ],
        "prefix": "quality. ",
        "content": "Finally, the third step involves training a gating network, whose function is to ",
        "suffix": "decide",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.8000030266619842,
                155,
                236
            ]
        ]
    },
    {
        "page": 12,
        "index": 31,
        "bbox": [
            34.016000000000076,
            67.94825560000004,
            379.84574128000014,
            77.91085560000005
        ],
        "prefix": "to ",
        "content": "decide the number of layers to be used given the input image. Extensive exper",
        "suffix": "iments",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                1.0,
                393,
                477
            ]
        ]
    },
    {
        "page": 12,
        "index": 32,
        "bbox": [
            34.016000000000076,
            55.71430280000004,
            379.8415130000002,
            65.95585560000005
        ],
        "prefix": "exper",
        "content": "iments demonstrate that ECOM2F achieves significantly reduced computational ",
        "suffix": "complexity",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.6914589066831589,
                0,
                70
            ]
        ]
    },
    {
        "page": 12,
        "index": 33,
        "bbox": [
            34.016000000000105,
            44.03825560000005,
            379.84275250000013,
            54.000855600000044
        ],
        "prefix": "computational ",
        "content": "complexity compared to established methods while maintaining competitive per",
        "suffix": "formance",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 34,
        "bbox": [
            34.016000000000105,
            31.80430280000005,
            379.84737736000005,
            42.045855600000046
        ],
        "prefix": "per",
        "content": "formance in universal segmentation. Our results highlight ECOM2F's ability to ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 13,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04053824,
            604.2699184
        ],
        "prefix": "",
        "content": "14 M. Yao et al. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": true,
        "matches": [
            [
                112,
                0.1951219512195122,
                null,
                null
            ]
        ]
    },
    {
        "page": 13,
        "index": 1,
        "bbox": [
            34.016,
            198.12451840000003,
            379.84112479999993,
            207.09091840000002
        ],
        "prefix": "",
        "content": "Fig. 6: Qualitative visualizations. We illustrate few examples of predicted segmen",
        "suffix": "tation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 13,
        "index": 2,
        "bbox": [
            34.01599999999999,
            186.91445920000004,
            379.84392063999996,
            196.13191840000002
        ],
        "prefix": "segmen",
        "content": "tation maps from M2F [5] (middle column) and ECOM2F (last column). Top two rows ",
        "suffix": "are",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                0.7632005941696515,
                85,
                153
            ]
        ]
    },
    {
        "page": 13,
        "index": 3,
        "bbox": [
            34.01599999999996,
            176.20651840000002,
            379.83864287999995,
            185.17291840000001
        ],
        "prefix": "rows ",
        "content": "are from the COCO dataset, whereas bottom two rows are from the Cityscapes dataset. ",
        "suffix": "(Backbone:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                0.9628164377159673,
                153,
                237
            ]
        ]
    },
    {
        "page": 13,
        "index": 4,
        "bbox": [
            34.01599999999996,
            165.24851840000002,
            207.54401055999995,
            174.21491840000002
        ],
        "prefix": "dataset. ",
        "content": "(Backbone: SwinT) Zoomin for best view. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 13,
        "index": 5,
        "bbox": [
            34.01599999999996,
            95.25425560000004,
            379.84175623999994,
            129.12685560000003
        ],
        "prefix": "",
        "content": "dynamically tradeoff between performance and efficiency as per requirements, showcasing its adaptability across diverse architectural configurations, and can be applied to models for object detection tasks. ",
        "suffix": "showcasing",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": true,
        "matches": [
            [
                110,
                0.2641509433962264,
                null,
                null
            ]
        ]
    },
    {
        "page": 13,
        "index": 6,
        "bbox": [
            34.01599999999996,
            35.47825560000005,
            379.8447450200001,
            81.30685560000005
        ],
        "prefix": "",
        "content": "Limitations. While ECOM2F offers dynamic tradeoffs between performance and efficiency according to specific needs, the adaptation factor β is a hyperparameter that needs separate tuning for each use case. This is because it relies on the model configuration and dataset characteristics. ",
        "suffix": "and",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": true,
        "matches": [
            [
                109,
                0.14603174603174604,
                null,
                null
            ]
        ]
    },
    {
        "page": 14,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.8466329599999,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 15 ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^softmax(())ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                81,
                0.48148148148148145,
                null,
                null
            ]
        ]
    },
    {
        "page": 14,
        "index": 1,
        "bbox": [
            87.322,
            568.3568372,
            326.53340804000004,
            582.7030372
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for ",
        "suffix": "Mask2Formerstyle",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                0.8,
                7,
                42
            ]
        ]
    },
    {
        "page": 14,
        "index": 2,
        "bbox": [
            114.30600000000001,
            550.4238372,
            299.55130750000006,
            564.7700372
        ],
        "prefix": "for ",
        "content": "Mask2Formerstyle models ",
        "suffix": "(Supplementary",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                1.0,
                42,
                66
            ]
        ]
    },
    {
        "page": 14,
        "index": 3,
        "bbox": [
            127.08700000000002,
            532.4908372,
            282.22824141999996,
            546.8370372
        ],
        "prefix": "models ",
        "content": "(Supplementary Material) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 14,
        "index": 4,
        "bbox": [
            34.01600000000002,
            474.8546912,
            198.08438272,
            486.8098912
        ],
        "prefix": "",
        "content": "A Additional Experiments ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                82,
                0.6666666666666666,
                0,
                22
            ]
        ]
    },
    {
        "page": 14,
        "index": 5,
        "bbox": [
            34.01600000000002,
            452.14330279999996,
            379.84092046,
            462.3848556
        ],
        "prefix": "",
        "content": "Impact of backbone size on LiteM2F. We apply ECOM2F on LiteM2F ",
        "suffix": "using",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 14,
        "index": 6,
        "bbox": [
            34.01600000000002,
            440.4672556,
            379.8407599800001,
            450.4298556
        ],
        "prefix": "LiteM2F ",
        "content": "using various backbone sizes, including SWINTiny (T), SWINSmall (S), and ",
        "suffix": "SWINBase",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                28,
                101
            ]
        ]
    },
    {
        "page": 14,
        "index": 7,
        "bbox": [
            34.01600000000002,
            428.5122556,
            379.8377712,
            438.4748556
        ],
        "prefix": "and ",
        "content": "SWINBase (B) architectures [22]. LiteM2F is a specific variant based on Lite",
        "suffix": "DETR",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.7770878485386998,
                28,
                105
            ]
        ]
    },
    {
        "page": 14,
        "index": 8,
        "bbox": [
            34.01600000000002,
            416.5572556,
            379.84382272000005,
            426.5198556
        ],
        "prefix": "Lite",
        "content": "DETR [20]. We used the configuration named ''LiteDETR H3L1(6+1)×1'' given ",
        "suffix": "its",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.9180312152772137,
                105,
                170
            ]
        ]
    },
    {
        "page": 14,
        "index": 9,
        "bbox": [
            34.01600000000002,
            404.60225560000003,
            379.84574127999986,
            414.56485560000004
        ],
        "prefix": "given ",
        "content": "its strong performance in detection relative to the computations required. How",
        "suffix": "ever,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.8374822556973219,
                28,
                112
            ]
        ]
    },
    {
        "page": 14,
        "index": 10,
        "bbox": [
            34.01600000000002,
            392.6462556,
            379.8397637200001,
            402.6088556
        ],
        "prefix": "How",
        "content": "ever, we adjust this configuration to (5+1) when applying our approach to Lite",
        "suffix": "M2F.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                189,
                266
            ]
        ]
    },
    {
        "page": 14,
        "index": 11,
        "bbox": [
            34.01600000000002,
            380.69125560000003,
            379.84374876000004,
            390.65385560000004
        ],
        "prefix": "Lite",
        "content": "M2F. Further, we use their without the keyaware deformable attention [20] ",
        "suffix": "proposed",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.7213598106733747,
                28,
                92
            ]
        ]
    },
    {
        "page": 14,
        "index": 12,
        "bbox": [
            34.01600000000002,
            368.73625560000005,
            379.83777120000025,
            378.69885560000006
        ],
        "prefix": "[20] ",
        "content": "proposed in their paper. This adjustment is necessary because LiteM2F ac",
        "suffix": "tually",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.8374822556973219,
                28,
                107
            ]
        ]
    },
    {
        "page": 14,
        "index": 13,
        "bbox": [
            34.01600000000002,
            356.78125560000007,
            379.8447450200001,
            366.7438556000001
        ],
        "prefix": "ac",
        "content": "tually has 6 encoder layers, and the original configuration might introduce an ",
        "suffix": "additional",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                332,
                404
            ]
        ]
    },
    {
        "page": 14,
        "index": 14,
        "bbox": [
            34.01600000000002,
            344.8262556000001,
            379.8437487600001,
            354.7888556000001
        ],
        "prefix": "an ",
        "content": "additional layer that isn't present in the model. Following this, we identify layers ",
        "suffix": "2",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.8156116917729914,
                28,
                113
            ]
        ]
    },
    {
        "page": 14,
        "index": 15,
        "bbox": [
            34.01600000000002,
            332.8712556000001,
            379.84175624,
            342.8338556000001
        ],
        "prefix": "layers ",
        "content": "2 to 5 as potential exits, followed by the last layer, layer 6 in the transformer ",
        "suffix": "encoder.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                417,
                499
            ]
        ]
    },
    {
        "page": 14,
        "index": 16,
        "bbox": [
            34.01600000000002,
            320.9152556000001,
            379.83876746000027,
            330.8778556000001
        ],
        "prefix": "transformer ",
        "content": "encoder. We retain layer 6 and do not consider it as a feasible exit point as ",
        "suffix": "it",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.8360992815759923,
                28,
                106
            ]
        ]
    },
    {
        "page": 14,
        "index": 17,
        "bbox": [
            34.01600000000002,
            308.9602556000001,
            379.84673754000016,
            318.9228556000001
        ],
        "prefix": "as ",
        "content": "it leverages features from all scales provided by the backbone, making it es",
        "suffix": "sential",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                495,
                579
            ]
        ]
    },
    {
        "page": 14,
        "index": 18,
        "bbox": [
            34.01600000000002,
            296.7263028000001,
            379.84347496000004,
            306.9678556000001
        ],
        "prefix": "es",
        "content": "sential to the model's functionality. As shown in Tab. T1, we observe that ECO",
        "suffix": "M2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.6123414901069651,
                28,
                120
            ]
        ]
    },
    {
        "page": 14,
        "index": 19,
        "bbox": [
            34.01600000000002,
            284.7713028000001,
            379.8453740200001,
            295.01285560000014
        ],
        "prefix": "ECO",
        "content": "M2F effectively reduces computational cost while maintaining performance across ",
        "suffix": "LiteM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.8000006144212353,
                128,
                204
            ]
        ]
    },
    {
        "page": 14,
        "index": 20,
        "bbox": [
            34.01600000000002,
            272.81630280000013,
            379.84458118000003,
            283.05785560000015
        ],
        "prefix": "across ",
        "content": "LiteM2F variants, which underscores the versatility and robustness of ECOM2F ",
        "suffix": "across",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.6852613586967319,
                128,
                198
            ]
        ]
    },
    {
        "page": 14,
        "index": 21,
        "bbox": [
            34.01600000000002,
            261.14025560000016,
            233.05280784000004,
            271.10285560000017
        ],
        "prefix": "ECOM2F ",
        "content": "across different model architectures and sizes. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.7142859101370124,
                136,
                183
            ]
        ]
    },
    {
        "page": 14,
        "index": 22,
        "bbox": [
            34.01600000000002,
            238.32125560000017,
            379.84505888,
            248.28385560000015
        ],
        "prefix": "",
        "content": "Impact of target and loss settings for gating network training. We ",
        "suffix": "investigate",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                85,
                0.8333333333333334,
                0,
                63
            ]
        ]
    },
    {
        "page": 14,
        "index": 23,
        "bbox": [
            34.01600000000002,
            226.36625560000016,
            379.84574128000014,
            236.32885560000014
        ],
        "prefix": "We ",
        "content": "investigate various target and loss settings during the training of the gating ",
        "suffix": "network.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                1.0,
                3,
                82
            ]
        ]
    },
    {
        "page": 14,
        "index": 24,
        "bbox": [
            34.01600000000002,
            214.41125560000015,
            379.8397637200001,
            224.37385560000013
        ],
        "prefix": "gating ",
        "content": "network. Specifically, we compare the approach detailed in the main paper, using ",
        "suffix": "onehot",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                0.9004664756937595,
                3,
                84
            ]
        ]
    },
    {
        "page": 14,
        "index": 25,
        "bbox": [
            34.01600000000002,
            202.45525560000016,
            379.84075998000003,
            212.41785560000014
        ],
        "prefix": "using ",
        "content": "onehot target and crossentropy loss (referred to as ''hardCE'' in Tab. T2), with ",
        "suffix": "three",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                0.707881441274958,
                3,
                97
            ]
        ]
    },
    {
        "page": 14,
        "index": 26,
        "bbox": [
            34.01600000000002,
            190.50025560000014,
            379.83777120000013,
            200.46285560000013
        ],
        "prefix": "with ",
        "content": "three alternative methods that do not involve setting a specific target exit for ",
        "suffix": "each",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                1.0,
                97,
                178
            ]
        ]
    },
    {
        "page": 14,
        "index": 27,
        "bbox": [
            34.01600000000002,
            178.54525560000013,
            84.65091450000003,
            188.5078556000001
        ],
        "prefix": "for ",
        "content": "each image. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                0.5355102199042111,
                3,
                14
            ]
        ]
    },
    {
        "page": 14,
        "index": 28,
        "bbox": [
            48.96000000000002,
            166.59025560000012,
            379.83787119999994,
            176.5528556000001
        ],
        "prefix": "",
        "content": "First, we consider using crossentropy loss between the output of the utility ",
        "suffix": "function",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                0.9269066975667588,
                0,
                77
            ]
        ]
    },
    {
        "page": 14,
        "index": 29,
        "bbox": [
            34.01600000000002,
            154.6352556000001,
            379.83851078000015,
            164.5978556000001
        ],
        "prefix": "utility ",
        "content": "function u(·) and the predicted logit passed through a softmax function (referred ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                0.8148753440098953,
                0,
                81
            ]
        ]
    },
    {
        "page": 14,
        "index": 30,
        "bbox": [
            34.01600000000002,
            142.6802556000001,
            114.81622804000003,
            152.64285560000008
        ],
        "prefix": "(referred ",
        "content": "to as ''uCE''), i.e., ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                0.5555555555555556,
                0,
                16
            ]
        ]
    },
    {
        "page": 14,
        "index": 31,
        "bbox": [
            117.12,
            100.81555,
            296.73761028,
            131.99734999999998
        ],
        "prefix": "",
        "content": "Lgating = NX i KX u(i)(k) ln[softmax(g(i) k )] . ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.675,
                null,
                null
            ],
            [
                12,
                0.48717948717948717,
                null,
                null
            ],
            [
                83,
                0.47619047619047616,
                null,
                null
            ],
            [
                15,
                0.4715447154471545,
                null,
                null
            ],
            [
                57,
                0.46601941747572817,
                null,
                null
            ],
            [
                49,
                0.46153846153846156,
                null,
                null
            ],
            [
                138,
                0.45925925925925926,
                null,
                null
            ],
            [
                72,
                0.432,
                null,
                null
            ],
            [
                76,
                0.4305555555555556,
                null,
                null
            ],
            [
                2,
                0.43010752688172044,
                null,
                null
            ],
            [
                18,
                0.42857142857142855,
                null,
                null
            ],
            [
                67,
                0.425531914893617,
                null,
                null
            ],
            [
                139,
                0.42276422764227645,
                null,
                null
            ],
            [
                59,
                0.42028985507246375,
                null,
                null
            ],
            [
                128,
                0.4166666666666667,
                null,
                null
            ],
            [
                56,
                0.4117647058823529,
                null,
                null
            ],
            [
                61,
                0.40404040404040403,
                null,
                null
            ],
            [
                79,
                0.39344262295081966,
                null,
                null
            ],
            [
                70,
                0.38961038961038963,
                null,
                null
            ],
            [
                62,
                0.3880597014925373,
                null,
                null
            ],
            [
                28,
                0.38461538461538464,
                null,
                null
            ],
            [
                98,
                0.375,
                null,
                null
            ],
            [
                100,
                0.375,
                null,
                null
            ],
            [
                68,
                0.36065573770491804,
                null,
                null
            ],
            [
                29,
                0.345679012345679,
                null,
                null
            ]
        ]
    },
    {
        "page": 14,
        "index": 32,
        "bbox": [
            180.49499999999998,
            100.58755,
            184.73018874,
            107.56134999999999
        ],
        "prefix": "",
        "content": "k ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 14,
        "index": 33,
        "bbox": [
            48.96,
            82.3352556,
            379.84390642,
            92.2978556
        ],
        "prefix": "",
        "content": "Second, we apply a softmax function to the utility function u(k) and use ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                89,
                0.811991388655103,
                0,
                72
            ]
        ]
    },
    {
        "page": 14,
        "index": 34,
        "bbox": [
            34.01599999999996,
            70.3802556,
            313.93722804000004,
            80.34285560000001
        ],
        "prefix": "",
        "content": "crossentropy as the loss function (referred to as ''softCE''), i.e., ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                89,
                0.8571428571428571,
                0,
                63
            ]
        ]
    },
    {
        "page": 14,
        "index": 35,
        "bbox": [
            96.065,
            28.287550000000003,
            317.79361027999994,
            59.69735
        ],
        "prefix": "",
        "content": "Lgating = NX i KX k softmax(u(i)(k)) ln[softmax(g(i) k )] . ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.5934065934065934,
                null,
                null
            ],
            [
                15,
                0.5223880597014925,
                null,
                null
            ],
            [
                138,
                0.5068493150684932,
                null,
                null
            ],
            [
                12,
                0.4943820224719101,
                null,
                null
            ],
            [
                57,
                0.49122807017543857,
                null,
                null
            ],
            [
                76,
                0.49032258064516127,
                null,
                null
            ],
            [
                59,
                0.48322147651006714,
                null,
                null
            ],
            [
                49,
                0.47058823529411764,
                null,
                null
            ],
            [
                139,
                0.4626865671641791,
                null,
                null
            ],
            [
                67,
                0.45714285714285713,
                null,
                null
            ],
            [
                72,
                0.45588235294117646,
                null,
                null
            ],
            [
                83,
                0.4421052631578947,
                null,
                null
            ],
            [
                18,
                0.44036697247706424,
                null,
                null
            ],
            [
                68,
                0.42105263157894735,
                null,
                null
            ],
            [
                61,
                0.41818181818181815,
                null,
                null
            ],
            [
                128,
                0.411214953271028,
                null,
                null
            ],
            [
                70,
                0.4090909090909091,
                null,
                null
            ],
            [
                2,
                0.40384615384615385,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04053824,
            604.2699184
        ],
        "prefix": "",
        "content": "16 M. Yao et al. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                90,
                0.24561403508771928,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 1,
        "bbox": [
            48.96,
            569.2072555999999,
            379.83886745999996,
            579.1698556
        ],
        "prefix": "",
        "content": "Third, we apply a softmax function to the utility function, but use mean ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                0,
                73
            ]
        ]
    },
    {
        "page": 15,
        "index": 2,
        "bbox": [
            34.016,
            557.2522555999999,
            320.4392280400001,
            567.2148556
        ],
        "prefix": "",
        "content": "squared error (MSE) loss instead (referred to as ''softMSE''), i.e., ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                0.8666666666666667,
                0,
                63
            ]
        ]
    },
    {
        "page": 15,
        "index": 3,
        "bbox": [
            89.956,
            514.0225499999998,
            323.9026102799999,
            545.20435
        ],
        "prefix": "",
        "content": "Lgating = NX i KX hsoftmax(u(i)(k))  softmax(g(i) k )i2 . ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": false,
        "matches": [
            [
                88,
                0.5168539325842697,
                null,
                null
            ],
            [
                15,
                0.5151515151515151,
                null,
                null
            ],
            [
                138,
                0.5,
                null,
                null
            ],
            [
                76,
                0.49673202614379086,
                null,
                null
            ],
            [
                18,
                0.48598130841121495,
                null,
                null
            ],
            [
                12,
                0.4827586206896552,
                null,
                null
            ],
            [
                57,
                0.48214285714285715,
                null,
                null
            ],
            [
                49,
                0.48,
                null,
                null
            ],
            [
                59,
                0.47619047619047616,
                null,
                null
            ],
            [
                139,
                0.45454545454545453,
                null,
                null
            ],
            [
                83,
                0.45161290322580644,
                null,
                null
            ],
            [
                72,
                0.44776119402985076,
                null,
                null
            ],
            [
                68,
                0.42748091603053434,
                null,
                null
            ],
            [
                67,
                0.42718446601941745,
                null,
                null
            ],
            [
                128,
                0.41904761904761906,
                null,
                null
            ],
            [
                70,
                0.4186046511627907,
                null,
                null
            ],
            [
                61,
                0.4074074074074074,
                null,
                null
            ],
            [
                98,
                0.38095238095238093,
                null,
                null
            ],
            [
                100,
                0.38095238095238093,
                null,
                null
            ],
            [
                99,
                0.3795620437956204,
                null,
                null
            ],
            [
                2,
                0.37254901960784315,
                null,
                null
            ],
            [
                63,
                0.3684210526315789,
                null,
                null
            ],
            [
                28,
                0.367816091954023,
                null,
                null
            ],
            [
                71,
                0.35348837209302325,
                null,
                null
            ],
            [
                84,
                0.35294117647058826,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 4,
        "bbox": [
            153.32999999999998,
            513.7945499999997,
            157.56518874,
            520.7683499999998
        ],
        "prefix": "",
        "content": "k ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 15,
        "index": 5,
        "bbox": [
            48.96,
            494.17925560000003,
            379.84085998,
            504.14185560000004
        ],
        "prefix": "",
        "content": "The analysis in Tab. T2 is conducted using the SWINT [22] backbone on the ",
        "suffix": "COCO",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                0.6494577295299497,
                0,
                82
            ]
        ]
    },
    {
        "page": 15,
        "index": 6,
        "bbox": [
            34.016,
            482.22425560000005,
            379.83677494000005,
            492.18685560000006
        ],
        "prefix": "the ",
        "content": "COCO dataset. We observe that ''hardCE'' yields the most favorable results. As ",
        "suffix": "a",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                1.0,
                82,
                161
            ]
        ]
    },
    {
        "page": 15,
        "index": 7,
        "bbox": [
            34.016,
            470.26925560000006,
            302.4741971600001,
            480.2318556000001
        ],
        "prefix": "As ",
        "content": "a result, we use this approach consistently in the main paper. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                0.8334093234971295,
                82,
                144
            ]
        ]
    },
    {
        "page": 15,
        "index": 8,
        "bbox": [
            34.016,
            438.17751840000005,
            205.19892224,
            447.1439184
        ],
        "prefix": "",
        "content": "Table T1: Impact of backbone size on ",
        "suffix": "LiteM2F.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.75,
                0,
                27
            ]
        ]
    },
    {
        "page": 15,
        "index": 9,
        "bbox": [
            34.016,
            426.9674592,
            205.19389407999998,
            436.1849184
        ],
        "prefix": "on ",
        "content": "LiteM2F. Our LiteECOM2F maintains ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.39464657352857374,
                0,
                35
            ]
        ]
    },
    {
        "page": 15,
        "index": 10,
        "bbox": [
            34.01599999999999,
            416.25951840000005,
            205.20250879999998,
            425.2259184
        ],
        "prefix": "maintains ",
        "content": "the performance of LiteM2F while reduc",
        "suffix": "ing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                62,
                104
            ]
        ]
    },
    {
        "page": 15,
        "index": 11,
        "bbox": [
            208.66,
            416.4035184,
            379.83843904,
            425.36991839999996
        ],
        "prefix": "",
        "content": "Table T2: Impact of target and loss in ",
        "suffix": "gating",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                0.6914589066831589,
                0,
                29
            ]
        ]
    },
    {
        "page": 15,
        "index": 12,
        "bbox": [
            34.01599999999999,
            405.30051840000004,
            205.20250879999998,
            414.2669184
        ],
        "prefix": "reduc",
        "content": "ing GFLOPs for different datasets and for ",
        "suffix": "different",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.75,
                0,
                38
            ]
        ]
    },
    {
        "page": 15,
        "index": 13,
        "bbox": [
            208.66,
            405.4445184,
            379.8434832,
            414.41091839999996
        ],
        "prefix": "in ",
        "content": "gating network training. We use ''hard",
        "suffix": "CE''",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                1.0,
                29,
                72
            ]
        ]
    },
    {
        "page": 15,
        "index": 14,
        "bbox": [
            34.01599999999999,
            394.34151840000004,
            114.20161856,
            403.3079184
        ],
        "prefix": "for ",
        "content": "different backbones. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                100,
                120
            ]
        ]
    },
    {
        "page": 15,
        "index": 15,
        "bbox": [
            208.65999999999997,
            394.4855184,
            379.8384390399999,
            403.45191839999995
        ],
        "prefix": "''hard",
        "content": "CE'' loss for training our gating network ",
        "suffix": "in",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                0.6,
                0,
                37
            ]
        ]
    },
    {
        "page": 15,
        "index": 16,
        "bbox": [
            208.65999999999997,
            383.5265184,
            379.8465088,
            392.49291839999995
        ],
        "prefix": "network ",
        "content": "in the main paper. (Backbone: SWINT; ",
        "suffix": "Dataset:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                1.0,
                66,
                103
            ]
        ]
    },
    {
        "page": 15,
        "index": 17,
        "bbox": [
            36.94047078,
            365.875985719248,
            204.2868478886272,
            375.608444265872
        ],
        "prefix": "",
        "content": "Bakbone Model PQ mIOUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                88,
                0.3013698630136986,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 18,
        "bbox": [
            105.93794338999999,
            373.325444953872,
            200.4023921377152,
            379.196912665872
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓) ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^()ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                105,
                0.2288135593220339,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 19,
        "bbox": [
            208.65999999999997,
            372.5675184,
            276.65759103999994,
            381.53391839999995
        ],
        "prefix": "SWINT; ",
        "content": "Dataset: COCO) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                0.6666666666666666,
                0,
                14
            ]
        ]
    },
    {
        "page": 15,
        "index": 20,
        "bbox": [
            36.94047078,
            340.920488807936,
            199.86684094142075,
            354.13263958587197
        ],
        "prefix": "",
        "content": "SWINT LiteM2F [20] 62.29 79.43 36.57 428.71 172.00 LiteECOM2F 62.64 79.99 36.52 412.88 156.17 ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": false,
        "matches": [
            [
                72,
                0.3411764705882353,
                null,
                null
            ],
            [
                128,
                0.3404255319148936,
                null,
                null
            ],
            [
                59,
                0.28415300546448086,
                null,
                null
            ],
            [
                139,
                0.27380952380952384,
                null,
                null
            ],
            [
                99,
                0.2658959537572254,
                null,
                null
            ],
            [
                76,
                0.26455026455026454,
                null,
                null
            ],
            [
                61,
                0.2638888888888889,
                null,
                null
            ],
            [
                83,
                0.26356589147286824,
                null,
                null
            ],
            [
                63,
                0.25663716814159293,
                null,
                null
            ],
            [
                18,
                0.2517482517482518,
                null,
                null
            ],
            [
                98,
                0.24113475177304963,
                null,
                null
            ],
            [
                100,
                0.24113475177304963,
                null,
                null
            ],
            [
                133,
                0.23423423423423423,
                null,
                null
            ],
            [
                84,
                0.2318840579710145,
                null,
                null
            ],
            [
                2,
                0.21739130434782608,
                null,
                null
            ],
            [
                57,
                0.21621621621621623,
                null,
                null
            ],
            [
                15,
                0.21428571428571427,
                null,
                null
            ],
            [
                138,
                0.2111111111111111,
                null,
                null
            ],
            [
                49,
                0.20588235294117646,
                null,
                null
            ],
            [
                74,
                0.19834710743801653,
                null,
                null
            ],
            [
                103,
                0.19672131147540983,
                null,
                null
            ],
            [
                71,
                0.1752988047808765,
                null,
                null
            ],
            [
                36,
                0.1746031746031746,
                null,
                null
            ],
            [
                65,
                0.16730038022813687,
                null,
                null
            ],
            [
                12,
                0.16260162601626016,
                null,
                null
            ],
            [
                101,
                0.16260162601626016,
                null,
                null
            ],
            [
                44,
                0.15942028985507245,
                null,
                null
            ],
            [
                29,
                0.15873015873015872,
                null,
                null
            ],
            [
                67,
                0.15827338129496402,
                null,
                null
            ],
            [
                13,
                0.14906832298136646,
                null,
                null
            ],
            [
                70,
                0.14754098360655737,
                null,
                null
            ],
            [
                68,
                0.1437125748502994,
                null,
                null
            ],
            [
                25,
                0.14285714285714285,
                null,
                null
            ],
            [
                62,
                0.14285714285714285,
                null,
                null
            ],
            [
                56,
                0.1415929203539823,
                null,
                null
            ],
            [
                60,
                0.1391304347826087,
                null,
                null
            ],
            [
                144,
                0.12962962962962962,
                null,
                null
            ],
            [
                80,
                0.1273209549071618,
                null,
                null
            ],
            [
                17,
                0.12280701754385964,
                null,
                null
            ],
            [
                21,
                0.11864406779661017,
                null,
                null
            ],
            [
                79,
                0.11320754716981132,
                null,
                null
            ],
            [
                122,
                0.11320754716981132,
                null,
                null
            ],
            [
                78,
                0.10154525386313466,
                null,
                null
            ],
            [
                132,
                0.09523809523809523,
                null,
                null
            ],
            [
                58,
                0.09090909090909091,
                null,
                null
            ],
            [
                28,
                0.08130081300813008,
                null,
                null
            ],
            [
                31,
                0.0784313725490196,
                null,
                null
            ],
            [
                54,
                0.07766990291262135,
                null,
                null
            ],
            [
                127,
                0.0761904761904762,
                null,
                null
            ],
            [
                86,
                0.061855670103092786,
                null,
                null
            ],
            [
                145,
                0.06,
                null,
                null
            ],
            [
                142,
                0.0594059405940594,
                null,
                null
            ],
            [
                87,
                0.04081632653061224,
                null,
                null
            ],
            [
                89,
                0.04081632653061224,
                null,
                null
            ],
            [
                91,
                0.04081632653061224,
                null,
                null
            ],
            [
                9,
                0.02,
                null,
                null
            ],
            [
                30,
                0.0196078431372549,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 21,
        "bbox": [
            36.94047078,
            330.059517193872,
            199.86684094142075,
            339.518798475872
        ],
        "prefix": "",
        "content": "SWINS LiteM2F [20] 63.54 79.74 39.12 615.15 171.99 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                98,
                0.6461948261334314,
                2,
                53
            ]
        ]
    },
    {
        "page": 15,
        "index": 22,
        "bbox": [
            65.31687400000001,
            326.306647697936,
            199.8641417845472,
            332.34251650587197
        ],
        "prefix": "",
        "content": "LiteECOM2F 63.32 80.21 37.91 588.82 145.66 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                98,
                0.6657097003223595,
                18,
                59
            ]
        ]
    },
    {
        "page": 15,
        "index": 23,
        "bbox": [
            36.94047078,
            315.445676083872,
            199.86684094142075,
            324.905612195872
        ],
        "prefix": "",
        "content": "SWINB LiteM2F [20] 64.48 82.34 39.21 942.05 174.01 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                99,
                0.6461948261334314,
                2,
                53
            ]
        ]
    },
    {
        "page": 15,
        "index": 24,
        "bbox": [
            65.31687400000001,
            311.693461417936,
            199.8641417845472,
            317.729330225872
        ],
        "prefix": "",
        "content": "LiteECOM2F 64.66 81.40 39.52 921.15 153.11 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                99,
                0.6657097003223595,
                18,
                59
            ]
        ]
    },
    {
        "page": 15,
        "index": 25,
        "bbox": [
            93.03844722,
            355.698076183872,
            148.18923270524158,
            361.56954389587196
        ],
        "prefix": "",
        "content": "Dataset: Cityscapes ",
        "suffix": "",
        "equation hit": "total = 1/N∑^N∑^, where ∀<', <',",
        "assigned": true,
        "matches": [
            [
                92,
                0,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 26,
        "bbox": [
            98.01711971,
            304.420958203872,
            143.20519878151998,
            310.29242591587195
        ],
        "prefix": "",
        "content": "Dataset: COCO ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                99,
                0.5,
                44,
                53
            ]
        ]
    },
    {
        "page": 15,
        "index": 27,
        "bbox": [
            36.94047078,
            296.983399063872,
            198.35904803297913,
            302.854866775872
        ],
        "prefix": "",
        "content": "SWINT LiteM2F [20] 52.70 63.08 41.10 193.79 79.78 ",
        "suffix": "LiteECOM2F",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                100,
                0.6000380528381862,
                2,
                52
            ]
        ]
    },
    {
        "page": 15,
        "index": 28,
        "bbox": [
            65.31687400000001,
            289.642715997936,
            198.35634887610559,
            295.678584805872
        ],
        "prefix": "79.78 ",
        "content": "LiteECOM2F 52.84 63.23 42.18 178.43 64.42 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                100,
                0.7171389771958427,
                68,
                108
            ]
        ]
    },
    {
        "page": 15,
        "index": 29,
        "bbox": [
            36.94047078,
            278.78174438387197,
            198.35904803297913,
            288.241680495872
        ],
        "prefix": "",
        "content": "SWINS LiteM2F [20] 54.30 64.81 43.94 269.26 74.45 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                101,
                0.6461948261334314,
                2,
                52
            ]
        ]
    },
    {
        "page": 15,
        "index": 30,
        "bbox": [
            65.31687400000001,
            275.029529717936,
            198.35634887610559,
            281.06539852587196
        ],
        "prefix": "",
        "content": "LiteECOM2F 54.47 64.14 43.55 258.00 63.96 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                101,
                0.6657097003223595,
                18,
                58
            ]
        ]
    },
    {
        "page": 15,
        "index": 31,
        "bbox": [
            212.48102028,
            339.209827368448,
            378.6585952715072,
            356.613670224672
        ],
        "prefix": "",
        "content": "Performance (↑) GFLOPs (↓)Method PQ mIOUp APp Total Tx. Enc. ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^softmax(())ln[softmax(g)] .",
        "assigned": true,
        "matches": [
            [
                106,
                0.37037037037037035,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 32,
        "bbox": [
            212.48102028,
            325.911695272672,
            370.9119823015872,
            333.58316778467196
        ],
        "prefix": "",
        "content": "hardCE 52.06 62.76 41.51 202.39 88.47 ",
        "suffix": "uCE",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 15,
        "index": 33,
        "bbox": [
            212.48102027999997,
            316.53539405267196,
            370.90766771431674,
            324.20686656467194
        ],
        "prefix": "88.47 ",
        "content": "uCE 52.16 62.58 41.57 207.49 94.06 ",
        "suffix": "softCE",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                0.5829915372281013,
                9,
                55
            ]
        ]
    },
    {
        "page": 15,
        "index": 34,
        "bbox": [
            212.48102027999997,
            307.159092832672,
            370.91457203957754,
            314.830565344672
        ],
        "prefix": "94.06 ",
        "content": "softCE 51.64 62.75 40.88 202.08 87.85 ",
        "suffix": "softMSE",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                0.8424287200015697,
                55,
                104
            ]
        ]
    },
    {
        "page": 15,
        "index": 35,
        "bbox": [
            212.48102027999997,
            297.782791612672,
            370.9099691560703,
            305.45426412467197
        ],
        "prefix": "87.85 ",
        "content": "softMSE 51.54 62.73 40.91 198.46 84.53 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                0.6278370400918014,
                9,
                59
            ]
        ]
    },
    {
        "page": 15,
        "index": 36,
        "bbox": [
            34.016,
            216.59869120000002,
            236.23342592,
            228.5538912
        ],
        "prefix": "",
        "content": "B Additional Qualitative Results ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                108,
                0.75,
                0,
                30
            ]
        ]
    },
    {
        "page": 15,
        "index": 37,
        "bbox": [
            34.016,
            193.07425560000001,
            364.58104556000006,
            203.0368556
        ],
        "prefix": "",
        "content": "We provide additional examples of predicted segmentation maps in Fig. F1. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                109,
                0.8181818181818182,
                0,
                65
            ]
        ]
    },
    {
        "page": 16,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.8466329599999,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 17 ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": true,
        "matches": [
            [
                117,
                0.1956521739130435,
                null,
                null
            ]
        ]
    },
    {
        "page": 16,
        "index": 1,
        "bbox": [
            34.016,
            142.16351839999993,
            379.8383043199999,
            151.12991839999992
        ],
        "prefix": "",
        "content": "Fig. F1: Qualitative visualizations. We provide additional examples of predicted ",
        "suffix": "segmentation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                0.8181818181818182,
                0,
                72
            ]
        ]
    },
    {
        "page": 16,
        "index": 2,
        "bbox": [
            34.01599999999999,
            130.95345919999994,
            379.84379039999993,
            140.17091839999992
        ],
        "prefix": "predicted ",
        "content": "segmentation maps from M2F [5] (middle column) and ECOM2F (last column). Top two ",
        "suffix": "rows",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 16,
        "index": 3,
        "bbox": [
            34.01599999999996,
            120.24551839999992,
            379.84192032,
            129.21191839999992
        ],
        "prefix": "two ",
        "content": "rows are from the COCO dataset, whereas bottom two rows are from the Cityscapes ",
        "suffix": "dataset.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 16,
        "index": 4,
        "bbox": [
            34.01599999999996,
            109.28651839999992,
            349.5516857599997,
            118.25291839999993
        ],
        "prefix": "Cityscapes ",
        "content": "dataset. Please zoom in for a clearer view of the details. (Backbone: SWINT) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                111,
                0.8404353773141755,
                13,
                80
            ]
        ]
    },
    {
        "page": 16,
        "index": 5,
        "bbox": [
            34.01599999999996,
            64.04069119999993,
            96.93741311999997,
            75.99589119999993
        ],
        "prefix": "",
        "content": "References ",
        "suffix": "",
        "equation hit": "gating=∑i^N∑^[softmax(())softmax(g)]^2 .",
        "assigned": true,
        "matches": [
            [
                111,
                0.4166666666666667,
                null,
                null
            ]
        ]
    },
    {
        "page": 16,
        "index": 6,
        "bbox": [
            38.621999999999964,
            43.235518399999926,
            379.84104191999984,
            52.201918399999926
        ],
        "prefix": "",
        "content": "1. Ammar, A., Khalil, M.I., Salama, C.: Rtyoso: Revisiting yoso for realtime ",
        "suffix": "panoptic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                112,
                0.9285714285714286,
                0,
                74
            ]
        ]
    },
    {
        "page": 16,
        "index": 7,
        "bbox": [
            50.76899999999996,
            32.27651839999992,
            379.84036319999973,
            41.24291839999992
        ],
        "prefix": "realtime ",
        "content": "panoptic segmentation. In: 2023 5th Novel Intelligent and Leading Emerging ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                112,
                0.9090909090909091,
                0,
                75
            ]
        ]
    },
    {
        "page": 17,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04053824,
            604.2699184
        ],
        "prefix": "",
        "content": "18 M. Yao et al. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 17,
        "index": 1,
        "bbox": [
            50.769999999999996,
            569.1494592,
            379.84153824000003,
            578.3669184
        ],
        "prefix": "",
        "content": "Sciences Conference (NILES). pp. 306–311 (2023). https://doi.org/10.1109/ ",
        "suffix": "NILES59815.2023.10296714",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                112,
                0.5641770353717571,
                0,
                62
            ]
        ]
    },
    {
        "page": 17,
        "index": 2,
        "bbox": [
            50.77000000000001,
            558.1904592000001,
            172.40993631999999,
            567.4079184000001
        ],
        "prefix": "https://doi.org/10.1109/ ",
        "content": "NILES59815.2023.10296714 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                112,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 17,
        "index": 3,
        "bbox": [
            38.621999999999986,
            547.4735184000001,
            379.8428351999997,
            556.4399184000001
        ],
        "prefix": "",
        "content": "2. Carion, N., Massa, F., Synnaeve, G., Usunier, N., Kirillov, A., Zagoruyko, S.: End",
        "suffix": "toend",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                113,
                0.9285714285714286,
                0,
                88
            ]
        ]
    },
    {
        "page": 17,
        "index": 4,
        "bbox": [
            50.76999999999998,
            536.5145184000002,
            379.84046655999987,
            545.4809184000002
        ],
        "prefix": "End",
        "content": "toend object detection with transformers. In: European conference on computer ",
        "suffix": "vision.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                113,
                0.9090909090909091,
                0,
                72
            ]
        ]
    },
    {
        "page": 17,
        "index": 5,
        "bbox": [
            50.76999999999998,
            525.5555184000002,
            229.7420339199999,
            534.5219184000002
        ],
        "prefix": "computer ",
        "content": "vision. pp. 213–229. Springer (2020) 2, 3, 13 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                113,
                0.3970799491974039,
                0,
                35
            ]
        ]
    },
    {
        "page": 17,
        "index": 6,
        "bbox": [
            38.621999999999986,
            514.5875184000002,
            379.8419385599996,
            523.5539184000003
        ],
        "prefix": "",
        "content": "3. Caron, M., Touvron, H., Misra, I., Jégou, H., Mairal, J., Bojanowski, P., Joulin, ",
        "suffix": "A.:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                114,
                0.7578586294114296,
                0,
                84
            ]
        ]
    },
    {
        "page": 17,
        "index": 7,
        "bbox": [
            50.76999999999998,
            503.62851840000025,
            379.8413631999999,
            512.5949184000002
        ],
        "prefix": "Joulin, ",
        "content": "A.: Emerging properties in selfsupervised vision transformers. In: Proceedings of ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                114,
                1.0,
                84,
                166
            ]
        ]
    },
    {
        "page": 17,
        "index": 8,
        "bbox": [
            50.76999999999998,
            492.66951840000024,
            341.61849663999993,
            501.6359184000002
        ],
        "prefix": "of ",
        "content": "the International Conference on Computer Vision (ICCV) (2021) 12, 13 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                114,
                0.7692307692307693,
                0,
                61
            ]
        ]
    },
    {
        "page": 17,
        "index": 9,
        "bbox": [
            38.621999999999986,
            481.7015184000002,
            379.84552511999976,
            490.6679184000002
        ],
        "prefix": "",
        "content": "4. Cheng, B., Collins, M.D., Zhu, Y., Liu, T., Huang, T.S., Adam, H., Chen, L.C.: ",
        "suffix": "Panopticdeeplab:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                115,
                0.9473684210526315,
                0,
                79
            ]
        ]
    },
    {
        "page": 17,
        "index": 10,
        "bbox": [
            50.76999999999998,
            470.7425184000002,
            379.84136319999965,
            479.7089184000002
        ],
        "prefix": "L.C.: ",
        "content": "Panopticdeeplab: A simple, strong, and fast baseline for bottomup panoptic seg",
        "suffix": "mentation.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                115,
                0.8461538461538461,
                0,
                89
            ]
        ]
    },
    {
        "page": 17,
        "index": 11,
        "bbox": [
            50.76999999999998,
            459.7835184000002,
            379.8413631999997,
            468.7499184000002
        ],
        "prefix": "seg",
        "content": "mentation. In: Proceedings of the IEEE/CVF conference on computer vision and ",
        "suffix": "pattern",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                115,
                1.0,
                89,
                155
            ]
        ]
    },
    {
        "page": 17,
        "index": 12,
        "bbox": [
            50.76999999999998,
            448.8245184000002,
            237.63067263999986,
            457.7909184000002
        ],
        "prefix": "and ",
        "content": "pattern recognition. pp. 12475–12485 (2020) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                115,
                0.4853199379079381,
                0,
                42
            ]
        ]
    },
    {
        "page": 17,
        "index": 13,
        "bbox": [
            38.621999999999986,
            437.8565184000002,
            379.84283519999974,
            446.82291840000016
        ],
        "prefix": "",
        "content": "5. Cheng, B., Misra, I., Schwing, A.G., Kirillov, A., Girdhar, R.: Maskedattention ",
        "suffix": "mask",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                116,
                0.9285714285714286,
                0,
                80
            ]
        ]
    },
    {
        "page": 17,
        "index": 14,
        "bbox": [
            50.76999999999998,
            426.8975184000002,
            379.8386732799998,
            435.86391840000016
        ],
        "prefix": "Maskedattention ",
        "content": "mask transformer for universal image segmentation. In: CVPR (2022) 1, 2, 3, 4, ",
        "suffix": "5,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                116,
                0.625,
                0,
                66
            ]
        ]
    },
    {
        "page": 17,
        "index": 15,
        "bbox": [
            50.76999999999998,
            415.9385184000002,
            154.67264319999998,
            424.90491840000016
        ],
        "prefix": "4, ",
        "content": "5, 9, 10, 11, 12, 13, 14, 17 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                116,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 17,
        "index": 16,
        "bbox": [
            38.621999999999986,
            404.9705184000002,
            379.84373183999963,
            413.93691840000014
        ],
        "prefix": "",
        "content": "6. Cheng, B., Schwing, A., Kirillov, A.: Perpixel classification is not all you need for ",
        "suffix": "semantic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                117,
                0.9375,
                0,
                86
            ]
        ]
    },
    {
        "page": 17,
        "index": 17,
        "bbox": [
            50.76999999999998,
            394.01151840000017,
            379.84201056,
            402.97791840000014
        ],
        "prefix": "for ",
        "content": "semantic segmentation. Advances in Neural Information Processing Systems 34, ",
        "suffix": "17864–17875",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                117,
                0.6666666666666666,
                0,
                73
            ]
        ]
    },
    {
        "page": 17,
        "index": 18,
        "bbox": [
            50.77000000000004,
            383.05251840000017,
            178.72232128000007,
            392.01891840000013
        ],
        "prefix": "34, ",
        "content": "17864–17875 (2021) 1, 3, 10, 11 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                117,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 17,
        "index": 19,
        "bbox": [
            38.62200000000004,
            372.08451840000015,
            379.84193855999996,
            381.0509184000001
        ],
        "prefix": "",
        "content": "7. Cordts, M., Omran, M., Ramos, S., Rehfeld, T., Enzweiler, M., Benenson, R., ",
        "suffix": "Franke,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                118,
                0.9285714285714286,
                0,
                76
            ]
        ]
    },
    {
        "page": 17,
        "index": 20,
        "bbox": [
            50.77000000000004,
            361.12551840000015,
            379.84494975999985,
            370.0919184000001
        ],
        "prefix": "R., ",
        "content": "Franke, U., Roth, S., Schiele, B.: The cityscapes dataset for semantic urban scene ",
        "suffix": "understanding.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                118,
                0.9333333333333333,
                0,
                83
            ]
        ]
    },
    {
        "page": 17,
        "index": 21,
        "bbox": [
            50.77000000000004,
            350.1675184000001,
            379.84494975999985,
            359.1339184000001
        ],
        "prefix": "scene ",
        "content": "understanding. In: Proceedings of the IEEE conference on computer vision and ",
        "suffix": "pattern",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                118,
                0.9230769230769231,
                0,
                77
            ]
        ]
    },
    {
        "page": 17,
        "index": 22,
        "bbox": [
            50.77000000000004,
            339.2085184000001,
            238.65822207999992,
            348.1749184000001
        ],
        "prefix": "and ",
        "content": "pattern recognition. pp. 3213–3223 (2016) 2, 9 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                118,
                0.4367879441171443,
                0,
                40
            ]
        ]
    },
    {
        "page": 17,
        "index": 23,
        "bbox": [
            38.62200000000004,
            328.2405184000001,
            379.8446284799997,
            337.20691840000006
        ],
        "prefix": "",
        "content": "8. Deng, J., Dong, W., Socher, R., Li, L.J., Li, K., FeiFei, L.: Imagenet: A large",
        "suffix": "scale",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                119,
                0.9411764705882353,
                0,
                85
            ]
        ]
    },
    {
        "page": 17,
        "index": 24,
        "bbox": [
            50.77000000000004,
            317.2815184000001,
            379.8386732799998,
            326.24791840000006
        ],
        "prefix": "large",
        "content": "scale hierarchical image database. In: 2009 IEEE conference on computer vision ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                119,
                0.9166666666666666,
                0,
                73
            ]
        ]
    },
    {
        "page": 17,
        "index": 25,
        "bbox": [
            50.77000000000004,
            306.3225184000001,
            277.82345727999984,
            315.28891840000006
        ],
        "prefix": "vision ",
        "content": "and pattern recognition. pp. 248–255. Ieee (2009) 10, 12 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                119,
                0.5306566200976203,
                0,
                48
            ]
        ]
    },
    {
        "page": 17,
        "index": 26,
        "bbox": [
            38.62200000000004,
            295.3545184000001,
            379.8419385599995,
            304.32091840000004
        ],
        "prefix": "",
        "content": "9. Everingham, M., Eslami, S.A., Van Gool, L., Williams, C.K., Winn, J., Zisserman, ",
        "suffix": "A.:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                120,
                0.7879081662320395,
                0,
                81
            ]
        ]
    },
    {
        "page": 17,
        "index": 27,
        "bbox": [
            50.77000000000004,
            284.39551840000007,
            379.84584639999974,
            293.36191840000004
        ],
        "prefix": "Zisserman, ",
        "content": "A.: The pascal visual object classes challenge: A retrospective. International journal ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                120,
                1.0,
                81,
                168
            ]
        ]
    },
    {
        "page": 17,
        "index": 28,
        "bbox": [
            50.77000000000004,
            273.43651840000007,
            215.17995296000004,
            282.40291840000003
        ],
        "prefix": "journal ",
        "content": "of computer vision 111, 98–136 (2015) 9 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                120,
                0.41353352832366125,
                0,
                45
            ]
        ]
    },
    {
        "page": 17,
        "index": 29,
        "bbox": [
            34.01600000000005,
            262.46851840000005,
            379.8419782399997,
            271.4349184
        ],
        "prefix": "",
        "content": "10. Fan, M., Lai, S., Huang, J., Wei, X., Chai, Z., Luo, J., Wei, X.: Rethinking bisenet ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                121,
                0.9444444444444444,
                0,
                85
            ]
        ]
    },
    {
        "page": 17,
        "index": 30,
        "bbox": [
            50.77000000000005,
            251.50951840000002,
            379.84136319999993,
            260.4759184
        ],
        "prefix": "bisenet ",
        "content": "for realtime semantic segmentation. In: Proceedings of the IEEE/CVF conference ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                121,
                0.9230769230769231,
                0,
                79
            ]
        ]
    },
    {
        "page": 17,
        "index": 31,
        "bbox": [
            50.77000000000005,
            240.55051840000002,
            326.5092159999998,
            249.5169184
        ],
        "prefix": "conference ",
        "content": "on computer vision and pattern recognition. pp. 9716–9725 (2021) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                121,
                0.6436830339362648,
                0,
                63
            ]
        ]
    },
    {
        "page": 17,
        "index": 32,
        "bbox": [
            34.01600000000005,
            229.58251840000003,
            379.8446681599999,
            238.54891840000002
        ],
        "prefix": "",
        "content": "11. Gu, X., Cui, Y., Huang, J., Rashwan, A., Yang, X., Zhou, X., Ghiasi, G., Kuo, ",
        "suffix": "W.,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                122,
                0.9411764705882353,
                0,
                78
            ]
        ]
    },
    {
        "page": 17,
        "index": 33,
        "bbox": [
            50.77000000000005,
            218.62351840000002,
            379.8449497599998,
            227.58991840000002
        ],
        "prefix": "Kuo, ",
        "content": "W., Chen, H., Chen, L.C., et al.: Dataseg: Taming a universal multidataset multi",
        "suffix": "task",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                122,
                0.8404353773141755,
                0,
                85
            ]
        ]
    },
    {
        "page": 17,
        "index": 34,
        "bbox": [
            50.77000000000005,
            207.66451840000002,
            379.84225119999996,
            216.6309184
        ],
        "prefix": "multi",
        "content": "task segmentation model. Advances in Neural Information Processing Systems 36 ",
        "suffix": "(2024)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                122,
                0.7685941800123691,
                0,
                70
            ]
        ]
    },
    {
        "page": 17,
        "index": 35,
        "bbox": [
            50.77000000000004,
            196.70551840000002,
            95.29176256000004,
            205.6719184
        ],
        "prefix": "36 ",
        "content": "(2024) 1, 3 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                122,
                0.27357588823428847,
                12,
                18
            ]
        ]
    },
    {
        "page": 17,
        "index": 36,
        "bbox": [
            34.016000000000034,
            185.73751840000003,
            379.84197823999995,
            194.70391840000002
        ],
        "prefix": "",
        "content": "12. He, K., Gkioxari, G., Dollár, P., Girshick, R.: Mask rcnn. In: Proceedings of the ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                123,
                0.8148753440098953,
                0,
                86
            ]
        ]
    },
    {
        "page": 17,
        "index": 37,
        "bbox": [
            50.77000000000004,
            174.77851840000002,
            352.7502822399999,
            183.74491840000002
        ],
        "prefix": "",
        "content": "IEEE international conference on computer vision. pp. 2961–2969 (2017) 1 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                123,
                0.6973232867642869,
                0,
                69
            ]
        ]
    },
    {
        "page": 17,
        "index": 38,
        "bbox": [
            34.016000000000034,
            163.81051840000003,
            379.8446681599998,
            172.77691840000003
        ],
        "prefix": "",
        "content": "13. He, K., Zhang, X., Ren, S., Sun, J.: Deep residual learning for image recognition. In: ",
        "suffix": "Proceedings",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                124,
                0.9411764705882353,
                0,
                87
            ]
        ]
    },
    {
        "page": 17,
        "index": 39,
        "bbox": [
            50.77000000000004,
            152.85151840000003,
            379.8440531199999,
            161.81791840000002
        ],
        "prefix": "In: ",
        "content": "Proceedings of the IEEE conference on computer vision and pattern recognition. ",
        "suffix": "pp.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                124,
                0.9230769230769231,
                0,
                79
            ]
        ]
    },
    {
        "page": 17,
        "index": 40,
        "bbox": [
            50.77000000000004,
            141.89251840000003,
            180.7720403200001,
            150.85891840000002
        ],
        "prefix": "recognition. ",
        "content": "pp. 770–778 (2016) 2, 10, 11, 12 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                124,
                0.23678794411714424,
                0,
                17
            ]
        ]
    },
    {
        "page": 17,
        "index": 41,
        "bbox": [
            34.016000000000034,
            130.92451840000004,
            379.8437715199997,
            139.89091840000003
        ],
        "prefix": "",
        "content": "14. Hou, R., Li, J., Bhargava, A., Raventos, A., Guizilini, V., Fang, C., Lynch, J., ",
        "suffix": "Gaidon,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                125,
                0.9375,
                0,
                81
            ]
        ]
    },
    {
        "page": 17,
        "index": 42,
        "bbox": [
            50.77000000000004,
            119.96551840000004,
            379.84674303999986,
            128.93191840000003
        ],
        "prefix": "J., ",
        "content": "Gaidon, A.: Realtime panoptic segmentation from dense detections. In: Proceed",
        "suffix": "ings",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                125,
                0.9090909090909091,
                0,
                82
            ]
        ]
    },
    {
        "page": 17,
        "index": 43,
        "bbox": [
            50.77000000000004,
            109.00651840000003,
            379.84674303999986,
            117.97291840000004
        ],
        "prefix": "Proceed",
        "content": "ings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. ",
        "suffix": "pp.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                125,
                0.9230769230769231,
                0,
                71
            ]
        ]
    },
    {
        "page": 17,
        "index": 44,
        "bbox": [
            50.77000000000004,
            98.04851840000003,
            145.44980416000004,
            107.01491840000004
        ],
        "prefix": "Recognition. ",
        "content": "pp. 8523–8532 (2020) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                125,
                0.3382684915959203,
                0,
                19
            ]
        ]
    },
    {
        "page": 17,
        "index": 45,
        "bbox": [
            34.016000000000034,
            87.07951840000004,
            379.8428748799998,
            96.04591840000005
        ],
        "prefix": "",
        "content": "15. Hu, J., Huang, L., Ren, T., Zhang, S., Ji, R., Cao, L.: You only segment once: ",
        "suffix": "Towards",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                126,
                0.9444444444444444,
                0,
                79
            ]
        ]
    },
    {
        "page": 17,
        "index": 46,
        "bbox": [
            50.77000000000004,
            76.12151840000004,
            379.8413631999998,
            85.08791840000005
        ],
        "prefix": "once: ",
        "content": "Towards realtime panoptic segmentation. In: Proceedings of the IEEE/CVF Con",
        "suffix": "ference",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                126,
                0.9166666666666666,
                0,
                83
            ]
        ]
    },
    {
        "page": 17,
        "index": 47,
        "bbox": [
            50.77000000000004,
            65.16251840000004,
            379.8422598399997,
            74.12891840000005
        ],
        "prefix": "Con",
        "content": "ference on Computer Vision and Pattern Recognition. pp. 17819–17829 (2023) 2, ",
        "suffix": "4,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                127,
                0.6691342457979602,
                11,
                74
            ]
        ]
    },
    {
        "page": 17,
        "index": 48,
        "bbox": [
            50.77000000000004,
            54.20351840000004,
            95.29714240000004,
            63.16991840000004
        ],
        "prefix": "2, ",
        "content": "4, 9, 10, 11 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                126,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 17,
        "index": 49,
        "bbox": [
            34.016000000000034,
            43.23551840000004,
            379.8455647999998,
            52.20191840000004
        ],
        "prefix": "",
        "content": "16. Jain, J., Li, J., Chiu, M.T., Hassani, A., Orlov, N., Shi, H.: Oneformer: One trans",
        "suffix": "former",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                127,
                0.9411764705882353,
                0,
                90
            ]
        ]
    },
    {
        "page": 17,
        "index": 50,
        "bbox": [
            50.77000000000004,
            32.276518400000036,
            379.84136319999993,
            41.242918400000036
        ],
        "prefix": "trans",
        "content": "former to rule universal image segmentation. In: Proceedings of the IEEE/CVF ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                127,
                0.9166666666666666,
                0,
                70
            ]
        ]
    },
    {
        "page": 18,
        "index": 0,
        "bbox": [
            96.72,
            595.3035184,
            379.8466329599999,
            604.2699184
        ],
        "prefix": "",
        "content": "Efficient Transformer Encoders for Mask2Formerstyle models 19 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 18,
        "index": 1,
        "bbox": [
            50.769,
            569.4005184,
            379.8403631999997,
            578.3669184
        ],
        "prefix": "",
        "content": "Conference on Computer Vision and Pattern Recognition. pp. 2989–2998 (2023) ",
        "suffix": "1,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                126,
                0.6436830339362648,
                0,
                65
            ]
        ]
    },
    {
        "page": 18,
        "index": 2,
        "bbox": [
            50.769,
            558.4415184000001,
            65.6173584,
            567.4079184000001
        ],
        "prefix": "(2023) ",
        "content": "1, 3 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                126,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 18,
        "index": 3,
        "bbox": [
            34.016,
            547.4735184000001,
            379.83928831999964,
            556.4399184000001
        ],
        "prefix": "",
        "content": "17. Jiang, Z., Gong, Z., Xu, Y., Wang, J.: Multiexit vision transformer with custom ",
        "suffix": "finetuning",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                128,
                0.9333333333333333,
                0,
                80
            ]
        ]
    },
    {
        "page": 18,
        "index": 4,
        "bbox": [
            50.769,
            536.5145184000002,
            379.8403631999997,
            545.4809184000002
        ],
        "prefix": "custom ",
        "content": "finetuning for finegrained image recognition. In: 2023 IEEE International Con",
        "suffix": "ference",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                128,
                0.9090909090909091,
                0,
                85
            ]
        ]
    },
    {
        "page": 18,
        "index": 5,
        "bbox": [
            50.769,
            525.5555184000002,
            315.02674079999986,
            534.5219184000002
        ],
        "prefix": "Con",
        "content": "ference on Image Processing (ICIP). pp. 5233–5237 (2023) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                128,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 18,
        "index": 6,
        "bbox": [
            34.016,
            514.5875184000002,
            363.6145875199997,
            523.5539184000003
        ],
        "prefix": "",
        "content": "18. Kingma, D.P., Ba, J.: Adam: A method for stochastic optimization (2017) 10 ",
        "suffix": "19.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                129,
                0.8125,
                0,
                71
            ]
        ]
    },
    {
        "page": 18,
        "index": 7,
        "bbox": [
            34.016,
            503.61951840000023,
            379.84556479999975,
            512.5859184000002
        ],
        "prefix": "10 ",
        "content": "19. Kirillov, A., He, K., Girshick, R., Rother, C., Dollár, P.: Panoptic segmentation ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                130,
                0.8571428571428571,
                0,
                82
            ]
        ]
    },
    {
        "page": 18,
        "index": 8,
        "bbox": [
            50.769,
            492.6605184000002,
            125.99709599999998,
            501.6269184000002
        ],
        "prefix": "",
        "content": "(2019) 1, 2, 5, 7, 9 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                130,
                0.2857142857142857,
                0,
                6
            ]
        ]
    },
    {
        "page": 18,
        "index": 9,
        "bbox": [
            34.016,
            481.6925184000002,
            379.8410815999998,
            490.6589184000002
        ],
        "prefix": "",
        "content": "20. Li, F., Zeng, A., Liu, S., Zhang, H., Li, H., Zhang, L., Ni, L.M.: Lite detr: An ",
        "suffix": "interleaved",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                131,
                0.95,
                0,
                81
            ]
        ]
    },
    {
        "page": 18,
        "index": 10,
        "bbox": [
            50.769,
            470.7335184000002,
            379.84663967999984,
            479.6999184000002
        ],
        "prefix": "An ",
        "content": "interleaved multiscale encoder for efficient detr. In: Proceedings of the IEEE/CVF ",
        "suffix": "Conference",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                131,
                0.9285714285714286,
                0,
                83
            ]
        ]
    },
    {
        "page": 18,
        "index": 11,
        "bbox": [
            50.769,
            459.7745184000002,
            379.8457430399998,
            468.74091840000017
        ],
        "prefix": "IEEE/CVF ",
        "content": "Conference on Computer Vision and Pattern Recognition. pp. 18558–18567 (2023) ",
        "suffix": "2,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                131,
                0.6245252960780961,
                0,
                76
            ]
        ]
    },
    {
        "page": 18,
        "index": 12,
        "bbox": [
            50.769,
            448.8155184000002,
            135.22531487999998,
            457.78191840000017
        ],
        "prefix": "(2023) ",
        "content": "2, 3, 9, 10, 11, 15, 16 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                131,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 18,
        "index": 13,
        "bbox": [
            34.016,
            437.8475184000002,
            379.83839167999963,
            446.81391840000015
        ],
        "prefix": "",
        "content": "21. Lin, T.Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Dollár, P., ",
        "suffix": "Zitnick,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                132,
                0.8366547153028487,
                0,
                87
            ]
        ]
    },
    {
        "page": 18,
        "index": 14,
        "bbox": [
            50.769,
            426.8885184000002,
            379.8439497599998,
            435.85491840000014
        ],
        "prefix": "P., ",
        "content": "Zitnick, C.L.: Microsoft coco: Common objects in context. In: Computer Vision– ",
        "suffix": "ECCV",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                132,
                0.7857142857142857,
                0,
                71
            ]
        ]
    },
    {
        "page": 18,
        "index": 15,
        "bbox": [
            50.769,
            415.9295184000002,
            379.8448463999998,
            424.89591840000014
        ],
        "prefix": "Vision– ",
        "content": "ECCV 2014: 13th European Conference, Zurich, Switzerland, September 612, ",
        "suffix": "2014,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                132,
                0.7824118781556938,
                11,
                79
            ]
        ]
    },
    {
        "page": 18,
        "index": 16,
        "bbox": [
            50.769,
            404.9705184000002,
            319.6175375999998,
            413.93691840000014
        ],
        "prefix": "612, ",
        "content": "2014, Proceedings, Part V 13. pp. 740–755. Springer (2014) 2, 3, 9 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                132,
                0.5316273400589383,
                11,
                68
            ]
        ]
    },
    {
        "page": 18,
        "index": 17,
        "bbox": [
            34.016,
            394.00251840000016,
            379.84466815999974,
            402.9689184000001
        ],
        "prefix": "",
        "content": "22. Liu, Z., Lin, Y., Cao, Y., Hu, H., Wei, Y., Zhang, Z., Lin, S., Guo, B.: Swin ",
        "suffix": "transformer:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                133,
                0.9473684210526315,
                0,
                78
            ]
        ]
    },
    {
        "page": 18,
        "index": 18,
        "bbox": [
            50.769,
            383.04351840000015,
            379.8394665599999,
            392.0099184000001
        ],
        "prefix": "Swin ",
        "content": "transformer: Hierarchical vision transformer using shifted windows. In: Proceedings ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                133,
                0.9090909090909091,
                0,
                84
            ]
        ]
    },
    {
        "page": 18,
        "index": 19,
        "bbox": [
            50.769,
            372.08451840000015,
            379.8439497599998,
            381.0509184000001
        ],
        "prefix": "Proceedings ",
        "content": "of the IEEE/CVF international conference on computer vision. pp. 10012–10022 ",
        "suffix": "(2021)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                133,
                0.7578586294114296,
                0,
                65
            ]
        ]
    },
    {
        "page": 18,
        "index": 20,
        "bbox": [
            50.769,
            361.1265184000001,
            159.27319968,
            370.0929184000001
        ],
        "prefix": "10012–10022 ",
        "content": "(2021) 2, 10, 12, 13, 15, 16 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                133,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 18,
        "index": 21,
        "bbox": [
            34.016,
            350.15751840000013,
            379.8401849599998,
            359.1239184000001
        ],
        "prefix": "",
        "content": "23. Liu, Z., Sun, Y., Li, Y., Zhou, Z., Hu, J., Li, F.: Multiexit vision transformer for ",
        "suffix": "dynamic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                134,
                0.9444444444444444,
                0,
                85
            ]
        ]
    },
    {
        "page": 18,
        "index": 22,
        "bbox": [
            50.769,
            339.1995184000001,
            379.84215647999974,
            348.16591840000007
        ],
        "prefix": "for ",
        "content": "dynamic inference. In: Proceedings of the IEEE/CVF Conference on Computer ",
        "suffix": "Vision",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                134,
                0.9230769230769231,
                0,
                74
            ]
        ]
    },
    {
        "page": 18,
        "index": 23,
        "bbox": [
            50.769,
            328.2405184000001,
            336.18385823999984,
            337.20691840000006
        ],
        "prefix": "Computer ",
        "content": "Vision and Pattern Recognition (CVPR). pp. 5214–5223 (2021) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                134,
                0.5578586294114295,
                0,
                58
            ]
        ]
    },
    {
        "page": 18,
        "index": 24,
        "bbox": [
            34.016,
            317.2725184000001,
            379.8383916799998,
            326.23891840000005
        ],
        "prefix": "",
        "content": "24. Lv, W., Xu, S., Zhao, Y., Wang, G., Wei, J., Cui, C., Du, Y., Dang, Q., Liu, Y.: ",
        "suffix": "Detrs",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                135,
                0.95,
                0,
                81
            ]
        ]
    },
    {
        "page": 18,
        "index": 25,
        "bbox": [
            50.769,
            306.3135184000001,
            379.84215647999974,
            315.27991840000004
        ],
        "prefix": "Y.: ",
        "content": "Detrs beat yolos on realtime object detection. arXiv preprint arXiv:2304.08069 ",
        "suffix": "(2023)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                135,
                0.9333333333333333,
                0,
                79
            ]
        ]
    },
    {
        "page": 18,
        "index": 26,
        "bbox": [
            50.769,
            295.3545184000001,
            110.13015455999998,
            304.32091840000004
        ],
        "prefix": "arXiv:2304.08069 ",
        "content": "(2023) 2, 9, 10 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                135,
                0.25,
                0,
                6
            ]
        ]
    },
    {
        "page": 18,
        "index": 27,
        "bbox": [
            34.016,
            284.38651840000006,
            379.83839167999975,
            293.3529184
        ],
        "prefix": "",
        "content": "25. Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G., Killeen, T., ",
        "suffix": "Lin,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                136,
                0.9375,
                0,
                84
            ]
        ]
    },
    {
        "page": 18,
        "index": 28,
        "bbox": [
            50.769,
            273.42751840000005,
            379.83946655999983,
            282.3939184
        ],
        "prefix": "T., ",
        "content": "Lin, Z., Gimelshein, N., Antiga, L., Desmaison, A., Kopf, A., Yang, E., DeVito, Z., ",
        "suffix": "Raison,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                136,
                0.9375,
                0,
                84
            ]
        ]
    },
    {
        "page": 18,
        "index": 29,
        "bbox": [
            50.769,
            262.46851840000005,
            379.84215647999974,
            271.4349184
        ],
        "prefix": "Z., ",
        "content": "Raison, M., Tejani, A., Chilamkurthy, S., Steiner, B., Fang, L., Bai, J., Chintala, S.: ",
        "suffix": "Pytorch:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                136,
                0.9375,
                0,
                88
            ]
        ]
    },
    {
        "page": 18,
        "index": 30,
        "bbox": [
            50.769,
            251.50951840000002,
            379.8394665599999,
            260.4759184
        ],
        "prefix": "S.: ",
        "content": "Pytorch: An imperative style, highperformance deep learning library. In: Advances ",
        "suffix": "in",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                136,
                0.9166666666666666,
                0,
                82
            ]
        ]
    },
    {
        "page": 18,
        "index": 31,
        "bbox": [
            50.769,
            240.55051840000002,
            379.8439497599997,
            249.5169184
        ],
        "prefix": "Advances ",
        "content": "in Neural Information Processing Systems 32, pp. 8024–8035. Curran Associates, ",
        "suffix": "Inc.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                136,
                0.7206061108593418,
                0,
                78
            ]
        ]
    },
    {
        "page": 18,
        "index": 32,
        "bbox": [
            50.769,
            229.5915184,
            107.82937632000001,
            238.5579184
        ],
        "prefix": "Associates, ",
        "content": "Inc. (2019) 10 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                136,
                0.6,
                0,
                11
            ]
        ]
    },
    {
        "page": 18,
        "index": 33,
        "bbox": [
            34.016,
            218.62351840000002,
            379.84646143999987,
            227.58991840000002
        ],
        "prefix": "",
        "content": "26. Sun, S., Wang, W., Yu, Q., Howard, A., Torr, P., Chen, L.C.: Remax: Relaxing for ",
        "suffix": "better",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                137,
                0.9444444444444444,
                0,
                81
            ]
        ]
    },
    {
        "page": 18,
        "index": 34,
        "bbox": [
            50.769,
            207.66451840000002,
            379.84305311999975,
            216.6309184
        ],
        "prefix": "for ",
        "content": "better training on efficient panoptic segmentation. arXiv preprint arXiv:2306.17319 ",
        "suffix": "(2023)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                137,
                0.9285714285714286,
                0,
                84
            ]
        ]
    },
    {
        "page": 18,
        "index": 35,
        "bbox": [
            50.769,
            196.70551840000002,
            124.97851296,
            205.6719184
        ],
        "prefix": "arXiv:2306.17319 ",
        "content": "(2023) 2, 9, 10, 11 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                137,
                0.2222222222222222,
                0,
                6
            ]
        ]
    },
    {
        "page": 18,
        "index": 36,
        "bbox": [
            34.016,
            185.73751840000003,
            379.8428748799997,
            194.70391840000002
        ],
        "prefix": "",
        "content": "27. Tang, J., Liu, Z., Li, Y., Sun, Y., Zhou, Z., Hu, J., Li, F.: You need multiple exiting: ",
        "suffix": "Dynamic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                138,
                0.95,
                0,
                89
            ]
        ]
    },
    {
        "page": 18,
        "index": 37,
        "bbox": [
            50.769,
            174.77851840000002,
            379.84305311999987,
            183.74491840000002
        ],
        "prefix": "exiting: ",
        "content": "Dynamic early exiting for accelerating unified vision language model. In: Proceed",
        "suffix": "ings",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                139,
                1.0,
                115,
                201
            ]
        ]
    },
    {
        "page": 18,
        "index": 38,
        "bbox": [
            50.769,
            163.81951840000002,
            379.8421564799998,
            172.7859184
        ],
        "prefix": "Proceed",
        "content": "ings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition ",
        "suffix": "(CVPR).",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                138,
                1.0,
                86,
                156
            ]
        ]
    },
    {
        "page": 18,
        "index": 39,
        "bbox": [
            50.769,
            152.86151840000002,
            214.55015903999995,
            161.82791840000002
        ],
        "prefix": "Recognition ",
        "content": "(CVPR). pp. 13504–13513 (2023) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                138,
                0.30678339892459344,
                86,
                115
            ]
        ]
    },
    {
        "page": 18,
        "index": 40,
        "bbox": [
            34.016,
            141.89251840000003,
            379.84377151999973,
            150.85891840000002
        ],
        "prefix": "",
        "content": "28. Tang, S., Wang, Y., Kong, Z., Zhang, T., Li, Y., Ding, C., Wang, Y., Liang, Y., ",
        "suffix": "Xu,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                139,
                0.9444444444444444,
                0,
                80
            ]
        ]
    },
    {
        "page": 18,
        "index": 41,
        "bbox": [
            50.769,
            130.93451840000003,
            379.83856991999977,
            139.90091840000002
        ],
        "prefix": "Y., ",
        "content": "Xu, D.: You need multiple exiting: Dynamic early exiting for accelerating unified ",
        "suffix": "vision",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                139,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 18,
        "index": 42,
        "bbox": [
            50.769,
            119.97551840000003,
            379.8394665599998,
            128.94191840000002
        ],
        "prefix": "unified ",
        "content": "vision language model. In: Proceedings of the IEEE/CVF Conference on Computer ",
        "suffix": "Vision",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                139,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 18,
        "index": 43,
        "bbox": [
            50.769,
            109.01651840000002,
            308.55210335999976,
            117.98291840000003
        ],
        "prefix": "Computer ",
        "content": "Vision and Pattern Recognition. pp. 10781–10791 (2023) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                139,
                0.5667599570131879,
                74,
                127
            ]
        ]
    },
    {
        "page": 18,
        "index": 44,
        "bbox": [
            34.016,
            98.04851840000002,
            379.8464614399997,
            107.01491840000003
        ],
        "prefix": "",
        "content": "29. Tu, Z.: Autocontext and its application to highlevel vision tasks. In: 2008 IEEE ",
        "suffix": "Conference",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                140,
                0.9333333333333333,
                0,
                81
            ]
        ]
    },
    {
        "page": 18,
        "index": 45,
        "bbox": [
            50.769,
            87.08951840000002,
            379.8394665599998,
            96.05591840000002
        ],
        "prefix": "IEEE ",
        "content": "Conference on Computer Vision and Pattern Recognition. pp. 1–8. IEEE (2008) 1 ",
        "suffix": "30.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                140,
                0.5764456350092768,
                0,
                74
            ]
        ]
    },
    {
        "page": 18,
        "index": 46,
        "bbox": [
            34.016,
            76.12151840000001,
            379.8383916799997,
            85.08791840000002
        ],
        "prefix": "1 ",
        "content": "30. Valade, F., Hebiri, M., Gay, P.: Eero: Early exit with reject option for efficient ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                141,
                0.875,
                0,
                83
            ]
        ]
    },
    {
        "page": 18,
        "index": 47,
        "bbox": [
            50.769,
            65.16251840000001,
            242.30206367999986,
            74.12891840000002
        ],
        "prefix": "",
        "content": "classification with limited budget (2024) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                141,
                0.6666666666666666,
                0,
                41
            ]
        ]
    },
    {
        "page": 18,
        "index": 48,
        "bbox": [
            34.016,
            54.194518400000014,
            379.83839167999975,
            63.160918400000014
        ],
        "prefix": "",
        "content": "31. Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A.N., Kaiser, ",
        "suffix": "Ł.,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                142,
                0.875,
                0,
                85
            ]
        ]
    },
    {
        "page": 18,
        "index": 49,
        "bbox": [
            50.769,
            43.23551840000001,
            379.8457430399998,
            52.20191840000001
        ],
        "prefix": "Kaiser, ",
        "content": "Ł., Polosukhin, I.: Attention is all you need. Advances in neural information pro",
        "suffix": "cessing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                142,
                0.811991388655103,
                7,
                92
            ]
        ]
    },
    {
        "page": 18,
        "index": 50,
        "bbox": [
            50.769,
            32.27651840000001,
            173.98076256,
            41.24291840000001
        ],
        "prefix": "pro",
        "content": "cessing systems 30 (2017) 1, 3 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                142,
                0.2272870859028389,
                7,
                33
            ]
        ]
    },
    {
        "page": 19,
        "index": 0,
        "bbox": [
            34.016,
            595.3035184,
            120.04053824,
            604.2699184
        ],
        "prefix": "",
        "content": "20 M. Yao et al. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 19,
        "index": 1,
        "bbox": [
            34.016,
            569.4005184,
            379.8428748799998,
            578.3669184
        ],
        "prefix": "",
        "content": "32. Wan, Z., Wang, X., Liu, C., Alam, S., Zheng, Y., Qu, Z., Yan, S., Zhu, Y., Zhang, ",
        "suffix": "Q.,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                143,
                0.9473684210526315,
                0,
                82
            ]
        ]
    },
    {
        "page": 19,
        "index": 2,
        "bbox": [
            50.769999999999996,
            558.4415184000001,
            379.83956991999986,
            567.4079184000001
        ],
        "prefix": "Zhang, ",
        "content": "Q., Chowdhury, M., et al.: Efficient large language models: A survey. arXiv preprint ",
        "suffix": "arXiv:2312.03863",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                143,
                0.8592076858654489,
                0,
                85
            ]
        ]
    },
    {
        "page": 19,
        "index": 3,
        "bbox": [
            50.769999999999996,
            547.4825184000001,
            165.61434047999998,
            556.4489184000001
        ],
        "prefix": "preprint ",
        "content": "arXiv:2312.03863 1 (2023) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                143,
                0.5278912700185537,
                0,
                34
            ]
        ]
    },
    {
        "page": 19,
        "index": 4,
        "bbox": [
            34.016000000000005,
            536.5235184000002,
            379.8446681599996,
            545.4899184000002
        ],
        "prefix": "",
        "content": "33. Wang, X., Zhou, W., He, X., Peng, X., Wei, F., Guo, Y.: Singlelayer vision trans",
        "suffix": "formers",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                144,
                0.9375,
                0,
                88
            ]
        ]
    },
    {
        "page": 19,
        "index": 5,
        "bbox": [
            50.77000000000001,
            525.5645184000002,
            379.84201055999995,
            534.5309184000002
        ],
        "prefix": "trans",
        "content": "formers for more accurate early exits with less overhead. Pattern Recognition 136, ",
        "suffix": "102243",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                144,
                0.7863946277037253,
                0,
                70
            ]
        ]
    },
    {
        "page": 19,
        "index": 6,
        "bbox": [
            50.76999999999998,
            514.6055184000003,
            136.24131136,
            523.5719184000003
        ],
        "prefix": "136, ",
        "content": "102243 (2022) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                144,
                0.3382684915959203,
                14,
                27
            ]
        ]
    },
    {
        "page": 19,
        "index": 7,
        "bbox": [
            34.01599999999998,
            503.39545920000023,
            379.84433887999995,
            512.6129184000002
        ],
        "prefix": "",
        "content": "34. Wu, Y., Kirillov, A., Massa, F., Lo, W.Y., Girshick, R.: Detectron2. https:// ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                145,
                0.9285714285714286,
                0,
                78
            ]
        ]
    },
    {
        "page": 19,
        "index": 8,
        "bbox": [
            50.76999999999998,
            492.43645920000023,
            271.5632768,
            501.65391840000024
        ],
        "prefix": "",
        "content": "github.com/facebookresearch/detectron2 (2019) 10 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                145,
                0.6580758085303762,
                6,
                44
            ]
        ]
    },
    {
        "page": 19,
        "index": 9,
        "bbox": [
            34.01599999999999,
            481.72851840000027,
            379.8401849599999,
            490.69491840000023
        ],
        "prefix": "",
        "content": "35. Xie, Z., Lin, Y., Yao, Z., Zhang, Z., Dai, Q., Cao, Y., Hu, H.: Selfsupervised ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                146,
                0.9375,
                0,
                79
            ]
        ]
    },
    {
        "page": 19,
        "index": 10,
        "bbox": [
            50.769999999999996,
            470.77051840000024,
            356.6560460799998,
            479.7369184000002
        ],
        "prefix": "",
        "content": "learning with swin transformers. arXiv preprint arXiv:2105.04553 (2021) 12 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                146,
                0.9166666666666666,
                0,
                71
            ]
        ]
    },
    {
        "page": 19,
        "index": 11,
        "bbox": [
            34.01599999999999,
            459.81151840000024,
            379.8401849599999,
            468.7779184000002
        ],
        "prefix": "",
        "content": "36. Xie, Z., Lin, Y., Yao, Z., Zhang, Z., Dai, Q., Cao, Y., Hu, H.: Selfsupervised ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                147,
                0.9375,
                0,
                79
            ]
        ]
    },
    {
        "page": 19,
        "index": 12,
        "bbox": [
            50.769999999999996,
            448.85251840000024,
            356.6560460799998,
            457.8189184000002
        ],
        "prefix": "",
        "content": "learning with swin transformers. arXiv preprint arXiv:2105.04553 (2021) 13 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                147,
                0.9166666666666666,
                0,
                71
            ]
        ]
    },
    {
        "page": 19,
        "index": 13,
        "bbox": [
            34.01599999999999,
            437.89351840000023,
            379.83928831999987,
            446.8599184000002
        ],
        "prefix": "",
        "content": "37. Xu, F., Zhang, X., Ma, Z., Wang, J., Hu, J., Sun, J.: Lgvit: Dynamic early exiting ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                148,
                0.9444444444444444,
                0,
                83
            ]
        ]
    },
    {
        "page": 19,
        "index": 14,
        "bbox": [
            50.769999999999996,
            426.93451840000023,
            379.8467430399998,
            435.9009184000002
        ],
        "prefix": "exiting ",
        "content": "for accelerating vision transformer. In: Proceedings of the 32nd ACM International ",
        "suffix": "Conference",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                148,
                0.9230769230769231,
                0,
                83
            ]
        ]
    },
    {
        "page": 19,
        "index": 15,
        "bbox": [
            50.769999999999996,
            415.9755184000002,
            278.05479039999983,
            424.9419184000002
        ],
        "prefix": "International ",
        "content": "Conference on Multimedia. pp. 1958–1966 (2023) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                148,
                0.4473232867642869,
                0,
                45
            ]
        ]
    },
    {
        "page": 19,
        "index": 16,
        "bbox": [
            34.01599999999999,
            405.0165184000002,
            379.8392883199997,
            413.9829184000002
        ],
        "prefix": "",
        "content": "38. Xu, J., Xiong, Z., Bhattacharyya, S.P.: Pidnet: A realtime semantic segmentation ",
        "suffix": "network",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                149,
                0.9285714285714286,
                0,
                81
            ]
        ]
    },
    {
        "page": 19,
        "index": 17,
        "bbox": [
            50.769999999999996,
            394.0575184000002,
            379.84225983999977,
            403.0239184000002
        ],
        "prefix": "segmentation ",
        "content": "network inspired by pid controllers. In: Proceedings of the IEEE/CVF Conference ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                149,
                0.9285714285714286,
                0,
                80
            ]
        ]
    },
    {
        "page": 19,
        "index": 18,
        "bbox": [
            50.769999999999996,
            383.0985184000002,
            344.4061503999997,
            392.0649184000002
        ],
        "prefix": "Conference ",
        "content": "on Computer Vision and Pattern Recognition. pp. 19529–19539 (2023) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                149,
                0.6436830339362648,
                0,
                65
            ]
        ]
    },
    {
        "page": 19,
        "index": 19,
        "bbox": [
            34.01599999999999,
            372.1395184000002,
            379.8383916799997,
            381.1059184000002
        ],
        "prefix": "",
        "content": "39. Xu, M., Yin, W., Cai, D., Yi, R., Xu, D., Wang, Q., Wu, B., Zhao, Y., Yang, ",
        "suffix": "C.,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                150,
                0.9473684210526315,
                0,
                76
            ]
        ]
    },
    {
        "page": 19,
        "index": 20,
        "bbox": [
            50.769999999999996,
            361.1815184000002,
            379.8431564799997,
            370.14791840000015
        ],
        "prefix": "Yang, ",
        "content": "C., Wang, S., et al.: A survey of resourceefficient llm and multimodal foundation ",
        "suffix": "models.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                150,
                0.7737687106475089,
                0,
                82
            ]
        ]
    },
    {
        "page": 19,
        "index": 21,
        "bbox": [
            50.769999999999996,
            350.2225184000002,
            252.0513337599998,
            359.18891840000015
        ],
        "prefix": "foundation ",
        "content": "models. arXiv preprint arXiv:2401.08092 (2024) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                150,
                0.9,
                82,
                128
            ]
        ]
    },
    {
        "page": 19,
        "index": 22,
        "bbox": [
            34.01599999999999,
            339.2635184000002,
            379.84466815999957,
            348.22991840000014
        ],
        "prefix": "",
        "content": "40. Xu, S., Yuan, H., Shi, Q., Qi, L., Wang, J., Yang, Y., Li, Y., Chen, K., Tong, ",
        "suffix": "Y.,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                151,
                0.9473684210526315,
                0,
                79
            ]
        ]
    },
    {
        "page": 19,
        "index": 23,
        "bbox": [
            50.769999999999996,
            328.3045184000002,
            379.8413631999997,
            337.27091840000014
        ],
        "prefix": "Tong, ",
        "content": "Y., Ghanem, B., et al.: Rapsam: Towards realtime allpurpose segment anything. ",
        "suffix": "arXiv",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                151,
                0.8158869738240486,
                0,
                78
            ]
        ]
    },
    {
        "page": 19,
        "index": 24,
        "bbox": [
            50.769999999999996,
            317.3455184000002,
            258.40044159999985,
            326.31191840000014
        ],
        "prefix": "anything. ",
        "content": "arXiv preprint arXiv:2401.10228 (2024) 2, 9, 10, 11 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                151,
                0.5833333333333334,
                0,
                38
            ]
        ]
    },
    {
        "page": 19,
        "index": 25,
        "bbox": [
            34.01599999999999,
            306.38651840000017,
            379.84646143999964,
            315.35291840000014
        ],
        "prefix": "",
        "content": "41. Yang, J., Zhang, X., Zhang, X., Tang, J., Li, X.: Exploiting face recognizability ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                152,
                0.9333333333333333,
                0,
                82
            ]
        ]
    },
    {
        "page": 19,
        "index": 26,
        "bbox": [
            50.769999999999996,
            295.42751840000017,
            379.84046655999975,
            304.39391840000013
        ],
        "prefix": "recognizability ",
        "content": "with early exit vision transformers. In: 2023 IEEE International Conference on ",
        "suffix": "Image",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                152,
                0.9230769230769231,
                0,
                79
            ]
        ]
    },
    {
        "page": 19,
        "index": 27,
        "bbox": [
            50.769999999999996,
            284.46851840000016,
            271.23315327999984,
            293.43491840000013
        ],
        "prefix": "on ",
        "content": "Image Processing (ICIP). pp. 6341–6345 (2023) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                152,
                0.489836880090111,
                0,
                44
            ]
        ]
    },
    {
        "page": 19,
        "index": 28,
        "bbox": [
            34.01599999999999,
            273.50951840000016,
            379.84287487999984,
            282.4759184000001
        ],
        "prefix": "",
        "content": "42. Yu, C., Gao, C., Wang, J., Yu, G., Shen, C., Sang, N.: Bisenet v2: Bilateral network ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                153,
                0.9444444444444444,
                0,
                85
            ]
        ]
    },
    {
        "page": 19,
        "index": 29,
        "bbox": [
            50.769999999999996,
            262.55051840000016,
            379.84584639999974,
            271.5169184000001
        ],
        "prefix": "network ",
        "content": "with guided aggregation for realtime semantic segmentation. International Journal ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                153,
                0.9090909090909091,
                0,
                82
            ]
        ]
    },
    {
        "page": 19,
        "index": 30,
        "bbox": [
            50.769999999999996,
            251.59251840000013,
            233.60576192,
            260.55891840000015
        ],
        "prefix": "Journal ",
        "content": "of Computer Vision 129, 3051–3068 (2021) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                153,
                0.41353352832366125,
                0,
                48
            ]
        ]
    },
    {
        "page": 19,
        "index": 31,
        "bbox": [
            34.01599999999998,
            240.63351840000013,
            379.8428748799998,
            249.59991840000012
        ],
        "prefix": "",
        "content": "43. Yu, C., Wang, J., Peng, C., Gao, C., Yu, G., Sang, N.: Bisenet: Bilateral segmenta",
        "suffix": "tion",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                154,
                0.9375,
                0,
                87
            ]
        ]
    },
    {
        "page": 19,
        "index": 32,
        "bbox": [
            50.76999999999998,
            229.67451840000012,
            379.8395699199998,
            238.64091840000012
        ],
        "prefix": "segmenta",
        "content": "tion network for realtime semantic segmentation. In: Proceedings of the European ",
        "suffix": "conference",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                154,
                0.9166666666666666,
                0,
                76
            ]
        ]
    },
    {
        "page": 19,
        "index": 33,
        "bbox": [
            50.76999999999998,
            218.71551840000012,
            300.5192089599998,
            227.68191840000011
        ],
        "prefix": "European ",
        "content": "conference on computer vision (ECCV). pp. 325–341 (2018) 4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                154,
                0.6436830339362648,
                0,
                55
            ]
        ]
    },
    {
        "page": 19,
        "index": 34,
        "bbox": [
            34.01599999999998,
            207.75651840000012,
            379.8437715199999,
            216.7229184000001
        ],
        "prefix": "",
        "content": "44. Zhang, T., He, X., Qin, Z., Sun, J.: Adaptive deep neural network inference op",
        "suffix": "timization",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                155,
                0.9333333333333333,
                0,
                89
            ]
        ]
    },
    {
        "page": 19,
        "index": 35,
        "bbox": [
            50.76999999999998,
            196.79751840000011,
            379.8440531199998,
            205.7639184000001
        ],
        "prefix": "op",
        "content": "timization with eenet. In: Proceedings of the 37th International Conference on ",
        "suffix": "Machine",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                155,
                0.9166666666666666,
                0,
                68
            ]
        ]
    },
    {
        "page": 19,
        "index": 36,
        "bbox": [
            50.76999999999998,
            185.8385184000001,
            253.09502271999983,
            194.8049184000001
        ],
        "prefix": "on ",
        "content": "Machine Learning. pp. 15983–15993 (2023) 2, 4, 5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                155,
                0.3970799491974039,
                0,
                39
            ]
        ]
    }
]