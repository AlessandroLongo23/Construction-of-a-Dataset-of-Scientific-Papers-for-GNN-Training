{
    "key": "doc",
    "block_type": "document",
    "children": [
        {
            "leaf id": 0,
            "key": "doc/tit",
            "block type": "title",
            "content": "UCINet0: A Machine Learning based Receiver for 5G NR PUCCH Format 0",
            "leftover": "UCINet0: A Machine Learning based Receiver for 5G NR PUCCH Format 0",
            "matches": []
        },
        {
            "leaf id": 1,
            "key": "doc/aut0",
            "block type": "author",
            "content": "{Anil~Kumar~Yerrapragada,~\\IEEEmembership{Member,~IEEE,} Jeeva~Keshav~Sattianarayanin,~\\IEEEmembership{Student~Member,~IEEE,} and~Radha~Krishna~Ganti,~\\IEEEmembership{Member,~IEEE,} }",
            "leftover": "{Anil~Kumar~Yerrapragada,~\\IEEEmembership{Member,~IEEE,} Jeeva~Keshav~Sattianarayanin,~\\IEEEmembership{Student~Member,~IEEE,} and~Radha~Krishna~Ganti,~\\IEEEmembership{Member,~IEEE,} }",
            "matches": []
        },
        {
            "leaf id": 2,
            "key": "doc/aut1",
            "block type": "author",
            "content": "{\\IEEEauthorblockN{Anil~Kumar~Yerrapragada\\IEEEauthorrefmark{1}, Jeeva~Keshav~Sattianarayanin \\IEEEauthorrefmark{2}, Radha~Krishna~Ganti\\IEEEauthorrefmark{3}} \\IEEEauthorblockA{ Department of Electrical Engineering, Indian Institute of Technology Madras, Chennai, India, 600036 Email: \\IEEEauthorrefmark{1}anilkumar@5gtbiitm.in, \\IEEEauthorrefmark{2}jeevakeshavs@smail.iitm.ac.in, \\IEEEauthorrefmark{3}rganti@ee.iitm.ac.in } \\thanks{The first two authors contributed equally to this work. This work was supported by the Indian Ministry of Electronics and Information Technology (MeitY) and the Department of Telecommunications (DoT) under the project ''Next Generation Wireless Research and Standardization on 5G and Beyond'' with grant number SP21221155EEMEIT008073 through the 5G Testbed Project.} }",
            "leftover": "{\\IEEEauthorblockN{Anil~Kumar~Yerrapragada\\IEEEauthorrefmark{1}, Jeeva~Keshav~Sattianarayanin \\IEEEauthorrefmark{2}, Radha~Krishna~Ganti\\IEEEauthorrefmark{3}} \\IEEEauthorblockA{ Department of Electrical Engineering, Indian Institute of Technology Madras, Chennai, India, 600036 Email: \\IEEEauthorrefmark{1}anilkumar@5gtbiitm.in, \\IEEEauthorrefmark{2}jeevakeshavs@smail.iitm.ac.in, \\IEEEauthorrefmark{3}rganti@ee.iitm.ac.in } \\thanks{The first two authors contributed equally to this work. This work was supported by the Indian Ministry of Electronics and Information Technology (MeitY) and the Department of Telecommunications (DoT) under the project ''Next Generation Wireless Research and Standardization on 5G and Beyond'' with grant number SP21221155EEMEIT008073 through the 5G Testbed Project.} }",
            "matches": []
        },
        {
            "leaf id": 3,
            "key": "doc/abs",
            "block type": "abstract",
            "content": "Accurate decoding of Uplink Control Information (UCI) on the Physical Uplink Control Channel (PUCCH) is essential for enabling 5G wireless links. This paper explores an AI/MLbased receiver design for PUCCH Format 0. Format 0 signaling encodes the UCI content within the phase of a known base waveform and even supports multiplexing of up to 12 users within the same timefrequency resources. Our firstofakind neural network classifier, which we term UCINet0, is capable of predicting when no user is transmitting on the PUCCH, as well as decoding the UCI content of any number of multiplexed users, up to 12. Inference results with both simulated and hardwarecaptured field datasets show that the UCINet0 model outperforms conventional DFTbased decoders across all SNR ranges.",
            "leftover": "Accurate decoding of Uplink Control Information (UCI) on the Physical Uplink Control Channel (PUCCH) is essential for enabling 5G wireless links. This paper explores an AI/MLbased receiver design for PUCCH Format 0. Format 0 signaling encodes the UCI content within the phase of a known base waveform and even supports multiplexing of up to 12 users within the same timefrequency resources. Our firstofakind neural network classifier, which we term UCINet0, is capable of predicting when no user is transmitting on the PUCCH, as well as decoding the UCI content of any number of multiplexed users, up to 12. Inference results with both simulated and hardwarecaptured field datasets show that the UCINet0 model outperforms conventional DFTbased decoders across all SNR ranges.",
            "matches": []
        },
        {
            "key": "doc/body",
            "block_type": "body",
            "children": [
                {
                    "key": "doc/body/IEEEkeywords0",
                    "block_type": "IEEEkeywords",
                    "children": [
                        {
                            "leaf id": 4,
                            "key": "doc/body/IEEEkeywords0/txl0",
                            "block type": "txl",
                            "content": "5G, AI/ML, Multilabel Classification, Neural Network, Physical Uplink Control Channel, Format 0",
                            "leftover": "5G, AI/ML, Multilabel Classification, Neural Network, Physical Uplink Control Channel, Format 0",
                            "matches": []
                        }
                    ]
                },
                {
                    "key": "doc/body/sec1",
                    "block_type": "sec",
                    "children": [
                        {
                            "leaf id": 5,
                            "key": "doc/body/sec1/tit",
                            "block type": "title",
                            "content": "Introduction",
                            "leftover": "Introduction",
                            "matches": []
                        },
                        {
                            "leaf id": 6,
                            "key": "doc/body/sec1/txl0",
                            "block type": "txl",
                            "content": "The successful establishment of any wireless communication link between two entities relies on feedback signalling from both ends to indicate the channel quality as well as the status of previous transmissions. The Third Generation Partnership Project (3GPP) standards define the 5G NR (New Radio) Physical Uplink Control Channel (PUCCH), which is the key enabler of such feedback in the uplink direction. It is a dedicated channel on which a User Equipment (UE) can send control information to a Base station (gNB). Uplink Control Information (UCI) carried by the PUCCH includes (1) Hybrid Automatic Repeat Request (HARQ) acknowledgements for prior downlink transmissions (Base station to UE), (2) Scheduling Request (SR) for the subsequent allocation of uplink transmission resources, and (3) Channel State Information (CSI) reports containing channel quality metrics that facilitate link adaptation, precoding, and downlink resource allocation.",
                            "leftover": "The successful establishment of any wireless communication link between two entities relies on feedback signalling from both ends to indicate the channel quality as well as the status of previous transmissions. The Third Generation Partnership Project (3GPP) standards define the 5G NR (New Radio) Physical Uplink Control Channel (PUCCH), which is the key enabler of such feedback in the uplink direction. It is a dedicated channel on which a User Equipment (UE) can send control information to a Base station (gNB). Uplink Control Information (UCI) carried by the PUCCH includes (1) Hybrid Automatic Repeat Request (HARQ) acknowledgements for prior downlink transmissions (Base station to UE), (2) Scheduling Request (SR) for the subsequent allocation of uplink transmission resources, and (3) Channel State Information (CSI) reports containing channel quality metrics that facilitate link adaptation, precoding, and downlink resource allocation.",
                            "matches": []
                        },
                        {
                            "leaf id": 7,
                            "key": "doc/body/sec1/txl1",
                            "block type": "txl",
                            "content": "In order to encompass the wide range of capacity and latency requirements of various 5G applications, the 5G standards have provisioned five different formats of the PUCCH transmission (See Table for a summary of the five formats). Smaller UCI payloads of 1 or 2 HARQ bits and/or an SR are transferred using Formats 0 and 1. Larger payloads, including several SR and HARQ bits, along with CSI reports, are transmitted using Formats 2, 3, and 4. Furthermore, Formats 0 and 2 are suitable for low latency applications since they occupy only 1 or 2 OFDM symbols in the time domain. Formats 1, 3, and 4 are suitable for applications requiring improved coverage and capacity since they extend between 4 and 14 OFDM symbols in the time domain and provide SNR gain.",
                            "leftover": "In order to encompass the wide range of capacity and latency requirements of various 5G applications, the 5G standards have provisioned five different formats of the PUCCH transmission (See Table for a summary of the five formats). Smaller UCI payloads of 1 or 2 HARQ bits and/or an SR are transferred using Formats 0 and 1. Larger payloads, including several SR and HARQ bits, along with CSI reports, are transmitted using Formats 2, 3, and 4. Furthermore, Formats 0 and 2 are suitable for low latency applications since they occupy only 1 or 2 OFDM symbols in the time domain. Formats 1, 3, and 4 are suitable for applications requiring improved coverage and capacity since they extend between 4 and 14 OFDM symbols in the time domain and provide SNR gain.",
                            "matches": []
                        },
                        {
                            "key": "doc/body/sec1/table*2",
                            "block_type": "table*",
                            "children": [
                                {
                                    "key": "doc/body/sec1/table*2/threeparttable0",
                                    "block_type": "threeparttable",
                                    "children": [
                                        {
                                            "key": "doc/body/sec1/table*2/threeparttable0/cpt0",
                                            "block_type": "cpt",
                                            "children": [
                                                {
                                                    "leaf id": 8,
                                                    "key": "doc/body/sec1/table*2/threeparttable0/cpt0/txl0",
                                                    "block type": "txl",
                                                    "content": "Summary of 5G NR PUCCH Formats",
                                                    "leftover": "Summary of 5G NR PUCCH Formats",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 9,
                                            "key": "doc/body/sec1/table*2/threeparttable0/tabular1",
                                            "block type": "tabular",
                                            "content": "{|C{0.8cm}|C{2.3cm}|C{1.1cm}|C{1.2cm}|C{1.2cm}|C{1.9cm}|C{2.2cm}|C{1.2cm}|C{1.45cm}|} Format}& Payload}& Duration}& Duration in symbols}& Resource Blocks}& Waveform}& Modulation}& DMRS}& Multiplexing} 0}& HARQ, SR & Short & 12 & 1 & CPOFDM & None (Sequencebased) & No & Yes 1}& HARQ, SR & Long & 414 & 1 & CPOFDM & BPSK or QPSK & Yes & Yes 2}& HARQ, SR, CSI & Short & 12 & 116 & CPOFDM & QPSK & Yes & No 3}& HARQ, SR, CSI & Long & 414 & 116\\tnote{1} & DFTSOFDM & π/2BPSK or QPSK & Yes & No 4}& HARQ, SR, CSI & Long & 414 & 1 & DFTSOFDM & π/2BPSK or QPSK & Yes & Yes",
                                            "leftover": "{|C{0.8cm}|C{2.3cm}|C{1.1cm}|C{1.2cm}|C{1.2cm}|C{1.9cm}|C{2.2cm}|C{1.2cm}|C{1.45cm}|} Format}& Payload}& Duration}& Duration in symbols}& Resource Blocks}& Waveform}& Modulation}& DMRS}& Multiplexing} 0}& HARQ, SR & Short & 12 & 1 & CPOFDM & None (Sequencebased) & No & Yes 1}& HARQ, SR & Long & 414 & 1 & CPOFDM & BPSK or QPSK & Yes & Yes 2}& HARQ, SR, CSI & Short & 12 & 116 & CPOFDM & QPSK & Yes & No 3}& HARQ, SR, CSI & Long & 414 & 116\\tnote{1} & DFTSOFDM & π/2BPSK or QPSK & Yes & No 4}& HARQ, SR, CSI & Long & 414 & 1 & DFTSOFDM & π/2BPSK or QPSK & Yes & Yes",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 10,
                                            "key": "doc/body/sec1/table*2/threeparttable0/tablenotes2",
                                            "block type": "tablenotes",
                                            "content": "[1] Limited to 16, 810, 12, 15, 16 for ease of DFTSOFDM.",
                                            "leftover": "[1] Limited to 16, 810, 12, 15, 16 for ease of DFTSOFDM.",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec1/sub3",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 11,
                                    "key": "doc/body/sec1/sub3/tit",
                                    "block type": "title",
                                    "content": "Our Contributions",
                                    "leftover": "Our Contributions",
                                    "matches": []
                                },
                                {
                                    "leaf id": 12,
                                    "key": "doc/body/sec1/sub3/txl0",
                                    "block type": "txl",
                                    "content": "In this paper, we focus on PUCCH Format 0, a particularly important format used during several steps of the 5G initial attach process. Specifically, we look at the design and performance analysis of a Format 0 receiver using AI/ML techniques such as Neural Network classifiers. We make the following contributions.",
                                    "leftover": "In this paper, we focus on PUCCH Format 0, a particularly important format used during several steps of the 5G initial attach process. Specifically, we look at the design and performance analysis of a Format 0 receiver using AI/ML techniques such as Neural Network classifiers. We make the following contributions.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 13,
                                    "key": "doc/body/sec1/sub3/itemize1",
                                    "block type": "itemize",
                                    "content": "PUCCH Format 0 uses a waveformbased technique for information transfer. It encodes the UCI within phase rotations applied to a predefined base sequence. This paper presents a Machine Learning based decoder for Format 0 that uses a Neural Network (NN) to predict the phase rotation. This paper, an extension of our previous work, is one of the first attempts at designing such a receiver for 5G PUCCH Format 0. PUCCH Format 0 signals can be transmitted either by individual UEs or by multiple UEs (a maximum of 12 UEs) multiplexed in the same timefrequency resources. Conventional decoding methods employ iterative correlation of the coherently combined signals with the known base sequences. This paper shows that a single NN model can replace the correlation operations, thus decoding the UCI from a single UE up to a maximum of 12 multiplexed UEs, with each UE transmitting any combination of HARQ and SR payloads. One of the challenges of correlationbased methods is their susceptibility to false detections. Conventional approaches to determine whether a UE has actually transmitted on the PUCCH involve signal powerbased thresholds, which are often determined either based on observation or tedious simulations. We show that the NN model described in this paper is robust enough to identify false transmissions, thus eliminating the need for thresholds. This paper provides insights into the generation of training and testing wireless signal datasets derived from both MATLAB simulations and realtime overtheair field captures taken at the indigenous 5G Testbed at IIT Madras. The proposed AI/ML model relies on extracting a map between the received PUCCH samples (input) and the applied phase rotation to the base sequence (output). At least two degrees of randomness are embedded in the input data. The first comes from the phase rotation, which is a function of the random UCI bits. The second comes from the fading channel and thermal noise, which we assume to be Additive White Gaussian Noise (AWGN). In the presence of such randomness, neural networks often converge to the correct inputoutput relationship while obscuring the path they take to achieve convergence. This paper attempts to offer some insights into the interpretability of the model's behavior. AI/ML models must adhere to certain complexity, memory, and latency constraints to become deployable on hardware devices such as Field Programmable Gate Arrays (FPGA). To this end, this paper provides a complexity analysis of the NN models presented.",
                                    "leftover": "PUCCH Format 0 uses a waveformbased technique for information transfer. It encodes the UCI within phase rotations applied to a predefined base sequence. This paper presents a Machine Learning based decoder for Format 0 that uses a Neural Network (NN) to predict the phase rotation. This paper, an extension of our previous work, is one of the first attempts at designing such a receiver for 5G PUCCH Format 0. PUCCH Format 0 signals can be transmitted either by individual UEs or by multiple UEs (a maximum of 12 UEs) multiplexed in the same timefrequency resources. Conventional decoding methods employ iterative correlation of the coherently combined signals with the known base sequences. This paper shows that a single NN model can replace the correlation operations, thus decoding the UCI from a single UE up to a maximum of 12 multiplexed UEs, with each UE transmitting any combination of HARQ and SR payloads. One of the challenges of correlationbased methods is their susceptibility to false detections. Conventional approaches to determine whether a UE has actually transmitted on the PUCCH involve signal powerbased thresholds, which are often determined either based on observation or tedious simulations. We show that the NN model described in this paper is robust enough to identify false transmissions, thus eliminating the need for thresholds. This paper provides insights into the generation of training and testing wireless signal datasets derived from both MATLAB simulations and realtime overtheair field captures taken at the indigenous 5G Testbed at IIT Madras. The proposed AI/ML model relies on extracting a map between the received PUCCH samples (input) and the applied phase rotation to the base sequence (output). At least two degrees of randomness are embedded in the input data. The first comes from the phase rotation, which is a function of the random UCI bits. The second comes from the fading channel and thermal noise, which we assume to be Additive White Gaussian Noise (AWGN). In the presence of such randomness, neural networks often converge to the correct inputoutput relationship while obscuring the path they take to achieve convergence. This paper attempts to offer some insights into the interpretability of the model's behavior. AI/ML models must adhere to certain complexity, memory, and latency constraints to become deployable on hardware devices such as Field Programmable Gate Arrays (FPGA). To this end, this paper provides a complexity analysis of the NN models presented.",
                                    "matches": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "key": "doc/body/sec2",
                    "block_type": "sec",
                    "children": [
                        {
                            "leaf id": 14,
                            "key": "doc/body/sec2/tit",
                            "block type": "title",
                            "content": "Background on 5G NR PUCCH Format 0",
                            "leftover": "Background on 5G NR PUCCH Format 0",
                            "matches": []
                        },
                        {
                            "leaf id": 15,
                            "key": "doc/body/sec2/txl0",
                            "block type": "txl",
                            "content": "PUCCH Format 0 is used to transfer one or two HARQ acknowledgments and/or an SR. In 5G, Format 0 signalling is used as early as the initial attach procedure in which a UE is trying to latch onto a gNB. During the initial attach, there are several critical downlink transmissions, such as the Radio Resource Control (RRC) Setup, that need to be acknowledged, which the UE signals on PUCCH Format 0. It is to be noted that at this early stage of the connection process, neither the UE nor the gNB are expected to have obtained detailed information about the wireless surroundings. Consequently, Format 0 employs a sequencebased transmission in which phaserotated versions of a predefined base sequence are transmitted by the UE. The UCI is encoded in the phase of the base sequence. Since the base sequence is assumed to be known at both ends, Format 0 signalling does not contain any pilot reference signals such as the Demodulation Reference Signals (DMRS), nor does it use Quadrature Amplitude Modulation (QAM) to modulate the UCI bits.",
                            "leftover": "PUCCH Format 0 is used to transfer one or two HARQ acknowledgments and/or an SR. In 5G, Format 0 signalling is used as early as the initial attach procedure in which a UE is trying to latch onto a gNB. During the initial attach, there are several critical downlink transmissions, such as the Radio Resource Control (RRC) Setup, that need to be acknowledged, which the UE signals on PUCCH Format 0. It is to be noted that at this early stage of the connection process, neither the UE nor the gNB are expected to have obtained detailed information about the wireless surroundings. Consequently, Format 0 employs a sequencebased transmission in which phaserotated versions of a predefined base sequence are transmitted by the UE. The UCI is encoded in the phase of the base sequence. Since the base sequence is assumed to be known at both ends, Format 0 signalling does not contain any pilot reference signals such as the Demodulation Reference Signals (DMRS), nor does it use Quadrature Amplitude Modulation (QAM) to modulate the UCI bits.",
                            "matches": []
                        },
                        {
                            "key": "doc/body/sec2/sub1",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 16,
                                    "key": "doc/body/sec2/sub1/tit",
                                    "block type": "title",
                                    "content": "TimeFrequency Allocation, Sequence Generation and UCI Encoding",
                                    "leftover": "TimeFrequency Allocation, Sequence Generation and UCI Encoding",
                                    "matches": []
                                },
                                {
                                    "leaf id": 17,
                                    "key": "doc/body/sec2/sub1/txl0",
                                    "block type": "txl",
                                    "content": "The cyclically shifted base sequence is mapped to the Resource Grid, where it occupies one Resource Block (RB) in the frequency domain and either one or two symbols in the time domain. One Resource Block in the frequency domain contains 12 Resource Elements (or 12 subcarriers of the OFDM grid i.e., Nsc^RB=12). Since PUCCH Format 0 can span two symbols, either 12 or 24 Resource Elements can be occupied. The second symbol contains a sequence similar to that of the first symbol and can be used for SNR enhancement at the receiver. In more concrete terms, the PUCCH Format 0 sequence in the frequency domain includes a phase rotation α applied to a low PeaktoAverage Power Ratio (PAPR) basesequence ru,v^α(k), and is given by,",
                                    "leftover": "The cyclically shifted base sequence is mapped to the Resource Grid, where it occupies one Resource Block (RB) in the frequency domain and either one or two symbols in the time domain. One Resource Block in the frequency domain contains 12 Resource Elements (or 12 subcarriers of the OFDM grid i.e., Nsc^RB=12). Since PUCCH Format 0 can span two symbols, either 12 or 24 Resource Elements can be occupied. The second symbol contains a sequence similar to that of the first symbol and can be used for SNR enhancement at the receiver. In more concrete terms, the PUCCH Format 0 sequence in the frequency domain includes a phase rotation α applied to a low PeaktoAverage Power Ratio (PAPR) basesequence ru,v^α(k), and is given by,",
                                    "matches": []
                                },
                                {
                                    "leaf id": 18,
                                    "key": "doc/body/sec2/sub1/equation1",
                                    "block type": "equation",
                                    "content": "ru,v^α(k) = e^jαk·r̅u,v (k) = e^jαk·e^jϕ(k) π/4,",
                                    "leftover": "ru,v^α(k) = e^jαk·r̅u,v (k) = e^jαk·e^jϕ(k) π/4,",
                                    "matches": []
                                },
                                {
                                    "leaf id": 19,
                                    "key": "doc/body/sec2/sub1/txl2",
                                    "block type": "txl",
                                    "content": "where k = 0,1,2,..., Nsc^RB1 and ϕ(k) is given by Table 5.2.2.22 in which is a set of phase factors that lead to the generation of low PAPR sequences. The subscripts u and v represent the group number and the sequence number within the group, respectively. The values of u and v are configured by higher layer group hopping parameters. We note that when PUCCH Format 0 is two OFDM symbols long, intraslot frequency hopping can be enabled. In this paper, for ease of exposition, we assume that intraslot frequency hopping is disabled and utilize only one symbol for decoding the UCI bits.",
                                    "leftover": "where k = 0,1,2,..., Nsc^RB1 and ϕ(k) is given by Table 5.2.2.22 in which is a set of phase factors that lead to the generation of low PAPR sequences. The subscripts u and v represent the group number and the sequence number within the group, respectively. The values of u and v are configured by higher layer group hopping parameters. We note that when PUCCH Format 0 is two OFDM symbols long, intraslot frequency hopping can be enabled. In this paper, for ease of exposition, we assume that intraslot frequency hopping is disabled and utilize only one symbol for decoding the UCI bits.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 20,
                                    "key": "doc/body/sec2/sub1/txl3",
                                    "block type": "txl",
                                    "content": "The cyclic shift α applied to the base sequence is given by,",
                                    "leftover": "The cyclic shift α applied to the base sequence is given by,",
                                    "matches": []
                                },
                                {
                                    "leaf id": 21,
                                    "key": "doc/body/sec2/sub1/equation4",
                                    "block type": "equation",
                                    "content": "α= {2πNsc^RB((m0 + mcs + ncs(ns,f^μ,l+l'))Nsc^RB ),",
                                    "leftover": "α= {2πNsc^RB((m0 + mcs + ncs(ns,f^μ,l+l'))Nsc^RB ),",
                                    "matches": []
                                },
                                {
                                    "leaf id": 22,
                                    "key": "doc/body/sec2/sub1/txl5",
                                    "block type": "txl",
                                    "content": "where",
                                    "leftover": "where",
                                    "matches": []
                                },
                                {
                                    "leaf id": 23,
                                    "key": "doc/body/sec2/sub1/itemize6",
                                    "block type": "itemize",
                                    "content": "m0∈ [0,11] is the initial cyclic shift that is used to differentiate various multiplexed users as defined in . mcs is the UCIspecific cyclic shift shown in Table . ncs(ns,f^μ,l+l') is a function based on the pseudorandom binary sequence defined in. \\beginitemize ns,f^μ is the slot number in the radio frame . l is the OFDM symbol number in the PUCCH transmission where l=0 corresponds to the first OFDM symbol of the PUCCH transmission. l' is the index of the OFDM symbol in the slot that corresponds to the first OFDM symbol of the PUCCH transmission in the slot.",
                                    "leftover": "m0∈ [0,11] is the initial cyclic shift that is used to differentiate various multiplexed users as defined in . mcs is the UCIspecific cyclic shift shown in Table . ncs(ns,f^μ,l+l') is a function based on the pseudorandom binary sequence defined in. \\beginitemize ns,f^μ is the slot number in the radio frame . l is the OFDM symbol number in the PUCCH transmission where l=0 corresponds to the first OFDM symbol of the PUCCH transmission. l' is the index of the OFDM symbol in the slot that corresponds to the first OFDM symbol of the PUCCH transmission in the slot.",
                                    "matches": []
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec2/sub2",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 24,
                                    "key": "doc/body/sec2/sub2/tit",
                                    "block type": "title",
                                    "content": "PUCCH Format 0 Transmission Scenarios",
                                    "leftover": "PUCCH Format 0 Transmission Scenarios",
                                    "matches": []
                                },
                                {
                                    "leaf id": 25,
                                    "key": "doc/body/sec2/sub2/txl0",
                                    "block type": "txl",
                                    "content": "While m0 and ncs are drawn from higher layer (L2) configurations, the UE chooses the mcs depending on the UCI content it transfers. Consider the following two examples of possible PUCCH Format 0 transmission scenarios.",
                                    "leftover": "While m0 and ncs are drawn from higher layer (L2) configurations, the UE chooses the mcs depending on the UCI content it transfers. Consider the following two examples of possible PUCCH Format 0 transmission scenarios.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec2/sub2/ssb1",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 26,
                                            "key": "doc/body/sec2/sub2/ssb1/tit",
                                            "block type": "title",
                                            "content": "Single UE Transmission",
                                            "leftover": "Single UE Transmission",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 27,
                                            "key": "doc/body/sec2/sub2/ssb1/txl0",
                                            "block type": "txl",
                                            "content": "A single UE scheduled to transmit on a particular timefrequency allocation chooses an mcs value based on its UCI content as defined in Table.. In the table, NACK and ACK refer to Negative and Positive Acknowledgments, respectively. +ve SR indicates an SR transmission and a ve SR denotes that an SR is not transmitted despite the PUCCH resource allocation (the UE does not require uplink PUSCH allocations).",
                                            "leftover": "A single UE scheduled to transmit on a particular timefrequency allocation chooses an mcs value based on its UCI content as defined in Table.. In the table, NACK and ACK refer to Negative and Positive Acknowledgments, respectively. +ve SR indicates an SR transmission and a ve SR denotes that an SR is not transmitted despite the PUCCH resource allocation (the UE does not require uplink PUSCH allocations).",
                                            "matches": []
                                        },
                                        {
                                            "key": "doc/body/sec2/sub2/ssb1/table1",
                                            "block_type": "table",
                                            "children": [
                                                {
                                                    "key": "doc/body/sec2/sub2/ssb1/table1/cpt0",
                                                    "block_type": "cpt",
                                                    "children": [
                                                        {
                                                            "leaf id": 28,
                                                            "key": "doc/body/sec2/sub2/ssb1/table1/cpt0/txl0",
                                                            "block type": "txl",
                                                            "content": "Possible mcs values in PUCCH Format 0",
                                                            "leftover": "Possible mcs values in PUCCH Format 0",
                                                            "matches": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "leaf id": 29,
                                                    "key": "doc/body/sec2/sub2/ssb1/table1/tabular1",
                                                    "block type": "tabular",
                                                    "content": "{|C{2cm}|L{3.5cm}|} UCI Content}& Possible mcs values} 1 HARQ & 0 (ACK), 6 (NACK) 2 HARQ & 0 (NACK, NACK) 3 (NACK, ACK) 6 (ACK, ACK), 9 (ACK, NACK) 1 SR & 0 (+ve SR) 1 HARQ + 1 SR & 0 (NACK, ve SR), 3 (NACK, +ve SR) 6 (ACK, ve SR), 9 (ACK, +ve SR) 2 HARQ + 1 SR & 0 (NACK, NACK, ve SR), 1 (NACK, NACK, +ve SR) 3 (NACK, ACK, ve SR), 4 (NACK, ACK, +ve SR) 6 (ACK, ACK, ve SR), 7 (ACK, ACK, +ve SR) 9 (ACK, NACK, ve SR), 10 (ACK, NACK, +ve SR)",
                                                    "leftover": "{|C{2cm}|L{3.5cm}|} UCI Content}& Possible mcs values} 1 HARQ & 0 (ACK), 6 (NACK) 2 HARQ & 0 (NACK, NACK) 3 (NACK, ACK) 6 (ACK, ACK), 9 (ACK, NACK) 1 SR & 0 (+ve SR) 1 HARQ + 1 SR & 0 (NACK, ve SR), 3 (NACK, +ve SR) 6 (ACK, ve SR), 9 (ACK, +ve SR) 2 HARQ + 1 SR & 0 (NACK, NACK, ve SR), 1 (NACK, NACK, +ve SR) 3 (NACK, ACK, ve SR), 4 (NACK, ACK, +ve SR) 6 (ACK, ACK, ve SR), 7 (ACK, ACK, +ve SR) 9 (ACK, NACK, ve SR), 10 (ACK, NACK, +ve SR)",
                                                    "matches": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec2/sub2/ssb2",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 30,
                                            "key": "doc/body/sec2/sub2/ssb2/tit",
                                            "block type": "title",
                                            "content": "Multiplexed UE Transmission",
                                            "leftover": "Multiplexed UE Transmission",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 31,
                                            "key": "doc/body/sec2/sub2/ssb2/txl0",
                                            "block type": "txl",
                                            "content": "In the interest of optimizing radio resources, PUCCH Format 0 has a unique potential to multiplex more than one UE on the same timefrequency locations. This is achieved by allocating different initial cyclic shifts (m0) to each UE. Since the number of possible values of m0 is limited to 12, the number of UEs that can be multiplexed is upperbounded by 12. The maximum number of UEs that can be multiplexed is also driven by the UCI content. A few examples of this are shown in Figure. Figurea shows how assigning m0 values of 0 through 5 to a maximum of 6 different UEs allows each of them to pick one of the two possible cyclic shifts and transmit 1 HARQ bit on the same resources. Similarly, Figureb shows that m0 values of 0 through 2 allow for 3 UEs to be multiplexed when each of them transmits 2 HARQ bits (or 1 HARQ and 1 SR bit) with one of the four possible cyclic shifts. Additionally, multiplexing across different types of UCI content is possible, wherever applicable. For example, a UE transmitting 2 HARQ bits and an SR bit cannot be multiplexed with another transmitting the same combination but can be multiplexed with up to 3 more UEs transmitting SR bits or 1 more UE transmitting 2 HARQ bits (Figurec). Multiplexing of multiple UEs is possible as long as there are no overlaps in the assigned possible cyclic shifts for each of the UEs.",
                                            "leftover": "In the interest of optimizing radio resources, PUCCH Format 0 has a unique potential to multiplex more than one UE on the same timefrequency locations. This is achieved by allocating different initial cyclic shifts (m0) to each UE. Since the number of possible values of m0 is limited to 12, the number of UEs that can be multiplexed is upperbounded by 12. The maximum number of UEs that can be multiplexed is also driven by the UCI content. A few examples of this are shown in Figure. Figurea shows how assigning m0 values of 0 through 5 to a maximum of 6 different UEs allows each of them to pick one of the two possible cyclic shifts and transmit 1 HARQ bit on the same resources. Similarly, Figureb shows that m0 values of 0 through 2 allow for 3 UEs to be multiplexed when each of them transmits 2 HARQ bits (or 1 HARQ and 1 SR bit) with one of the four possible cyclic shifts. Additionally, multiplexing across different types of UCI content is possible, wherever applicable. For example, a UE transmitting 2 HARQ bits and an SR bit cannot be multiplexed with another transmitting the same combination but can be multiplexed with up to 3 more UEs transmitting SR bits or 1 more UE transmitting 2 HARQ bits (Figurec). Multiplexing of multiple UEs is possible as long as there are no overlaps in the assigned possible cyclic shifts for each of the UEs.",
                                            "matches": []
                                        },
                                        {
                                            "key": "doc/body/sec2/sub2/ssb2/figure1",
                                            "block_type": "figure",
                                            "children": [
                                                {
                                                    "leaf id": 32,
                                                    "key": "doc/body/sec2/sub2/ssb2/figure1/cpt0",
                                                    "block type": "cpt",
                                                    "content": "Example scenarios showing how assigning different initial cyclic shifts to different UEs allows them to be multiplexed on the same timefrequency resources.",
                                                    "leftover": "Example scenarios showing how assigning different initial cyclic shifts to different UEs allows them to be multiplexed on the same timefrequency resources.",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 33,
                                            "key": "doc/body/sec2/sub2/ssb2/txl2",
                                            "block type": "txl",
                                            "content": "Accounting for UE multiplexing, the generalized multiuser Format 0 received signal in the frequency domain is given by,",
                                            "leftover": "Accounting for UE multiplexing, the generalized multiuser Format 0 received signal in the frequency domain is given by,",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 34,
                                            "key": "doc/body/sec2/sub2/ssb2/equation3",
                                            "block type": "equation",
                                            "content": "y(k) = ∑m = 0^NUE1hm(k)e^jαm k·r̅u,v (k) + w(k),",
                                            "leftover": "y(k) = ∑m = 0^NUE1hm(k)e^jαm k·r̅u,v (k) + w(k),",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 35,
                                            "key": "doc/body/sec2/sub2/ssb2/txl4",
                                            "block type": "txl",
                                            "content": "where k = 0,1,2,..., Nsc^RB1, NUE is the number of multiplexed UEs in a given resource block, hm(k) is the channel between the gNB and the UE transmitting the base sequence with cyclic shift αm in the k^th Resource Element (observe that all multiplexed UEs use the same base sequence). The noise is denoted by w(k).",
                                            "leftover": "where k = 0,1,2,..., Nsc^RB1, NUE is the number of multiplexed UEs in a given resource block, hm(k) is the channel between the gNB and the UE transmitting the base sequence with cyclic shift αm in the k^th Resource Element (observe that all multiplexed UEs use the same base sequence). The noise is denoted by w(k).",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec2/sub3",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 36,
                                    "key": "doc/body/sec2/sub3/tit",
                                    "block type": "title",
                                    "content": "Existing Methods For PUCCH Format 0",
                                    "leftover": "Existing Methods For PUCCH Format 0",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec2/sub3/ssb0",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 37,
                                            "key": "doc/body/sec2/sub3/ssb0/tit",
                                            "block type": "title",
                                            "content": "Conventional Approaches",
                                            "leftover": "Conventional Approaches",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 38,
                                            "key": "doc/body/sec2/sub3/ssb0/txl0",
                                            "block type": "txl",
                                            "content": "We reiterate that Format 0 has no provision for DMRS (pilots), and hence, there is no channel estimation or equalization possible. Blind correlation methods exist for such scenarios in which channel information is unknown, but these methods are often reserved for scenarios in which the resource allocation information is also not known. One example of such a scenario is the initial time synchronization between the gNB and the UE. Since the allocation of the synchronization sequences is unknown, longer correlations need to be performed. But, by the time the first Format 0 signal is received at the gNB, time and frequency synchronization are already achieved, and the gNB is aware of the UE's transmission. Since the allocation is known and is always 1 RB long, a simpler length 12 correlation is sufficient.",
                                            "leftover": "We reiterate that Format 0 has no provision for DMRS (pilots), and hence, there is no channel estimation or equalization possible. Blind correlation methods exist for such scenarios in which channel information is unknown, but these methods are often reserved for scenarios in which the resource allocation information is also not known. One example of such a scenario is the initial time synchronization between the gNB and the UE. Since the allocation of the synchronization sequences is unknown, longer correlations need to be performed. But, by the time the first Format 0 signal is received at the gNB, time and frequency synchronization are already achieved, and the gNB is aware of the UE's transmission. Since the allocation is known and is always 1 RB long, a simpler length 12 correlation is sufficient.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 39,
                                            "key": "doc/body/sec2/sub3/ssb0/txl1",
                                            "block type": "txl",
                                            "content": "In, various receiver techniques based on correlation are considered. Correlation relies on the fact that the low PAPR base sequence used for encoding the UCI content is known at the receiver. The decoding method involves correlating the received samples with various cyclically shifted versions of the base sequence. The predicted cyclic shift is the cyclic shift that gives the highest correlation magnitude. It should be noted that peak selection, by definition, requires an optimal threshold for determining whether a peak is due to noise or a true transmission.",
                                            "leftover": "In, various receiver techniques based on correlation are considered. Correlation relies on the fact that the low PAPR base sequence used for encoding the UCI content is known at the receiver. The decoding method involves correlating the received samples with various cyclically shifted versions of the base sequence. The predicted cyclic shift is the cyclic shift that gives the highest correlation magnitude. It should be noted that peak selection, by definition, requires an optimal threshold for determining whether a peak is due to noise or a true transmission.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 40,
                                            "key": "doc/body/sec2/sub3/ssb0/txl2",
                                            "block type": "txl",
                                            "content": "The work in shows that correlationbased signal detection outperforms methods based on raw signal power measurements even under fading channel scenarios. A normalized correlationbased solution for identifying false detections of HARQ bits is provided in. The solution uses the probability distributions of a normalized correlation peak to determine the optimum threshold for classifying a reception as false. The PUCCH format 0 receiver algorithm proposed in eliminates phase opposition across multiple hops by finding the sum of correlation magnitudes across symbols instead of correlation values.",
                                            "leftover": "The work in shows that correlationbased signal detection outperforms methods based on raw signal power measurements even under fading channel scenarios. A normalized correlationbased solution for identifying false detections of HARQ bits is provided in. The solution uses the probability distributions of a normalized correlation peak to determine the optimum threshold for classifying a reception as false. The PUCCH format 0 receiver algorithm proposed in eliminates phase opposition across multiple hops by finding the sum of correlation magnitudes across symbols instead of correlation values.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 41,
                                            "key": "doc/body/sec2/sub3/ssb0/txl3",
                                            "block type": "txl",
                                            "content": "In the 5G testbed deployment at IIT Madras, the correlation is implemented by an equivalent DFTbased algorithm. Later in the paper, we use this as a baseline for comparison. Such an algorithm proves to be better from a hardware perspective due to its optimized use of resources (avoiding the need to correlate with all the shifted base sequences), reduced latency, and higher throughput. In the IIT Madras 5G testbed, a DFTbased receiver for PUCCH Format 0 has been implemented on custom Field Programmable Gate Array (FPGA) boards for realtime operations.",
                                            "leftover": "In the 5G testbed deployment at IIT Madras, the correlation is implemented by an equivalent DFTbased algorithm. Later in the paper, we use this as a baseline for comparison. Such an algorithm proves to be better from a hardware perspective due to its optimized use of resources (avoiding the need to correlate with all the shifted base sequences), reduced latency, and higher throughput. In the IIT Madras 5G testbed, a DFTbased receiver for PUCCH Format 0 has been implemented on custom Field Programmable Gate Array (FPGA) boards for realtime operations.",
                                            "matches": []
                                        },
                                        {
                                            "key": "doc/body/sec2/sub3/ssb0/figure4",
                                            "block_type": "figure",
                                            "children": [
                                                {
                                                    "key": "doc/body/sec2/sub3/ssb0/figure4/subfigure0",
                                                    "block_type": "subfigure",
                                                    "children": [
                                                        {
                                                            "leaf id": 42,
                                                            "key": "doc/body/sec2/sub3/ssb0/figure4/subfigure0/txl0",
                                                            "block type": "txl",
                                                            "content": "{0.48} \\includegraphics[width=]{Figures/correlation1ue.png}",
                                                            "leftover": "{0.48} \\includegraphics[width=]{Figures/correlation1ue.png}",
                                                            "matches": []
                                                        },
                                                        {
                                                            "leaf id": 43,
                                                            "key": "doc/body/sec2/sub3/ssb0/figure4/subfigure0/cpt1",
                                                            "block type": "cpt",
                                                            "content": "",
                                                            "leftover": "",
                                                            "matches": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "key": "doc/body/sec2/sub3/ssb0/figure4/subfigure1",
                                                    "block_type": "subfigure",
                                                    "children": [
                                                        {
                                                            "leaf id": 44,
                                                            "key": "doc/body/sec2/sub3/ssb0/figure4/subfigure1/txl0",
                                                            "block type": "txl",
                                                            "content": "{0.48} \\includegraphics[width=]{Figures/correlation3ue.png}",
                                                            "leftover": "{0.48} \\includegraphics[width=]{Figures/correlation3ue.png}",
                                                            "matches": []
                                                        },
                                                        {
                                                            "leaf id": 45,
                                                            "key": "doc/body/sec2/sub3/ssb0/figure4/subfigure1/cpt1",
                                                            "block type": "cpt",
                                                            "content": "",
                                                            "leftover": "",
                                                            "matches": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "leaf id": 46,
                                                    "key": "doc/body/sec2/sub3/ssb0/figure4/cpt2",
                                                    "block type": "cpt",
                                                    "content": "Illustration of the output of Correlation of received Format 0 signal with the known base sequence for (a) 1 UE transmission and (b) 3 UEs multiplexed transmission",
                                                    "leftover": "Illustration of the output of Correlation of received Format 0 signal with the known base sequence for (a) 1 UE transmission and (b) 3 UEs multiplexed transmission",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 47,
                                            "key": "doc/body/sec2/sub3/ssb0/txl5",
                                            "block type": "txl",
                                            "content": "This method recovers the phase rotation α by taking the 12point DFT of y(n)·r̅^*u,v (n). Since y(n)=e^j α n·r̅u,v(n), the multiplication of the base sequence r̅u,v with its complex conjugate forces it to unity. The 12point DFT of the resultant exponential term e^j α n results in a peak at α. This is shown in Figure with a correlation peak at index = 4. The correlation index corresponding to the maximum correlation amplitude is taken as the estimated α value. Recall from that α is a combination of m0, mcs and ncs. Therefore, upon the subtraction of m0 + ncs from α (subtraction is modulo 12), the UCIspecific cyclic shift mcs remains. In scenarios where multiple users (NUE of them) transmit PUCCH Format 0 signals in the same timefrequency location, the DFT algorithm selects the top NUE peaks from the DFT output and uses them to determine the mcs for each of the NUE multiplexed UEs. Figure shows an example in which 3 UEs are multiplexed. In this case, we select the top 3 peaks (at index = 4, 6, and 8) as α values.",
                                            "leftover": "This method recovers the phase rotation α by taking the 12point DFT of y(n)·r̅^*u,v (n). Since y(n)=e^j α n·r̅u,v(n), the multiplication of the base sequence r̅u,v with its complex conjugate forces it to unity. The 12point DFT of the resultant exponential term e^j α n results in a peak at α. This is shown in Figure with a correlation peak at index = 4. The correlation index corresponding to the maximum correlation amplitude is taken as the estimated α value. Recall from that α is a combination of m0, mcs and ncs. Therefore, upon the subtraction of m0 + ncs from α (subtraction is modulo 12), the UCIspecific cyclic shift mcs remains. In scenarios where multiple users (NUE of them) transmit PUCCH Format 0 signals in the same timefrequency location, the DFT algorithm selects the top NUE peaks from the DFT output and uses them to determine the mcs for each of the NUE multiplexed UEs. Figure shows an example in which 3 UEs are multiplexed. In this case, we select the top 3 peaks (at index = 4, 6, and 8) as α values.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 48,
                                            "key": "doc/body/sec2/sub3/ssb0/txl6",
                                            "block type": "txl",
                                            "content": "We observe that while the above works in literature do provide false and missed detection performance analysis, they are based on fixed thresholds that are specific to a certain scenario and derived from lengthy Monte Carlo simulations. Another significant element that is not considered in and considered only to some extent in is the multiplexing of multiple UEs in the same resources.",
                                            "leftover": "We observe that while the above works in literature do provide false and missed detection performance analysis, they are based on fixed thresholds that are specific to a certain scenario and derived from lengthy Monte Carlo simulations. Another significant element that is not considered in and considered only to some extent in is the multiplexing of multiple UEs in the same resources.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 49,
                                            "key": "doc/body/sec2/sub3/ssb0/txl7",
                                            "block type": "txl",
                                            "content": "It is not clear how the thresholds in the above work and implementations extend to multiplexed UEs. Furthermore, fixed thresholds do not account for the received signal power variations that are caused due to variations in gains of hardware elements such as the LNA and due to varying locations of the multiplexed UEs. For example, a true transmission with large distancebased path loss could be misclassified as false if a fixed threshold is used.",
                                            "leftover": "It is not clear how the thresholds in the above work and implementations extend to multiplexed UEs. Furthermore, fixed thresholds do not account for the received signal power variations that are caused due to variations in gains of hardware elements such as the LNA and due to varying locations of the multiplexed UEs. For example, a true transmission with large distancebased path loss could be misclassified as false if a fixed threshold is used.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 50,
                                            "key": "doc/body/sec2/sub3/ssb0/txl8",
                                            "block type": "txl",
                                            "content": "Finding a onesizefitsall threshold for various channel environments and multiplexed UEs is nontrivial. This has led us to explore an AI/MLbased datadriven approach in which a receiver could be designed directly from the raw frequency domain signals rather than correlation values. We apply similar techniques here. The IQ samples in the received resource block are analogous to pixel values in an image. Hence, models that work for image classification could potentially work here too.",
                                            "leftover": "Finding a onesizefitsall threshold for various channel environments and multiplexed UEs is nontrivial. This has led us to explore an AI/MLbased datadriven approach in which a receiver could be designed directly from the raw frequency domain signals rather than correlation values. We apply similar techniques here. The IQ samples in the received resource block are analogous to pixel values in an image. Hence, models that work for image classification could potentially work here too.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec2/sub3/ssb1",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 51,
                                            "key": "doc/body/sec2/sub3/ssb1/tit",
                                            "block type": "title",
                                            "content": "AI/ML Approaches",
                                            "leftover": "AI/ML Approaches",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 52,
                                            "key": "doc/body/sec2/sub3/ssb1/txl0",
                                            "block type": "txl",
                                            "content": "To our knowledge, there is limited work on applying AI/ML toward the decoding of Format 0 signals. One of the first models for Format 0 decoding was proposed in our previous work. However, this was an initial effort that focused on training the model to predict 1 out of 4 possible mcs values in the specific case of 1 HARQ + 1 SR transmission. The architecture described in this paper extends our previous work to support all the possible UCI payloads shown in Table and all the possible multiplexing combinations of UEs (NUE = 0, 1, …, 12). This generalized architecture is designed for potential field deployment in any 5G gNB.",
                                            "leftover": "To our knowledge, there is limited work on applying AI/ML toward the decoding of Format 0 signals. One of the first models for Format 0 decoding was proposed in our previous work. However, this was an initial effort that focused on training the model to predict 1 out of 4 possible mcs values in the specific case of 1 HARQ + 1 SR transmission. The architecture described in this paper extends our previous work to support all the possible UCI payloads shown in Table and all the possible multiplexing combinations of UEs (NUE = 0, 1, …, 12). This generalized architecture is designed for potential field deployment in any 5G gNB.",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "key": "doc/body/sec3",
                    "block_type": "sec",
                    "children": [
                        {
                            "leaf id": 53,
                            "key": "doc/body/sec3/tit",
                            "block type": "title",
                            "content": "Machine Learning Receiver For PUCCH Format 0 Detection",
                            "leftover": "Machine Learning Receiver For PUCCH Format 0 Detection",
                            "matches": []
                        },
                        {
                            "leaf id": 54,
                            "key": "doc/body/sec3/txl0",
                            "block type": "txl",
                            "content": "This section lays down the framework for posing the PUCCH Format 0 detection as an AI/ML classification problem. Specifically, we show how a single multilabel neural network classifier can serve as a generalized PUCCH Format 0 decoder.",
                            "leftover": "This section lays down the framework for posing the PUCCH Format 0 detection as an AI/ML classification problem. Specifically, we show how a single multilabel neural network classifier can serve as a generalized PUCCH Format 0 decoder.",
                            "matches": []
                        },
                        {
                            "key": "doc/body/sec3/sub1",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 55,
                                    "key": "doc/body/sec3/sub1/tit",
                                    "block type": "title",
                                    "content": "PUCCH Format 0 as an AI/ML Classification Problem",
                                    "leftover": "PUCCH Format 0 as an AI/ML Classification Problem",
                                    "matches": []
                                },
                                {
                                    "leaf id": 56,
                                    "key": "doc/body/sec3/sub1/txl0",
                                    "block type": "txl",
                                    "content": "Classification, a widespread use case of machine learning algorithms, is a supervised learning task that involves identifying to which class (label) a given data instance belongs. A predictive model, typically a Neural Network, is trained with a dataset that contains several input instances and the corresponding ground truth class labels. Labeled data helps us ''supervise'' the NN in learning the correct inputoutput mapping.",
                                    "leftover": "Classification, a widespread use case of machine learning algorithms, is a supervised learning task that involves identifying to which class (label) a given data instance belongs. A predictive model, typically a Neural Network, is trained with a dataset that contains several input instances and the corresponding ground truth class labels. Labeled data helps us ''supervise'' the NN in learning the correct inputoutput mapping.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 57,
                                    "key": "doc/body/sec3/sub1/txl1",
                                    "block type": "txl",
                                    "content": "Learning happens by iteratively minimizing a loss function, which is a distance metric between the predicted label and the ground truth label. In many classification tasks, the inputoutput mappings are intractable. ML techniques, such as Neural Networks, have proven to be more adept at extracting these mappings.",
                                    "leftover": "Learning happens by iteratively minimizing a loss function, which is a distance metric between the predicted label and the ground truth label. In many classification tasks, the inputoutput mappings are intractable. ML techniques, such as Neural Networks, have proven to be more adept at extracting these mappings.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 58,
                                    "key": "doc/body/sec3/sub1/txl2",
                                    "block type": "txl",
                                    "content": "There are typically three types of classification tasks. The first is Binary Classification, in which the input data falls into one of two classes. An example of this is email classification as spam or not spam. The second is multiclass classification, in which input data could belong to one of more than two classes. A routinely cited example is classifying handwritten digit images into one of ten numbers. The third is multilabel classification, in which input data can independently belong to more than one class. An example of this is the identification of multiple genres a movie belongs to, given a summary of its plot.",
                                    "leftover": "There are typically three types of classification tasks. The first is Binary Classification, in which the input data falls into one of two classes. An example of this is email classification as spam or not spam. The second is multiclass classification, in which input data could belong to one of more than two classes. A routinely cited example is classifying handwritten digit images into one of ten numbers. The third is multilabel classification, in which input data can independently belong to more than one class. An example of this is the identification of multiple genres a movie belongs to, given a summary of its plot.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 59,
                                    "key": "doc/body/sec3/sub1/txl3",
                                    "block type": "txl",
                                    "content": "For PUCCH Format 0, the classification task is as follows: Given a sequence of received frequency domain Format 0 samples, predict the NUE phase rotation values α0, α1…αNUE1 (see Eq.) applied to the base sequence. The obtained α values can then be mapped back to the UCIspecific cyclic shift mcs for each UE by modulo 12 subtraction of the corresponding m0 and ncs which are provided by the higher layers (L2). In the case where no user is transmitting on the PUCCH (NUE = 0), the NN prediction has to reflect this. In summary, the NN classifier has to predict either a single α value, multiple α values, or zero α values. Such a pattern of prediction is a typical use case of multilabel classification.",
                                    "leftover": "For PUCCH Format 0, the classification task is as follows: Given a sequence of received frequency domain Format 0 samples, predict the NUE phase rotation values α0, α1…αNUE1 (see Eq.) applied to the base sequence. The obtained α values can then be mapped back to the UCIspecific cyclic shift mcs for each UE by modulo 12 subtraction of the corresponding m0 and ncs which are provided by the higher layers (L2). In the case where no user is transmitting on the PUCCH (NUE = 0), the NN prediction has to reflect this. In summary, the NN classifier has to predict either a single α value, multiple α values, or zero α values. Such a pattern of prediction is a typical use case of multilabel classification.",
                                    "matches": []
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec3/sub2",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 60,
                                    "key": "doc/body/sec3/sub2/tit",
                                    "block type": "title",
                                    "content": "Data Generation And Representation",
                                    "leftover": "Data Generation And Representation",
                                    "matches": []
                                },
                                {
                                    "leaf id": 61,
                                    "key": "doc/body/sec3/sub2/txl0",
                                    "block type": "txl",
                                    "content": "Dataset generation in AI/ML for wireless communication has a unique challenge not present in other domains  the nonavailability of offtheshelf benchmark datasets. One way of developing such datasets is through stateoftheart simulation tools, such as the MATLAB 5G Toolbox, which can generate nearaccurate datasets under various channel impairments. Simulated data is a good starting point for training neural networks in communication problems. However, we note that including field data, if available, gives us an insight into the generalization performance of AI/ML models across different distributions of data. The inclusion of field data also aligns with 3GPP requirements for 5G Release 18. For this paper, we use a combination of the above two approaches for data generation. The datasets used in this paper are publicly available at .",
                                    "leftover": "Dataset generation in AI/ML for wireless communication has a unique challenge not present in other domains  the nonavailability of offtheshelf benchmark datasets. One way of developing such datasets is through stateoftheart simulation tools, such as the MATLAB 5G Toolbox, which can generate nearaccurate datasets under various channel impairments. Simulated data is a good starting point for training neural networks in communication problems. However, we note that including field data, if available, gives us an insight into the generalization performance of AI/ML models across different distributions of data. The inclusion of field data also aligns with 3GPP requirements for 5G Release 18. For this paper, we use a combination of the above two approaches for data generation. The datasets used in this paper are publicly available at .",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec3/sub2/ssb1",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 62,
                                            "key": "doc/body/sec3/sub2/ssb1/tit",
                                            "block type": "title",
                                            "content": "Simulated Datasets",
                                            "leftover": "Simulated Datasets",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 63,
                                            "key": "doc/body/sec3/sub2/ssb1/txl0",
                                            "block type": "txl",
                                            "content": "Using the MATLAB 5G Toolbox, we generate the received waveforms containing the PUCCH Format 0 signals. These generated waveforms include fading channel impairments and Additive White Gaussian Noise (AWGN). For various SNR values (0, 5, 10, 15, and 20 dB), we generate PUCCH signals transmitted over a TDLC Channel and store the noisy received samples. These samples are the input to the NN. For each input, the corresponding output label is the applied phase rotation α for each of the NUE UEs in multihot encoded format.",
                                            "leftover": "Using the MATLAB 5G Toolbox, we generate the received waveforms containing the PUCCH Format 0 signals. These generated waveforms include fading channel impairments and Additive White Gaussian Noise (AWGN). For various SNR values (0, 5, 10, 15, and 20 dB), we generate PUCCH signals transmitted over a TDLC Channel and store the noisy received samples. These samples are the input to the NN. For each input, the corresponding output label is the applied phase rotation α for each of the NUE UEs in multihot encoded format.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 64,
                                            "key": "doc/body/sec3/sub2/ssb1/txl1",
                                            "block type": "txl",
                                            "content": "The pseudocode for generating PUCCH Format 0 datasets in MATLAB is shown in Algorithm. We first place PUCCH Format 0 signals on all 14 symbols in a slot and 12 resource blocks in each symbol spaced 20 resource blocks apart. This results in 168 allocations per resource grid. We generate 1000 iterations of such resource grids. These 1000 grids are generated for each value of NUE in the range 0 to 12. The process is further repeated for the five SNR values.",
                                            "leftover": "The pseudocode for generating PUCCH Format 0 datasets in MATLAB is shown in Algorithm. We first place PUCCH Format 0 signals on all 14 symbols in a slot and 12 resource blocks in each symbol spaced 20 resource blocks apart. This results in 168 allocations per resource grid. We generate 1000 iterations of such resource grids. These 1000 grids are generated for each value of NUE in the range 0 to 12. The process is further repeated for the five SNR values.",
                                            "matches": []
                                        },
                                        {
                                            "key": "doc/body/sec3/sub2/ssb1/algorithm2",
                                            "block_type": "algorithm",
                                            "children": [
                                                {
                                                    "leaf id": 65,
                                                    "key": "doc/body/sec3/sub2/ssb1/algorithm2/cpt0",
                                                    "block type": "cpt",
                                                    "content": "Training dataset generation",
                                                    "leftover": "Training dataset generation",
                                                    "matches": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec3/sub2/ssb2",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 66,
                                            "key": "doc/body/sec3/sub2/ssb2/tit",
                                            "block type": "title",
                                            "content": "RealTime OverTheAir Datasets",
                                            "leftover": "RealTime OverTheAir Datasets",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 67,
                                            "key": "doc/body/sec3/sub2/ssb2/txl0",
                                            "block type": "txl",
                                            "content": "We use hardware captures derived from the stateoftheart 5G testbed at IIT Madras for more realistic testing. The hardware captures help represent channel states and hardware impairments not included in the training dataset. The setup (see Figure) consists of an N5182B Vector Signal Generator (VSG) for transmitting the 5G signal at a center frequency of 3.49986 GHz (one of the sub6 GHz channel raster in the n78 band). In our setup, the VSG acts like a UE, and it uses a commercial omnidirectional wideband monopole antenna to transmit the signals. The VSG is connected to the antenna through 2 SMA cables with 1.9 dB wire loss each. Here, commercial UEs could not be used because it is not easy to extract the actual transmitted information, i.e., ground truth labels for the UCI transmissions made by the UE. Also, the dynamic nature of the allocations made by the L2 scheduler makes it difficult to capture the data at the gNB for that particular time duration.",
                                            "leftover": "We use hardware captures derived from the stateoftheart 5G testbed at IIT Madras for more realistic testing. The hardware captures help represent channel states and hardware impairments not included in the training dataset. The setup (see Figure) consists of an N5182B Vector Signal Generator (VSG) for transmitting the 5G signal at a center frequency of 3.49986 GHz (one of the sub6 GHz channel raster in the n78 band). In our setup, the VSG acts like a UE, and it uses a commercial omnidirectional wideband monopole antenna to transmit the signals. The VSG is connected to the antenna through 2 SMA cables with 1.9 dB wire loss each. Here, commercial UEs could not be used because it is not easy to extract the actual transmitted information, i.e., ground truth labels for the UCI transmissions made by the UE. Also, the dynamic nature of the allocations made by the L2 scheduler makes it difficult to capture the data at the gNB for that particular time duration.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 68,
                                            "key": "doc/body/sec3/sub2/ssb2/txl1",
                                            "block type": "txl",
                                            "content": "A multichannel 5G Remote Radio Head (RRH) with a dualpolarized antenna at the gNB receives the signals from over the air (for the purpose of the paper, we utilize only one antenna and one transceiver chain). The RRH operates in the n78 band with 100 MHz bandwidth. It is ORANcompliant and follows the 7.2b split as defined in. Other receiver components of the RRH include an inhouse Low Noise Amplifier (LNA) with 60dB gain at the receiver front end and an ADRV 9009 RF transceiver. We place the transmitter antenna one meter away from the receiver. The PUCCH Format 0 signal is transmitted from the VSG through an antenna, over the air, and then received at the RRH antenna, followed by the LNA and the transceiver. The signal out of the 16bit ADC is then collected and used for testing.",
                                            "leftover": "A multichannel 5G Remote Radio Head (RRH) with a dualpolarized antenna at the gNB receives the signals from over the air (for the purpose of the paper, we utilize only one antenna and one transceiver chain). The RRH operates in the n78 band with 100 MHz bandwidth. It is ORANcompliant and follows the 7.2b split as defined in. Other receiver components of the RRH include an inhouse Low Noise Amplifier (LNA) with 60dB gain at the receiver front end and an ADRV 9009 RF transceiver. We place the transmitter antenna one meter away from the receiver. The PUCCH Format 0 signal is transmitted from the VSG through an antenna, over the air, and then received at the RRH antenna, followed by the LNA and the transceiver. The signal out of the 16bit ADC is then collected and used for testing.",
                                            "matches": []
                                        },
                                        {
                                            "key": "doc/body/sec3/sub2/ssb2/figure2",
                                            "block_type": "figure",
                                            "children": [
                                                {
                                                    "leaf id": 69,
                                                    "key": "doc/body/sec3/sub2/ssb2/figure2/cpt0",
                                                    "block type": "cpt",
                                                    "content": "IITMadras 5G testbed setup with the Remote Radio Head used as a receiver (gNB) and the VSG used as a transmitter (Emulated UE).",
                                                    "leftover": "IITMadras 5G testbed setup with the Remote Radio Head used as a receiver (gNB) and the VSG used as a transmitter (Emulated UE).",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec3/sub2/ssb2/figure*3",
                                            "block_type": "figure*",
                                            "children": [
                                                {
                                                    "leaf id": 70,
                                                    "key": "doc/body/sec3/sub2/ssb2/figure*3/cpt0",
                                                    "block type": "cpt",
                                                    "content": "UCINet0 Architecture for PUCCH Format 0 decoding with 25 neurons in the input layer, 512 neurons in each of the three hidden layers and 12 neurons in the output layer.",
                                                    "leftover": "UCINet0 Architecture for PUCCH Format 0 decoding with 25 neurons in the input layer, 512 neurons in each of the three hidden layers and 12 neurons in the output layer.",
                                                    "matches": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec3/sub3",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 71,
                                    "key": "doc/body/sec3/sub3/tit",
                                    "block type": "title",
                                    "content": "Neural Network Architecture",
                                    "leftover": "Neural Network Architecture",
                                    "matches": []
                                },
                                {
                                    "leaf id": 72,
                                    "key": "doc/body/sec3/sub3/txl0",
                                    "block type": "txl",
                                    "content": "Given a problem statement, there is no formula for knowing apriori, the best neural network architecture. For most problems, initial architectures are determined based on prior experience and domain knowledge. These architectures are then tuned by experiment. Figure shows the UCINet0 architecture that showed the best performance in our experiments. In subsequent sections, we also comment on the tradeoff between high complexity and performance.",
                                    "leftover": "Given a problem statement, there is no formula for knowing apriori, the best neural network architecture. For most problems, initial architectures are determined based on prior experience and domain knowledge. These architectures are then tuned by experiment. Figure shows the UCINet0 architecture that showed the best performance in our experiments. In subsequent sections, we also comment on the tradeoff between high complexity and performance.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec3/sub3/ssb1",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 73,
                                            "key": "doc/body/sec3/sub3/ssb1/tit",
                                            "block type": "title",
                                            "content": "Neural Network Structure",
                                            "leftover": "Neural Network Structure",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 74,
                                            "key": "doc/body/sec3/sub3/ssb1/txl0",
                                            "block type": "txl",
                                            "content": "The input to the NN has two components. The first is the received PUCCH Format 0 signal, and the second is metadata indicating the number of multiplexed UEs that the receiver expects. Since the PUCCH Format 0 signals occupy a single Resource Block, there are 12 received complex samples. We separate the real and imaginary parts of each complex number and concatenate them, resulting in a length 24 real sequence. As shown in Eq., a given PUCCH resource block at the receiver could contain the sum of signals from multiple UEs. To aid the neural network, we also feed the number of multiplexed UEs as a 25th metadata input. The number of multiplexed UEs that a receiver should expect to see is often provided by an L2 scheduler as an upper bound, meaning that the received signal could contain less than or equal to the number of UEs indicated by L2. We denote the difference between the actual number of UEs multiplexed and the number of UEs indicated by L2 as Δ. One example of a scenario where this is observed is when the L2 scheduler allocates multiple UEs to transmit SR, but not all of the UEs have any data to transmit. In such cases, UEs that do not require PUSCH resources do not transmit the SR.",
                                            "leftover": "The input to the NN has two components. The first is the received PUCCH Format 0 signal, and the second is metadata indicating the number of multiplexed UEs that the receiver expects. Since the PUCCH Format 0 signals occupy a single Resource Block, there are 12 received complex samples. We separate the real and imaginary parts of each complex number and concatenate them, resulting in a length 24 real sequence. As shown in Eq., a given PUCCH resource block at the receiver could contain the sum of signals from multiple UEs. To aid the neural network, we also feed the number of multiplexed UEs as a 25th metadata input. The number of multiplexed UEs that a receiver should expect to see is often provided by an L2 scheduler as an upper bound, meaning that the received signal could contain less than or equal to the number of UEs indicated by L2. We denote the difference between the actual number of UEs multiplexed and the number of UEs indicated by L2 as Δ. One example of a scenario where this is observed is when the L2 scheduler allocates multiple UEs to transmit SR, but not all of the UEs have any data to transmit. In such cases, UEs that do not require PUSCH resources do not transmit the SR.",
                                            "matches": []
                                        },
                                        {
                                            "key": "doc/body/sec3/sub3/ssb1/figure1",
                                            "block_type": "figure",
                                            "children": [
                                                {
                                                    "leaf id": 75,
                                                    "key": "doc/body/sec3/sub3/ssb1/figure1/cpt0",
                                                    "block type": "cpt",
                                                    "content": "Model accuracy for different FCN architectures at various values of Δ. Here, Δ represents the maximum metadata offset between the true value and L2's upper bound for the number of multiplexed UEs. We use these results to arrive at the final UCINet0 architecture presented in this paper.",
                                                    "leftover": "Model accuracy for different FCN architectures at various values of Δ. Here, Δ represents the maximum metadata offset between the true value and L2's upper bound for the number of multiplexed UEs. We use these results to arrive at the final UCINet0 architecture presented in this paper.",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 76,
                                            "key": "doc/body/sec3/sub3/ssb1/txl2",
                                            "block type": "txl",
                                            "content": "Owing to the relatively small dimension of the input, our proposed UCINet0 is a Fully Connected Neural Network (FCN). As shown in Figure, there are 3 dense layers, each containing 512 neurons. The output layer contains twelve neurons. Each output neuron acts as an indicator for the transmission of the base sequence which is cyclically shifted by αm. We arrived at the final UCINet0 architecture of 3 layers and 512 neurons after having evaluated the performance of other architectures with a varying number of layers and neurons. Figure shows the UCI decoding accuracies(defined in IV) obtained with 20 variations of FCN architectures. We considered combinations of 1, 2, 3 and 4 layer models with 64, 128, 256, 512 and 1024 neurons.",
                                            "leftover": "Owing to the relatively small dimension of the input, our proposed UCINet0 is a Fully Connected Neural Network (FCN). As shown in Figure, there are 3 dense layers, each containing 512 neurons. The output layer contains twelve neurons. Each output neuron acts as an indicator for the transmission of the base sequence which is cyclically shifted by αm. We arrived at the final UCINet0 architecture of 3 layers and 512 neurons after having evaluated the performance of other architectures with a varying number of layers and neurons. Figure shows the UCI decoding accuracies(defined in IV) obtained with 20 variations of FCN architectures. We considered combinations of 1, 2, 3 and 4 layer models with 64, 128, 256, 512 and 1024 neurons.",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 77,
                                            "key": "doc/body/sec3/sub3/ssb1/txl3",
                                            "block type": "txl",
                                            "content": "From Figure, we observe the following:",
                                            "leftover": "From Figure, we observe the following:",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 78,
                                            "key": "doc/body/sec3/sub3/ssb1/itemize4",
                                            "block type": "itemize",
                                            "content": "Model performance generally improves as we increase the number of neurons from 64 to 1024 for any number of layers and for values all of Δ. For Δ=0, both 1024 and 512 neurons result in almost the same accuracy values for a given number of layers. For example, 2 layers × 1024 and 2 layers × 512 result in similar accuracy values. For higher values of Δ, the accuracy drops as the number of layers increases beyond a certain value as the model begins to overfit. For Δ=4 and 1024 neurons, the accuracy drops beyond 2 layers, whereas for 512 neurons, the accuracy drops beyond 3 layers.",
                                            "leftover": "Model performance generally improves as we increase the number of neurons from 64 to 1024 for any number of layers and for values all of Δ. For Δ=0, both 1024 and 512 neurons result in almost the same accuracy values for a given number of layers. For example, 2 layers × 1024 and 2 layers × 512 result in similar accuracy values. For higher values of Δ, the accuracy drops as the number of layers increases beyond a certain value as the model begins to overfit. For Δ=4 and 1024 neurons, the accuracy drops beyond 2 layers, whereas for 512 neurons, the accuracy drops beyond 3 layers.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec3/sub3/ssb2",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 79,
                                            "key": "doc/body/sec3/sub3/ssb2/tit",
                                            "block type": "title",
                                            "content": "Dropout",
                                            "leftover": "Dropout",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 80,
                                            "key": "doc/body/sec3/sub3/ssb2/txl0",
                                            "block type": "txl",
                                            "content": "Dropout is used during training to ''drop out'' or cut off certain neurons and their connections randomly with a certain probability during training. It serves two purposes  Ensemble Learning and Regularization. Ensemble learning helps improve predictive performance by combining the outputs of multiple AI/ML models or multiple instances of the same AI/ML model trained on different subsets of data. However, training a large number of models is extremely prohibitive both in terms of time and computational resources. With dropout, in each backward pass, only a subset of weights are updated, effectively resulting in a new neural network. The subset of weights that are updated varies with each forward and backward pass, thus creating the combined effect of training several neural networks without the significant computational overhead. Dropout also has a regularizing effect on training in that it makes training noisy and, as a result, doesn't allow neurons to coadapt. This means that neurons in one layer will learn not to depend on or compensate for other neurons because these very neurons may randomly be dropped out. This encourages neurons to become more independent, thus preventing overfitting. All the models described in this paper use dropout with a probability of 0.5 in each of the hidden layers.",
                                            "leftover": "Dropout is used during training to ''drop out'' or cut off certain neurons and their connections randomly with a certain probability during training. It serves two purposes  Ensemble Learning and Regularization. Ensemble learning helps improve predictive performance by combining the outputs of multiple AI/ML models or multiple instances of the same AI/ML model trained on different subsets of data. However, training a large number of models is extremely prohibitive both in terms of time and computational resources. With dropout, in each backward pass, only a subset of weights are updated, effectively resulting in a new neural network. The subset of weights that are updated varies with each forward and backward pass, thus creating the combined effect of training several neural networks without the significant computational overhead. Dropout also has a regularizing effect on training in that it makes training noisy and, as a result, doesn't allow neurons to coadapt. This means that neurons in one layer will learn not to depend on or compensate for other neurons because these very neurons may randomly be dropped out. This encourages neurons to become more independent, thus preventing overfitting. All the models described in this paper use dropout with a probability of 0.5 in each of the hidden layers.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec3/sub3/ssb3",
                                    "block_type": "ssb",
                                    "children": [
                                        {
                                            "leaf id": 81,
                                            "key": "doc/body/sec3/sub3/ssb3/tit",
                                            "block type": "title",
                                            "content": "Activations and Backpropagation",
                                            "leftover": "Activations and Backpropagation",
                                            "matches": []
                                        },
                                        {
                                            "leaf id": 82,
                                            "key": "doc/body/sec3/sub3/ssb3/txl0",
                                            "block type": "txl",
                                            "content": "The hidden layers use a ReLU activation function, and the output layer uses a Sigmoid activation function. The use of the sigmoid activation function is motivated by the fact that in a multilabel classifier, the sum of all the output probabilities need not be 1. Each individual output neuron can be thought to be a part of an independent binary classifier. In other words, since each output neuron corresponds to an α value, the probabilities of each output neuron indicate the confidence with which the NN detects the presence of a certain UE with a certain α value. The output probabilities are used to compute a binary cross entropy loss that is backpropagated using Stochastic Gradient Descent (SGD) with a learning rate of 10^2 and a momentum parameter of 0.9.",
                                            "leftover": "The hidden layers use a ReLU activation function, and the output layer uses a Sigmoid activation function. The use of the sigmoid activation function is motivated by the fact that in a multilabel classifier, the sum of all the output probabilities need not be 1. Each individual output neuron can be thought to be a part of an independent binary classifier. In other words, since each output neuron corresponds to an α value, the probabilities of each output neuron indicate the confidence with which the NN detects the presence of a certain UE with a certain α value. The output probabilities are used to compute a binary cross entropy loss that is backpropagated using Stochastic Gradient Descent (SGD) with a learning rate of 10^2 and a momentum parameter of 0.9.",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec3/sub4",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 83,
                                    "key": "doc/body/sec3/sub4/tit",
                                    "block type": "title",
                                    "content": "Training and Testing",
                                    "leftover": "Training and Testing",
                                    "matches": []
                                },
                                {
                                    "leaf id": 84,
                                    "key": "doc/body/sec3/sub4/txl0",
                                    "block type": "txl",
                                    "content": "We consider received signal data corresponding to 5 SNR values i.e., 0, 5, 10, 15, 20 dB. The training instances are designed such that they encompass all the possible cases of multiplexed UEs including the cases where no UEs are transmitting. During training, we assume that the metadata input always holds the correct number of UEs present in the signal. Furthermore, based on the insights gained from our previous work, we train the neural network only using data with a middle SNR of 10dB, rather than all the SNRs. We have found that this model achieves good generalization across the entire range of SNR during inference/testing. 75% of the data is used for training from which a further 30% is used for validation and finetuning of hyperparameters. We train the model for 150 epochs(an epoch is 1 pass of the entire dataset through the neural network). The training and testing was done using Python and TensorFlow. The code is available at for download.",
                                    "leftover": "We consider received signal data corresponding to 5 SNR values i.e., 0, 5, 10, 15, 20 dB. The training instances are designed such that they encompass all the possible cases of multiplexed UEs including the cases where no UEs are transmitting. During training, we assume that the metadata input always holds the correct number of UEs present in the signal. Furthermore, based on the insights gained from our previous work, we train the neural network only using data with a middle SNR of 10dB, rather than all the SNRs. We have found that this model achieves good generalization across the entire range of SNR during inference/testing. 75% of the data is used for training from which a further 30% is used for validation and finetuning of hyperparameters. We train the model for 150 epochs(an epoch is 1 pass of the entire dataset through the neural network). The training and testing was done using Python and TensorFlow. The code is available at for download.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 85,
                                    "key": "doc/body/sec3/sub4/txl1",
                                    "block type": "txl",
                                    "content": "In the inference phase, we test the model using data from all SNRs. We also incorporate the fact that the number of multiplexed UEs in a realtime deployment may not be exactly known. The L2 scheduler in a gNB merely provides a value for the upper bound of the number of UEs a receiver could possibly expect in a given PUCCH allocation. This is usually a consequence of one of the following scenarios:",
                                    "leftover": "In the inference phase, we test the model using data from all SNRs. We also incorporate the fact that the number of multiplexed UEs in a realtime deployment may not be exactly known. The L2 scheduler in a gNB merely provides a value for the upper bound of the number of UEs a receiver could possibly expect in a given PUCCH allocation. This is usually a consequence of one of the following scenarios:",
                                    "matches": []
                                },
                                {
                                    "leaf id": 86,
                                    "key": "doc/body/sec3/sub4/itemize2",
                                    "block type": "itemize",
                                    "content": "A UE does not transmit any SR if no uplink grants are required because of lack of data into buffer A UE does not transmit feedback (on HARQ resources) if the prior downlink message is not detected.",
                                    "leftover": "A UE does not transmit any SR if no uplink grants are required because of lack of data into buffer A UE does not transmit feedback (on HARQ resources) if the prior downlink message is not detected.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 87,
                                    "key": "doc/body/sec3/sub4/txl3",
                                    "block type": "txl",
                                    "content": "During testing, we feed this upper bound value as the metadata input to the neural network, which is offset from the true value. To test the robustness of the trained model, we consider various cases of the maximum metadata offset Δ between the true value and L2's upper bound for the number of multiplexed UEs. For example, Δ = 0 indicates that the number of UEs provided as the metadata input to the NN matches the number of UEs actually transmitting in the given allocation. Δ = 2 indicates that for each test instance, the number of UEs provided as the metadata input to the NN could be offset by any value between 0 and 2 with 0 being the best case (no offset) and 2 being the worst. In this paper, we show results for Δ = 0, 2, 4.",
                                    "leftover": "During testing, we feed this upper bound value as the metadata input to the neural network, which is offset from the true value. To test the robustness of the trained model, we consider various cases of the maximum metadata offset Δ between the true value and L2's upper bound for the number of multiplexed UEs. For example, Δ = 0 indicates that the number of UEs provided as the metadata input to the NN matches the number of UEs actually transmitting in the given allocation. Δ = 2 indicates that for each test instance, the number of UEs provided as the metadata input to the NN could be offset by any value between 0 and 2 with 0 being the best case (no offset) and 2 being the worst. In this paper, we show results for Δ = 0, 2, 4.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 88,
                                    "key": "doc/body/sec3/sub4/txl4",
                                    "block type": "txl",
                                    "content": "Eq. shows the offset added to the true value of the number of multiplexed UEs, NUE to obtain NUE which is the expected number of multiplexed UE at the receiver, as indicated by L2.",
                                    "leftover": "Eq. shows the offset added to the true value of the number of multiplexed UEs, NUE to obtain NUE which is the expected number of multiplexed UE at the receiver, as indicated by L2.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 89,
                                    "key": "doc/body/sec3/sub4/equation5",
                                    "block type": "equation",
                                    "content": "NUE ∈[NUE, NUE + Δ]",
                                    "leftover": "NUE ∈[NUE, NUE + Δ]",
                                    "matches": []
                                },
                                {
                                    "leaf id": 90,
                                    "key": "doc/body/sec3/sub4/txl6",
                                    "block type": "txl",
                                    "content": "Note that since the maximum number of UEs that can be multiplexed in a given resource block is 12, the value of NUE is chosen accordingly.",
                                    "leftover": "Note that since the maximum number of UEs that can be multiplexed in a given resource block is 12, the value of NUE is chosen accordingly.",
                                    "matches": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "key": "doc/body/sec4",
                    "block_type": "sec",
                    "children": [
                        {
                            "leaf id": 91,
                            "key": "doc/body/sec4/tit",
                            "block type": "title",
                            "content": "Results and Discussion",
                            "leftover": "Results and Discussion",
                            "matches": []
                        },
                        {
                            "leaf id": 92,
                            "key": "doc/body/sec4/txl0",
                            "block type": "txl",
                            "content": "In this section, we describe the performance results of the UCINet0 Neural Network configuration shown in Figure.",
                            "leftover": "In this section, we describe the performance results of the UCINet0 Neural Network configuration shown in Figure.",
                            "matches": []
                        },
                        {
                            "key": "doc/body/sec4/sub1",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 93,
                                    "key": "doc/body/sec4/sub1/tit",
                                    "block type": "title",
                                    "content": "Performace Metrics and their Motivation",
                                    "leftover": "Performace Metrics and their Motivation",
                                    "matches": []
                                },
                                {
                                    "leaf id": 94,
                                    "key": "doc/body/sec4/sub1/txl0",
                                    "block type": "txl",
                                    "content": "We use model test accuracy as the main performance metric. We also show confusion matrices to indicate the distribution of model predictions. Wherever appropriate, we show comparisons of the model performance with the corresponding performance shown by the DFT algorithm.",
                                    "leftover": "We use model test accuracy as the main performance metric. We also show confusion matrices to indicate the distribution of model predictions. Wherever appropriate, we show comparisons of the model performance with the corresponding performance shown by the DFT algorithm.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 95,
                                    "key": "doc/body/sec4/sub1/txl1",
                                    "block type": "txl",
                                    "content": "Accuracy is simply the number of correct predictions in relation to total predictions. Though it is a useful highlevel metric to gauge model performance, in cases where the classes in a dataset are unequally distributed or when, as is the case in this paper, there are more than 2 classes, accuracy alone as a metric for an NN classifier does not offer the full picture of model performance. It is helpful to know if the model classifies all classes equally well or if it is more ''confused'' by certain classes compared to others. Hence, calculating a confusion matrix gives a better insight into any patterns that may exist in both correct and wrong classifications made by the model. In this paper, we show 3 types of confusion matrices: (1) A multilabel confusion matrix that shows how well each α is predicted; (2) A confusion matrix showing how well the model predicts the correct number of multiplexed UEs, and (3) A confusion matrix showing how each value of α (including the cases when no α is selected) is classified. We present this last metric in the form of a column chart for ease of visualization. These 3 types of confusion matrices provide a sense of interpretability of the inner workings of the NN model.",
                                    "leftover": "Accuracy is simply the number of correct predictions in relation to total predictions. Though it is a useful highlevel metric to gauge model performance, in cases where the classes in a dataset are unequally distributed or when, as is the case in this paper, there are more than 2 classes, accuracy alone as a metric for an NN classifier does not offer the full picture of model performance. It is helpful to know if the model classifies all classes equally well or if it is more ''confused'' by certain classes compared to others. Hence, calculating a confusion matrix gives a better insight into any patterns that may exist in both correct and wrong classifications made by the model. In this paper, we show 3 types of confusion matrices: (1) A multilabel confusion matrix that shows how well each α is predicted; (2) A confusion matrix showing how well the model predicts the correct number of multiplexed UEs, and (3) A confusion matrix showing how each value of α (including the cases when no α is selected) is classified. We present this last metric in the form of a column chart for ease of visualization. These 3 types of confusion matrices provide a sense of interpretability of the inner workings of the NN model.",
                                    "matches": []
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec4/sub2",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 96,
                                    "key": "doc/body/sec4/sub2/tit",
                                    "block type": "title",
                                    "content": "Accuracy and Loss",
                                    "leftover": "Accuracy and Loss",
                                    "matches": []
                                },
                                {
                                    "leaf id": 97,
                                    "key": "doc/body/sec4/sub2/txl0",
                                    "block type": "txl",
                                    "content": "Figure shows the training and validation accuracy with respect to the training epochs. Figure shows the training and validation loss. Both curves follow the expected pattern for a wellfit model. The accuracy/loss gradually increases/decreases with epoch and eventually converges. We also note that the validation accuracy and loss values are slightly better than the corresponding training values. One possible explanation for this could be the use of dropout. As stated above, a dropout with probability 0.5 drops neurons 50 of the time during training. However, during validation and testing, the entire model is used, leading to a higher accuracy/lower loss.",
                                    "leftover": "Figure shows the training and validation accuracy with respect to the training epochs. Figure shows the training and validation loss. Both curves follow the expected pattern for a wellfit model. The accuracy/loss gradually increases/decreases with epoch and eventually converges. We also note that the validation accuracy and loss values are slightly better than the corresponding training values. One possible explanation for this could be the use of dropout. As stated above, a dropout with probability 0.5 drops neurons 50 of the time during training. However, during validation and testing, the entire model is used, leading to a higher accuracy/lower loss.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec4/sub2/figure1",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub2/figure1/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 98,
                                                    "key": "doc/body/sec4/sub2/figure1/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/AccuracyFCN3512sim1638kfadingSNR10dBslots13muxue0123456789101112.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/AccuracyFCN3512sim1638kfadingSNR10dBslots13muxue0123456789101112.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 99,
                                                    "key": "doc/body/sec4/sub2/figure1/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub2/figure1/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 100,
                                                    "key": "doc/body/sec4/sub2/figure1/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/LossFCN3512sim1638kfadingSNR10dBslots13muxue0123456789101112.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/LossFCN3512sim1638kfadingSNR10dBslots13muxue0123456789101112.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 101,
                                                    "key": "doc/body/sec4/sub2/figure1/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 102,
                                            "key": "doc/body/sec4/sub2/figure1/cpt2",
                                            "block type": "cpt",
                                            "content": "Training was performed only using simulated data at SNR = 10 dB. (a) Model Accuracy vs. Epoch for simulated data. (b) Model Loss vs. Epoch for simulated data.",
                                            "leftover": "Training was performed only using simulated data at SNR = 10 dB. (a) Model Accuracy vs. Epoch for simulated data. (b) Model Loss vs. Epoch for simulated data.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "leaf id": 103,
                                    "key": "doc/body/sec4/sub2/txl2",
                                    "block type": "txl",
                                    "content": "Figure shows the test accuracy of the model versus SNR for simulated data. Figure shows the test accuracy of the model versus SNR for hardwarecaptured data. In both cases, the test dataset for each SNR contains a combination of all possible values of NUE = 0, 1, 2, …, 12. Both Figures and show that model accuracy increases with SNR. For the simulated data, the model significantly outperforms the DFT algorithm for all values of Δ.",
                                    "leftover": "Figure shows the test accuracy of the model versus SNR for simulated data. Figure shows the test accuracy of the model versus SNR for hardwarecaptured data. In both cases, the test dataset for each SNR contains a combination of all possible values of NUE = 0, 1, 2, …, 12. Both Figures and show that model accuracy increases with SNR. For the simulated data, the model significantly outperforms the DFT algorithm for all values of Δ.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 104,
                                    "key": "doc/body/sec4/sub2/txl3",
                                    "block type": "txl",
                                    "content": "For the hardware captured data, when Δ = 0, the model performs slightly better than the DFT algorithm. But as the SNR increases, the accuracies of the model and that of the DFT algorithm converge. This is because Δ = 0 constitutes a bestcase scenario in which both algorithms are aided by the fact that the receiver knows exactly how many UEs are multiplexed. At higher values of Δ, the convergence is not seen, and the NN model shows a significant gain compared to the DFT algorithm.",
                                    "leftover": "For the hardware captured data, when Δ = 0, the model performs slightly better than the DFT algorithm. But as the SNR increases, the accuracies of the model and that of the DFT algorithm converge. This is because Δ = 0 constitutes a bestcase scenario in which both algorithms are aided by the fact that the receiver knows exactly how many UEs are multiplexed. At higher values of Δ, the convergence is not seen, and the NN model shows a significant gain compared to the DFT algorithm.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 105,
                                    "key": "doc/body/sec4/sub2/txl4",
                                    "block type": "txl",
                                    "content": "Furthermore, from Figures and, we observe an interesting difference between the performance of the neural network with simulated data versus hardware captured data. For all values of Δ, there is a significant SNR gain with the hardware data compared to simulated data. For example, when Δ = 0, the accuracy with hardware captured data reaches 100% at as low an SNR as 5 dB. In contrast, the accuracy with simulated data requires more than 15dB SNR to reach 100%. This difference could be attributed to the characteristics of the datasets themselves. The simulated dataset includes a strong fading component that impairs the transmitted signal. However, owing to the short propagation distance, such a strong fading component is absent in the current 5G testbed setup that was used to obtain the hardware captures. We note that the captures still incorporate other realworld impairments caused by frontend hardware elements like filters, DACs, ADCs, up/down converters, and amplifiers. In summary, the hardware dataset models impairments due to frontend elements well. It also models overtheair impairments but does not encapsulate all characteristics of a typical communication link between a gNB and UE that might span hundreds of meters. On the other hand, the simulated data models overtheair characteristics well but it doesn't model impairments due to hardware elements. We also point out that the IIT Madras 5G Testbed is moving towards deployment of Remote Radio Heads at oncampus sites which will allow the inclusion of even more realistic field data into future work.",
                                    "leftover": "Furthermore, from Figures and, we observe an interesting difference between the performance of the neural network with simulated data versus hardware captured data. For all values of Δ, there is a significant SNR gain with the hardware data compared to simulated data. For example, when Δ = 0, the accuracy with hardware captured data reaches 100% at as low an SNR as 5 dB. In contrast, the accuracy with simulated data requires more than 15dB SNR to reach 100%. This difference could be attributed to the characteristics of the datasets themselves. The simulated dataset includes a strong fading component that impairs the transmitted signal. However, owing to the short propagation distance, such a strong fading component is absent in the current 5G testbed setup that was used to obtain the hardware captures. We note that the captures still incorporate other realworld impairments caused by frontend hardware elements like filters, DACs, ADCs, up/down converters, and amplifiers. In summary, the hardware dataset models impairments due to frontend elements well. It also models overtheair impairments but does not encapsulate all characteristics of a typical communication link between a gNB and UE that might span hundreds of meters. On the other hand, the simulated data models overtheair characteristics well but it doesn't model impairments due to hardware elements. We also point out that the IIT Madras 5G Testbed is moving towards deployment of Remote Radio Heads at oncampus sites which will allow the inclusion of even more realistic field data into future work.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 106,
                                    "key": "doc/body/sec4/sub2/txl5",
                                    "block type": "txl",
                                    "content": "Another observation from Figures and is that the DFT algorithm performs worse on hardware data, showing that it is negatively affected not only by impairments from hardware elements but also by even the slightest overtheair fading. On the other hand, the NN Model outperforms the DFT method in all scenarios of hardware and simulated datasets.",
                                    "leftover": "Another observation from Figures and is that the DFT algorithm performs worse on hardware data, showing that it is negatively affected not only by impairments from hardware elements but also by even the slightest overtheair fading. On the other hand, the NN Model outperforms the DFT method in all scenarios of hardware and simulated datasets.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 107,
                                    "key": "doc/body/sec4/sub2/txl6",
                                    "block type": "txl",
                                    "content": "Figure shows the test accuracy of the NN model versus the number of multiplexed UEs (NUE) for simulated data. Figure shows the test accuracy of the NN model versus the number of multiplexed UEs (NUE) for hardwarecaptured data. In both cases, the test dataset for each NUE contains a combination of all possible values of SNR = 0, 5, 10, 15, 20 dB. It is clear that the accuracy decreases as the maximum offset Δ increases. Note that no value is plotted when NUE = 0 and Δ=0 since this case corresponds to the scenario in which no UEs are transmitting on a given Resource Block and the receiver knows apriori that no UEs are scheduled as well. In this case, the receiver need not even run. When NUE = 12, all the multiplexed UEs transmit only Scheduling Requests (SR). For both the simulated and hardware datasets, the DFT algorithm selects all 12 values from the 12point DFT and assigns one value to each UE. Since all UEs are transmitting SRs, the order of assignment doesn't matter, and hence the accuracy is always 100%. The NN model also seems to recognize that the only scenario in which 12 UEs can be multiplexed is when they all transmit exactly the same information, i.e., SRs.",
                                    "leftover": "Figure shows the test accuracy of the NN model versus the number of multiplexed UEs (NUE) for simulated data. Figure shows the test accuracy of the NN model versus the number of multiplexed UEs (NUE) for hardwarecaptured data. In both cases, the test dataset for each NUE contains a combination of all possible values of SNR = 0, 5, 10, 15, 20 dB. It is clear that the accuracy decreases as the maximum offset Δ increases. Note that no value is plotted when NUE = 0 and Δ=0 since this case corresponds to the scenario in which no UEs are transmitting on a given Resource Block and the receiver knows apriori that no UEs are scheduled as well. In this case, the receiver need not even run. When NUE = 12, all the multiplexed UEs transmit only Scheduling Requests (SR). For both the simulated and hardware datasets, the DFT algorithm selects all 12 values from the 12point DFT and assigns one value to each UE. Since all UEs are transmitting SRs, the order of assignment doesn't matter, and hence the accuracy is always 100%. The NN model also seems to recognize that the only scenario in which 12 UEs can be multiplexed is when they all transmit exactly the same information, i.e., SRs.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 108,
                                    "key": "doc/body/sec4/sub2/txl7",
                                    "block type": "txl",
                                    "content": "Lower values of NUE tend to result in lower accuracy values. This is because the DFT algorithm picks up the top NUE values of the 12point DFT, and the probability of a true value lying in one of the 12NUE locations increases as NUE decreases. We observe a similar pattern in the case of decoding with the proposed UCINet0 as well.",
                                    "leftover": "Lower values of NUE tend to result in lower accuracy values. This is because the DFT algorithm picks up the top NUE values of the 12point DFT, and the probability of a true value lying in one of the 12NUE locations increases as NUE decreases. We observe a similar pattern in the case of decoding with the proposed UCINet0 as well.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec4/sub2/figure8",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub2/figure8/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 109,
                                                    "key": "doc/body/sec4/sub2/figure8/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/AccvsSNRFCN35121638ktrainsimtestsiminsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/AccvsSNRFCN35121638ktrainsimtestsiminsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 110,
                                                    "key": "doc/body/sec4/sub2/figure8/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub2/figure8/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 111,
                                                    "key": "doc/body/sec4/sub2/figure8/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/AccvsSNRFCN35121638ktrainsimtesthwinsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/AccvsSNRFCN35121638ktrainsimtesthwinsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 112,
                                                    "key": "doc/body/sec4/sub2/figure8/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 113,
                                            "key": "doc/body/sec4/sub2/figure8/cpt2",
                                            "block type": "cpt",
                                            "content": "Testing Accuracy vs SNR for (a) simulated data and (b) hardware captured data. The test dataset for each SNR contains a combination of NUE = 0, 1, 2, …, 12.",
                                            "leftover": "Testing Accuracy vs SNR for (a) simulated data and (b) hardware captured data. The test dataset for each SNR contains a combination of NUE = 0, 1, 2, …, 12.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec4/sub2/figure9",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub2/figure9/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 114,
                                                    "key": "doc/body/sec4/sub2/figure9/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/AccvsUEFCN35121638ktrainsimtestsiminsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/AccvsUEFCN35121638ktrainsimtestsiminsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 115,
                                                    "key": "doc/body/sec4/sub2/figure9/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub2/figure9/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 116,
                                                    "key": "doc/body/sec4/sub2/figure9/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/AccvsUEFCN35121638ktrainsimtesthwinsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/AccvsUEFCN35121638ktrainsimtesthwinsz253layers512512512nnsoutsz12fadingSNR10dBslots13muxue012epochs150.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 117,
                                                    "key": "doc/body/sec4/sub2/figure9/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 118,
                                            "key": "doc/body/sec4/sub2/figure9/cpt2",
                                            "block type": "cpt",
                                            "content": "Testing Accuracy vs Number of Multiplexed UEs (NUE) for (a) simulated data and (b) hardware captured data. The test dataset for each value of NUE contains a combination of SNR = 0, 5, 10, 15, 20 dB.",
                                            "leftover": "Testing Accuracy vs Number of Multiplexed UEs (NUE) for (a) simulated data and (b) hardware captured data. The test dataset for each value of NUE contains a combination of SNR = 0, 5, 10, 15, 20 dB.",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec4/sub3",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 119,
                                    "key": "doc/body/sec4/sub3/tit",
                                    "block type": "title",
                                    "content": "Confusion Matrices and Column Charts",
                                    "leftover": "Confusion Matrices and Column Charts",
                                    "matches": []
                                },
                                {
                                    "leaf id": 120,
                                    "key": "doc/body/sec4/sub3/txl0",
                                    "block type": "txl",
                                    "content": "The confusion matrices in Figures and indicate the overall multilabel classification performance of the model. Figures and show the multilabel confusion matrix for the best (Δ = 0) and worst (Δ = 4) cases of 20dB SNR respectively, for both simulated data and hardwarecaptured data. Multilabel classification can be thought of as a combination of several independent binary classifiers. Diagonally dominant confusion matrices indicate that each of the binary classifiers is welltrained. For a given SNR, as Δ increases, the model leans more towards false positives because the model (whose 25th input is NUE∈ [NUE, NUE + Δ]) is trying to predict NUE number of UEs. The value of Δ is always positive, meaning that the number of expected UEs, as indicated by L2, is always greater than or equal to the actual number of UEs transmitting on a given resource allocation. Hence, the model almost always overpredicts.",
                                    "leftover": "The confusion matrices in Figures and indicate the overall multilabel classification performance of the model. Figures and show the multilabel confusion matrix for the best (Δ = 0) and worst (Δ = 4) cases of 20dB SNR respectively, for both simulated data and hardwarecaptured data. Multilabel classification can be thought of as a combination of several independent binary classifiers. Diagonally dominant confusion matrices indicate that each of the binary classifiers is welltrained. For a given SNR, as Δ increases, the model leans more towards false positives because the model (whose 25th input is NUE∈ [NUE, NUE + Δ]) is trying to predict NUE number of UEs. The value of Δ is always positive, meaning that the number of expected UEs, as indicated by L2, is always greater than or equal to the actual number of UEs transmitting on a given resource allocation. Hence, the model almost always overpredicts.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure1",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure1/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 121,
                                                    "key": "doc/body/sec4/sub3/figure1/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff0trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff0trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 122,
                                                    "key": "doc/body/sec4/sub3/figure1/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure1/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 123,
                                                    "key": "doc/body/sec4/sub3/figure1/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff0trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff0trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 124,
                                                    "key": "doc/body/sec4/sub3/figure1/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 125,
                                            "key": "doc/body/sec4/sub3/figure1/cpt2",
                                            "block type": "cpt",
                                            "content": "Multilabel confusion matrix at SNR = 20 dB and Δ = 0 for (a) simulated test dataset and (b) hardware captured test dataset. Here, α represents the UCI specific cyclic shift.",
                                            "leftover": "Multilabel confusion matrix at SNR = 20 dB and Δ = 0 for (a) simulated test dataset and (b) hardware captured test dataset. Here, α represents the UCI specific cyclic shift.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure2",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure2/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 126,
                                                    "key": "doc/body/sec4/sub3/figure2/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff4trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff4trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 127,
                                                    "key": "doc/body/sec4/sub3/figure2/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure2/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 128,
                                                    "key": "doc/body/sec4/sub3/figure2/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff4trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxmultilabelSNR20dBMaxoff4trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 129,
                                                    "key": "doc/body/sec4/sub3/figure2/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 130,
                                            "key": "doc/body/sec4/sub3/figure2/cpt2",
                                            "block type": "cpt",
                                            "content": "Multilabel confusion matrix at SNR = 20 dB and Δ = 4 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "leftover": "Multilabel confusion matrix at SNR = 20 dB and Δ = 4 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "leaf id": 131,
                                    "key": "doc/body/sec4/sub3/txl3",
                                    "block type": "txl",
                                    "content": "However, it should be noted that the multilabel confusion matrix does not show the exact details of misclassifications. To gain a deeper understanding of the mistakes made by the model, consider the matrices in Figures to. For each instance of the received PUCCH signal, there are two characteristics to correct classification. The first characteristic is correctly identifying the number of multiplexed UEs (NUE) embedded in the signal. Even though this is not an explicit output of the NN model, we believe that the model is learning to estimate the number of multiplexed UEs. Our belief is based on the fact that when the number of possible multiplexed UEs is not given as metadata to NN input, the accuracy drops significantly. The second characteristic of correct classification is derived from the explicit output of the NN model, which is the correct prediction of the value of α for each of the multiplexed UEs.",
                                    "leftover": "However, it should be noted that the multilabel confusion matrix does not show the exact details of misclassifications. To gain a deeper understanding of the mistakes made by the model, consider the matrices in Figures to. For each instance of the received PUCCH signal, there are two characteristics to correct classification. The first characteristic is correctly identifying the number of multiplexed UEs (NUE) embedded in the signal. Even though this is not an explicit output of the NN model, we believe that the model is learning to estimate the number of multiplexed UEs. Our belief is based on the fact that when the number of possible multiplexed UEs is not given as metadata to NN input, the accuracy drops significantly. The second characteristic of correct classification is derived from the explicit output of the NN model, which is the correct prediction of the value of α for each of the multiplexed UEs.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 132,
                                    "key": "doc/body/sec4/sub3/txl4",
                                    "block type": "txl",
                                    "content": "Figures and show confusion matrices for the number of multiplexed UEs for both simulated data and hardwarecaptured data at an SNR of 0 dB and Δ values of 0 and 4 respectively. Figures and confusion matrices for the number of multiplexed UEs for both simulated data and hardwarecaptured data at an SNR of 20 dB and Δ values of 0 and 4 respectively. We notice that all the confusion matrices for the prediction of the number of multiplexed UEs are largely diagonally dominant. Furthermore, for any SNR, when Δ = 0, the error in the predicted number of UEs fluctuates between +1 and 1 in the majority of instances, confirming the high accuracy values in Figure. As Δ increases, the error tends to grow on the positive side, meaning that the NN model predicts more UEs than actually present. As stated above, the overprediction is because Δ is always positive.",
                                    "leftover": "Figures and show confusion matrices for the number of multiplexed UEs for both simulated data and hardwarecaptured data at an SNR of 0 dB and Δ values of 0 and 4 respectively. Figures and confusion matrices for the number of multiplexed UEs for both simulated data and hardwarecaptured data at an SNR of 20 dB and Δ values of 0 and 4 respectively. We notice that all the confusion matrices for the prediction of the number of multiplexed UEs are largely diagonally dominant. Furthermore, for any SNR, when Δ = 0, the error in the predicted number of UEs fluctuates between +1 and 1 in the majority of instances, confirming the high accuracy values in Figure. As Δ increases, the error tends to grow on the positive side, meaning that the NN model predicts more UEs than actually present. As stated above, the overprediction is because Δ is always positive.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure5",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure5/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 133,
                                                    "key": "doc/body/sec4/sub3/figure5/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff0trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff0trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 134,
                                                    "key": "doc/body/sec4/sub3/figure5/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure5/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 135,
                                                    "key": "doc/body/sec4/sub3/figure5/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff0trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff0trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 136,
                                                    "key": "doc/body/sec4/sub3/figure5/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 137,
                                            "key": "doc/body/sec4/sub3/figure5/cpt2",
                                            "block type": "cpt",
                                            "content": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 0 dB and Δ = 0 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "leftover": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 0 dB and Δ = 0 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure6",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure6/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 138,
                                                    "key": "doc/body/sec4/sub3/figure6/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff4trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff4trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 139,
                                                    "key": "doc/body/sec4/sub3/figure6/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure6/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 140,
                                                    "key": "doc/body/sec4/sub3/figure6/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff4trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR0dBMaxoff4trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 141,
                                                    "key": "doc/body/sec4/sub3/figure6/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 142,
                                            "key": "doc/body/sec4/sub3/figure6/cpt2",
                                            "block type": "cpt",
                                            "content": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 0 dB and Δ = 4 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "leftover": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 0 dB and Δ = 4 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure7",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure7/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 143,
                                                    "key": "doc/body/sec4/sub3/figure7/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff0trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff0trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 144,
                                                    "key": "doc/body/sec4/sub3/figure7/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure7/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 145,
                                                    "key": "doc/body/sec4/sub3/figure7/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff0trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff0trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 146,
                                                    "key": "doc/body/sec4/sub3/figure7/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 147,
                                            "key": "doc/body/sec4/sub3/figure7/cpt2",
                                            "block type": "cpt",
                                            "content": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 20 dB and Δ = 0 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "leftover": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 20 dB and Δ = 0 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure8",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure8/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 148,
                                                    "key": "doc/body/sec4/sub3/figure8/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff4trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff4trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 149,
                                                    "key": "doc/body/sec4/sub3/figure8/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure8/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 150,
                                                    "key": "doc/body/sec4/sub3/figure8/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff4trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/ConfmtxnumUEsSNR20dBMaxoff4trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 151,
                                                    "key": "doc/body/sec4/sub3/figure8/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 152,
                                            "key": "doc/body/sec4/sub3/figure8/cpt2",
                                            "block type": "cpt",
                                            "content": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 20 dB and Δ = 4 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "leftover": "Confusion matrix for the number of multiplexed UEs NUE, at SNR = 20 dB and Δ = 4 for (a) simulated test dataset and (b) hardware captured test dataset.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "leaf id": 153,
                                    "key": "doc/body/sec4/sub3/txl9",
                                    "block type": "txl",
                                    "content": "The column charts in Figure and Figure show the percentage of correct and incorrect predictions for the transmission of every α from 0 through 11. The result of the NN model's prediction for the scenario where a particular α has not been transmitted by any UE is also captured in the last column labeled No Tx. Correct prediction in the last column indicates that the model was able to correctly identify the nontransmission of a particular α value, and incorrect detection determines the instances where a particular α has not been transmitted but incorrectly predicted.",
                                    "leftover": "The column charts in Figure and Figure show the percentage of correct and incorrect predictions for the transmission of every α from 0 through 11. The result of the NN model's prediction for the scenario where a particular α has not been transmitted by any UE is also captured in the last column labeled No Tx. Correct prediction in the last column indicates that the model was able to correctly identify the nontransmission of a particular α value, and incorrect detection determines the instances where a particular α has not been transmitted but incorrectly predicted.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 154,
                                    "key": "doc/body/sec4/sub3/txl10",
                                    "block type": "txl",
                                    "content": "From Figure and Figure, it is evident that the NN model is not biased towards any particular α and the cyclic shifts are correctly identified in the majority of instances.",
                                    "leftover": "From Figure and Figure, it is evident that the NN model is not biased towards any particular α and the cyclic shifts are correctly identified in the majority of instances.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure11",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure11/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 155,
                                                    "key": "doc/body/sec4/sub3/figure11/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR0dBMaxoff4trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR0dBMaxoff4trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 156,
                                                    "key": "doc/body/sec4/sub3/figure11/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure11/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 157,
                                                    "key": "doc/body/sec4/sub3/figure11/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR0dBMaxoff4trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR0dBMaxoff4trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 158,
                                                    "key": "doc/body/sec4/sub3/figure11/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 159,
                                            "key": "doc/body/sec4/sub3/figure11/cpt2",
                                            "block type": "cpt",
                                            "content": "Bar graph for the cyclic shift α at SNR = 0 dB, Δ = 4, and with NUE = 0, 1, 2, …, 12 for (a) simulated test dataset and (b) hardware captured dataset.",
                                            "leftover": "Bar graph for the cyclic shift α at SNR = 0 dB, Δ = 4, and with NUE = 0, 1, 2, …, 12 for (a) simulated test dataset and (b) hardware captured dataset.",
                                            "matches": []
                                        }
                                    ]
                                },
                                {
                                    "key": "doc/body/sec4/sub3/figure12",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "key": "doc/body/sec4/sub3/figure12/subfigure0",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 160,
                                                    "key": "doc/body/sec4/sub3/figure12/subfigure0/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR20dBMaxoff4trainsimtestsim.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR20dBMaxoff4trainsimtestsim.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 161,
                                                    "key": "doc/body/sec4/sub3/figure12/subfigure0/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "key": "doc/body/sec4/sub3/figure12/subfigure1",
                                            "block_type": "subfigure",
                                            "children": [
                                                {
                                                    "leaf id": 162,
                                                    "key": "doc/body/sec4/sub3/figure12/subfigure1/txl0",
                                                    "block type": "txl",
                                                    "content": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR20dBMaxoff4trainsimtesthw.png}",
                                                    "leftover": "{0.48} \\includegraphics[width=]{Figures/BaralphaSNRSNR20dBMaxoff4trainsimtesthw.png}",
                                                    "matches": []
                                                },
                                                {
                                                    "leaf id": 163,
                                                    "key": "doc/body/sec4/sub3/figure12/subfigure1/cpt1",
                                                    "block type": "cpt",
                                                    "content": "",
                                                    "leftover": "",
                                                    "matches": []
                                                }
                                            ]
                                        },
                                        {
                                            "leaf id": 164,
                                            "key": "doc/body/sec4/sub3/figure12/cpt2",
                                            "block type": "cpt",
                                            "content": "Bar graph for the cyclic shift α at SNR = 20 dB, Δ = 4, and with NUE = 0, 1, 2, …, 12 for (a) simulated test dataset and (b) hardware captured dataset.",
                                            "leftover": "Bar graph for the cyclic shift α at SNR = 20 dB, Δ = 4, and with NUE = 0, 1, 2, …, 12 for (a) simulated test dataset and (b) hardware captured dataset.",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec4/sub4",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 165,
                                    "key": "doc/body/sec4/sub4/tit",
                                    "block type": "title",
                                    "content": "Implications of Model Performance on a 5G System",
                                    "leftover": "Implications of Model Performance on a 5G System",
                                    "matches": []
                                },
                                {
                                    "leaf id": 166,
                                    "key": "doc/body/sec4/sub4/txl0",
                                    "block type": "txl",
                                    "content": "In general, both false detections and missed detections are detrimental to PUCCH Format 0 performance. However, from the context of sustaining a communication link between a gNB and a UE, a small number of false detections are more tolerable than missed detections. For example, when a gNB falsely detects a Scheduling Request, it allocates a small uplink bandwidth to the UE. Since the UE does not have any valid data to transmit, it would populate the uplink packet with padding information and indicate its lack of data in the Buffer Status Report (BSR). No further uplink grants will be allocated to the UE.",
                                    "leftover": "In general, both false detections and missed detections are detrimental to PUCCH Format 0 performance. However, from the context of sustaining a communication link between a gNB and a UE, a small number of false detections are more tolerable than missed detections. For example, when a gNB falsely detects a Scheduling Request, it allocates a small uplink bandwidth to the UE. Since the UE does not have any valid data to transmit, it would populate the uplink packet with padding information and indicate its lack of data in the Buffer Status Report (BSR). No further uplink grants will be allocated to the UE.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 167,
                                    "key": "doc/body/sec4/sub4/txl1",
                                    "block type": "txl",
                                    "content": "On the other hand, if a gNB misses the detection of an ACK, it will assume that the prior downlink transmission was not decoded by the UE. In this scenario, a significant downlink bandwidth will be allocated to the UE for the retransmission. Successive missed detection of ACKs will lead to the termination of the radio link (referred to as Radio Link Failure) between the gNB and the UE.",
                                    "leftover": "On the other hand, if a gNB misses the detection of an ACK, it will assume that the prior downlink transmission was not decoded by the UE. In this scenario, a significant downlink bandwidth will be allocated to the UE for the retransmission. Successive missed detection of ACKs will lead to the termination of the radio link (referred to as Radio Link Failure) between the gNB and the UE.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 168,
                                    "key": "doc/body/sec4/sub4/txl2",
                                    "block type": "txl",
                                    "content": "Hence, occupying a small uplink bandwidth (due to false detection of an SR) is preferable to occupying a large downlink bandwidth (due to missed detection of ACKs) since recovery from a Radio Link Failure (RLF) involves heavy signaling for the UE to reattach.",
                                    "leftover": "Hence, occupying a small uplink bandwidth (due to false detection of an SR) is preferable to occupying a large downlink bandwidth (due to missed detection of ACKs) since recovery from a Radio Link Failure (RLF) involves heavy signaling for the UE to reattach.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 169,
                                    "key": "doc/body/sec4/sub4/txl3",
                                    "block type": "txl",
                                    "content": "As shown in Figures, and, at low SNRs or high Δ values, the proposed UCINet0 tends to overpredict the number of UEs actually present, rather than underpredict. This shows that the model, even when it makes a wrong prediction, is good at avoiding scenarios leading to RLFs.",
                                    "leftover": "As shown in Figures, and, at low SNRs or high Δ values, the proposed UCINet0 tends to overpredict the number of UEs actually present, rather than underpredict. This shows that the model, even when it makes a wrong prediction, is good at avoiding scenarios leading to RLFs.",
                                    "matches": []
                                }
                            ]
                        },
                        {
                            "key": "doc/body/sec4/sub5",
                            "block_type": "sub",
                            "children": [
                                {
                                    "leaf id": 170,
                                    "key": "doc/body/sec4/sub5/tit",
                                    "block type": "title",
                                    "content": "Model Complexity Analysis",
                                    "leftover": "Model Complexity Analysis",
                                    "matches": []
                                },
                                {
                                    "leaf id": 171,
                                    "key": "doc/body/sec4/sub5/txl0",
                                    "block type": "txl",
                                    "content": "Figure shows the number of trainable parameters for different FCN architectures. The number of trainable parameters increases with the number of layers and neurons. An increase in the number of trainable parameters leads directly to an increase in the latency incurred due to fetching the weights from memory and neural network computations. Current 5G systems function with fundamental time units on the order of hundreds of microseconds. To cater to this requirement, the processing of all the physical layer channels allocated to each user must be completed in a duration of the order of tens of microseconds. For example, in our 5G Testbed, we use a subcarrier spacing of 30kHz, which translates to a slot duration of 500μ s. Hence, the physical layer processing of all the users allocated in that slot needs to be completed within this time frame. If 10 PUCCH Format 0 instances are allocated in an uplink slot, each of them should be processed in no more than 50μ s. This time constraint also applies to AI/MLbased approaches such as neural networks. Hence, FPGAs are a promising choice for hardware implementation of such timeconstrained neural networks.",
                                    "leftover": "Figure shows the number of trainable parameters for different FCN architectures. The number of trainable parameters increases with the number of layers and neurons. An increase in the number of trainable parameters leads directly to an increase in the latency incurred due to fetching the weights from memory and neural network computations. Current 5G systems function with fundamental time units on the order of hundreds of microseconds. To cater to this requirement, the processing of all the physical layer channels allocated to each user must be completed in a duration of the order of tens of microseconds. For example, in our 5G Testbed, we use a subcarrier spacing of 30kHz, which translates to a slot duration of 500μ s. Hence, the physical layer processing of all the users allocated in that slot needs to be completed within this time frame. If 10 PUCCH Format 0 instances are allocated in an uplink slot, each of them should be processed in no more than 50μ s. This time constraint also applies to AI/MLbased approaches such as neural networks. Hence, FPGAs are a promising choice for hardware implementation of such timeconstrained neural networks.",
                                    "matches": []
                                },
                                {
                                    "leaf id": 172,
                                    "key": "doc/body/sec4/sub5/txl1",
                                    "block type": "txl",
                                    "content": "In order to deploy a version of UCINet0 on hardware devices such as FPGAs, the tradeoffs between model performance (Figure) and model complexity (Figure) must be considered. These two parameters help us choose the bestsuited model based on the available memory and compute resources on the hardware. The memory and bandwidth requirements for storing and retrieving the weights of Neural Networks like UCINet0 can be met by Xilinx's latest Versal series FPGAs, which contain AI engines to perform matrix multiplications efficiently.",
                                    "leftover": "In order to deploy a version of UCINet0 on hardware devices such as FPGAs, the tradeoffs between model performance (Figure) and model complexity (Figure) must be considered. These two parameters help us choose the bestsuited model based on the available memory and compute resources on the hardware. The memory and bandwidth requirements for storing and retrieving the weights of Neural Networks like UCINet0 can be met by Xilinx's latest Versal series FPGAs, which contain AI engines to perform matrix multiplications efficiently.",
                                    "matches": []
                                },
                                {
                                    "key": "doc/body/sec4/sub5/figure2",
                                    "block_type": "figure",
                                    "children": [
                                        {
                                            "leaf id": 173,
                                            "key": "doc/body/sec4/sub5/figure2/cpt0",
                                            "block type": "cpt",
                                            "content": "Line graph showing the number of trainable parameters for different FCN architectures. These parameters increase with the number of layers and neurons.",
                                            "leftover": "Line graph showing the number of trainable parameters for different FCN architectures. These parameters increase with the number of layers and neurons.",
                                            "matches": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "key": "doc/body/sec5",
                    "block_type": "sec",
                    "children": [
                        {
                            "leaf id": 174,
                            "key": "doc/body/sec5/tit",
                            "block type": "title",
                            "content": "Conclusion",
                            "leftover": "Conclusion",
                            "matches": []
                        },
                        {
                            "leaf id": 175,
                            "key": "doc/body/sec5/txl0",
                            "block type": "txl",
                            "content": "In this paper, we have designed a generalized Machine Learning based PUCCH Format 0 receiver that decodes all the combinations of UCI bits across several multiplexed users. The proposed UCINet0 model is a multilabel classifier that showed superior performance compared to conventional correlationbased approaches by a significant margin. The inclusion of field datasets in the testing of the model ensures robustness and the ability of the network to work in a wide range of scenarios. In addition to standard AI/ML metrics like accuracy, we have also provided insights into the interpretability of the NN model through confusion matrices and column charts of detection percentages of individual classes.",
                            "leftover": "In this paper, we have designed a generalized Machine Learning based PUCCH Format 0 receiver that decodes all the combinations of UCI bits across several multiplexed users. The proposed UCINet0 model is a multilabel classifier that showed superior performance compared to conventional correlationbased approaches by a significant margin. The inclusion of field datasets in the testing of the model ensures robustness and the ability of the network to work in a wide range of scenarios. In addition to standard AI/ML metrics like accuracy, we have also provided insights into the interpretability of the NN model through confusion matrices and column charts of detection percentages of individual classes.",
                            "matches": []
                        }
                    ]
                },
                {
                    "key": "doc/body/sec6",
                    "block_type": "sec",
                    "children": [
                        {
                            "leaf id": 176,
                            "key": "doc/body/sec6/tit",
                            "block type": "title",
                            "content": "Acknowledgment",
                            "leftover": "Acknowledgment",
                            "matches": []
                        },
                        {
                            "leaf id": 177,
                            "key": "doc/body/sec6/txl0",
                            "block type": "txl",
                            "content": "The authors would like to thank the Department of Telecommunications (DOT), India for funding the 5G Testbed project and the Ministry of Electronics and Information Technology (MeitY) for funding this work through the project ''Next Generation Wireless Research and Standardization on 5G and Beyond''. \\bibliographystyleIEEEtran \\bibliographybibfile \\newpage \\vfill\\pagebreak",
                            "leftover": "The authors would like to thank the Department of Telecommunications (DOT), India for funding the 5G Testbed project and the Ministry of Electronics and Information Technology (MeitY) for funding this work through the project ''Next Generation Wireless Research and Standardization on 5G and Beyond''. \\bibliographystyleIEEEtran \\bibliographybibfile \\newpage \\vfill\\pagebreak",
                            "matches": []
                        }
                    ]
                }
            ]
        },
        {
            "leaf id": 178,
            "key": "doc/bib0",
            "block type": "bibliography",
            "content": "C.~Johnson, {5G} New Radio in Bullets, 1st~ed. 1em plus 0.5em minus 0.4em\\relax Farnham, England: {SelfPublished}, 2019.",
            "leftover": "C.~Johnson, {5G} New Radio in Bullets, 1st~ed. 1em plus 0.5em minus 0.4em\\relax Farnham, England: {SelfPublished}, 2019.",
            "matches": []
        },
        {
            "leaf id": 179,
            "key": "doc/bib1",
            "block type": "bibliography",
            "content": "{3GPP}, ''Physical Channels and Modulation,'' {3rd Generation Partnership Project (3GPP)}, Technical Specification (TS) 38.211, 2021, version 16.5.0.",
            "leftover": "{3GPP}, ''Physical Channels and Modulation,'' {3rd Generation Partnership Project (3GPP)}, Technical Specification (TS) 38.211, 2021, version 16.5.0.",
            "matches": []
        },
        {
            "leaf id": 180,
            "key": "doc/bib2",
            "block type": "bibliography",
            "content": "{3GPP\\vspace{0mm}}, ''Multiplexing and Channel Coding,'' {3rd Generation Partnership Project (3GPP)}, Technical Specification (TS) 38.212, 2021, version 16.5.0.",
            "leftover": "{3GPP\\vspace{0mm}}, ''Multiplexing and Channel Coding,'' {3rd Generation Partnership Project (3GPP)}, Technical Specification (TS) 38.212, 2021, version 16.5.0.",
            "matches": []
        },
        {
            "leaf id": 181,
            "key": "doc/bib3",
            "block type": "bibliography",
            "content": "{3GPP\\vspace{0.5mm}}, ''Physical Layer Procedures for Control,'' {3rd Generation Partnership Project (3GPP)}, Technical Specification (TS) 38.213, 2021, version 16.5.0.",
            "leftover": "{3GPP\\vspace{0.5mm}}, ''Physical Layer Procedures for Control,'' {3rd Generation Partnership Project (3GPP)}, Technical Specification (TS) 38.213, 2021, version 16.5.0.",
            "matches": []
        },
        {
            "leaf id": 182,
            "key": "doc/bib4",
            "block type": "bibliography",
            "content": "\\BIBentryALTinterwordspacing J.~Ryu. (2019) {5G/NR}  Initial Attach. Accessed: Oct 30, 2023. [Online]. Available: {https://www.sharetechnote.com/html/5G/5GCallProcessInitialAttach.html#SAInitialAttachOverallSignalingFlow} \\BIBentrySTDinterwordspacing",
            "leftover": "\\BIBentryALTinterwordspacing J.~Ryu. (2019) {5G/NR}  Initial Attach. Accessed: Oct 30, 2023. [Online]. Available: {https://www.sharetechnote.com/html/5G/5GCallProcessInitialAttach.html#SAInitialAttachOverallSignalingFlow} \\BIBentrySTDinterwordspacing",
            "matches": []
        },
        {
            "leaf id": 183,
            "key": "doc/bib5",
            "block type": "bibliography",
            "content": "A.~K. Yerrapragada, J.~K. Sattianarayanin, A.~Gautam, and R.~K. Ganti, ''Machine Learning Decoder for {5G} NR PUCCH Format 0,'' in 2023 National Conference on Communications (NCC), 2023, pp. 16.",
            "leftover": "A.~K. Yerrapragada, J.~K. Sattianarayanin, A.~Gautam, and R.~K. Ganti, ''Machine Learning Decoder for {5G} NR PUCCH Format 0,'' in 2023 National Conference on Communications (NCC), 2023, pp. 16.",
            "matches": []
        },
        {
            "leaf id": 184,
            "key": "doc/bib6",
            "block type": "bibliography",
            "content": "\\BIBentryALTinterwordspacing {IIT Madras}. (2019) {5G} Testbed IIT Madras. Accessed: Oct 30, 2023. [Online]. Available: {http://www.5gtbiitm.in/} \\BIBentrySTDinterwordspacing",
            "leftover": "\\BIBentryALTinterwordspacing {IIT Madras}. (2019) {5G} Testbed IIT Madras. Accessed: Oct 30, 2023. [Online]. Available: {http://www.5gtbiitm.in/} \\BIBentrySTDinterwordspacing",
            "matches": []
        },
        {
            "leaf id": 185,
            "key": "doc/bib7",
            "block type": "bibliography",
            "content": "L.~Kundu, G.~Xiong, and J.~Cho, ''Physical Uplink Control Channel Design for {5G} New Radio,'' in 2018 IEEE 5G World Forum (5GWF), 2018, pp. 233238.",
            "leftover": "L.~Kundu, G.~Xiong, and J.~Cho, ''Physical Uplink Control Channel Design for {5G} New Radio,'' in 2018 IEEE 5G World Forum (5GWF), 2018, pp. 233238.",
            "matches": []
        },
        {
            "leaf id": 186,
            "key": "doc/bib8",
            "block type": "bibliography",
            "content": "B.~Park, H.~Cheon, E.~Ko, C.~Kang, and D.~Hong, ''A blind OFDM synchronization algorithm based on cyclic correlation,'' IEEE Signal Processing Letters, vol.~11, no.~2, pp. 8385, 2004.",
            "leftover": "B.~Park, H.~Cheon, E.~Ko, C.~Kang, and D.~Hong, ''A blind OFDM synchronization algorithm based on cyclic correlation,'' IEEE Signal Processing Letters, vol.~11, no.~2, pp. 8385, 2004.",
            "matches": []
        },
        {
            "leaf id": 187,
            "key": "doc/bib9",
            "block type": "bibliography",
            "content": "S.~Ma, X.~Pan, G.H. Yang, and T.S. Ng, ''Blind Symbol Synchronization Based on Cyclic Prefix for OFDM Systems,'' IEEE Transactions on Vehicular Technology, vol.~58, no.~4, pp. 17461751, 2009.",
            "leftover": "S.~Ma, X.~Pan, G.H. Yang, and T.S. Ng, ''Blind Symbol Synchronization Based on Cyclic Prefix for OFDM Systems,'' IEEE Transactions on Vehicular Technology, vol.~58, no.~4, pp. 17461751, 2009.",
            "matches": []
        },
        {
            "leaf id": 188,
            "key": "doc/bib10",
            "block type": "bibliography",
            "content": "M.~Wahlqvist, R.~Larsson, and C.~Ostberg, ''Time synchronization in the uplink of an OFDM system,'' in Proceedings of Vehicular Technology ConferenceVTC, 1996.",
            "leftover": "M.~Wahlqvist, R.~Larsson, and C.~Ostberg, ''Time synchronization in the uplink of an OFDM system,'' in Proceedings of Vehicular Technology ConferenceVTC, 1996.",
            "matches": []
        },
        {
            "leaf id": 189,
            "key": "doc/bib11",
            "block type": "bibliography",
            "content": "Y.H. Kim, H.~Ju, C.~B. Jeong, and M.S. Lee, ''Performance comparison of DTX detection schemes for {5G NR PUCCH},'' in 2020 International Conference on Information and Communication Technology Convergence (ICTC), 2020, pp. 13911394.",
            "leftover": "Y.H. Kim, H.~Ju, C.~B. Jeong, and M.S. Lee, ''Performance comparison of DTX detection schemes for {5G NR PUCCH},'' in 2020 International Conference on Information and Communication Technology Convergence (ICTC), 2020, pp. 13911394.",
            "matches": []
        },
        {
            "leaf id": 190,
            "key": "doc/bib12",
            "block type": "bibliography",
            "content": "S.~Tadavarty and N.~K. Chaval, ''Performance Analysis of {5G NR} PUCCH Format 0 Receiver,'' in 2021 IEEE 18th India Council International Conference (INDICON), 2021, pp. 15.",
            "leftover": "S.~Tadavarty and N.~K. Chaval, ''Performance Analysis of {5G NR} PUCCH Format 0 Receiver,'' in 2021 IEEE 18th India Council International Conference (INDICON), 2021, pp. 15.",
            "matches": []
        },
        {
            "leaf id": 191,
            "key": "doc/bib13",
            "block type": "bibliography",
            "content": "D.~Phan and T.~H.~P. Nguyen, ''An Enhanced Method to Improve Signal Reception Performance for {5G NR} Physical Uplink Control Channel with Frequency Hopping Configuration,'' in 2021 International Conference on Advanced Technologies for Communications (ATC), 2021, pp. 1317.",
            "leftover": "D.~Phan and T.~H.~P. Nguyen, ''An Enhanced Method to Improve Signal Reception Performance for {5G NR} Physical Uplink Control Channel with Frequency Hopping Configuration,'' in 2021 International Conference on Advanced Technologies for Communications (ATC), 2021, pp. 1317.",
            "matches": []
        },
        {
            "leaf id": 192,
            "key": "doc/bib14",
            "block type": "bibliography",
            "content": "{3GPP\\vspace{0.4mm}}, ''Study on Artificial Intelligence (AI)/Machine Learning (ML) for NR Air Interface,'' {3rd Generation Partnership Project (3GPP)}, Technical Report (TR) 38.843, 2023, release 18.",
            "leftover": "{3GPP\\vspace{0.4mm}}, ''Study on Artificial Intelligence (AI)/Machine Learning (ML) for NR Air Interface,'' {3rd Generation Partnership Project (3GPP)}, Technical Report (TR) 38.843, 2023, release 18.",
            "matches": []
        },
        {
            "leaf id": 193,
            "key": "doc/bib15",
            "block type": "bibliography",
            "content": "{5G Testbed, IIT Madras}, ''{PUCCH Format 0 AI/ML Source Code and Datasets},'' {https://aifor6g.com/availableafterreview}, accessed: 07 Jan, 2024.",
            "leftover": "{5G Testbed, IIT Madras}, ''{PUCCH Format 0 AI/ML Source Code and Datasets},'' {https://aifor6g.com/availableafterreview}, accessed: 07 Jan, 2024.",
            "matches": []
        },
        {
            "leaf id": 194,
            "key": "doc/bib16",
            "block type": "bibliography",
            "content": "{Work Group}4, ''{ORAN} Working Group 4 (Open Fronthaul Interfaces WG) Control, User and Synchronization Plane Specification,'' Open RAN Alliance, Technical Specification (TS), 2022, version 11.00.",
            "leftover": "{Work Group}4, ''{ORAN} Working Group 4 (Open Fronthaul Interfaces WG) Control, User and Synchronization Plane Specification,'' Open RAN Alliance, Technical Specification (TS), 2022, version 11.00.",
            "matches": []
        },
        {
            "leaf id": 195,
            "key": "doc/bib17",
            "block type": "bibliography",
            "content": "N.~Srivastava, G.~Hinton, A.~Krizhevsky, I.~Sutskever, and R.~Salakhutdinov, ''Dropout: A Simple Way to Prevent Neural Networks from Overfitting,'' Journal of Machine Learning Research, vol.~15, no.~1, pp. 19291958, 2014.",
            "leftover": "N.~Srivastava, G.~Hinton, A.~Krizhevsky, I.~Sutskever, and R.~Salakhutdinov, ''Dropout: A Simple Way to Prevent Neural Networks from Overfitting,'' Journal of Machine Learning Research, vol.~15, no.~1, pp. 19291958, 2014.",
            "matches": []
        },
        {
            "leaf id": 196,
            "key": "doc/bib18",
            "block type": "bibliography",
            "content": "K.~Hara, D.~Saitoh, and H.~Shouno, ''Analysis of Dropout Learning Regarded as Ensemble Learning,'' in Artificial Neural Networks and Machine Learning – ICANN 2016, 2016, pp. 7279.",
            "leftover": "K.~Hara, D.~Saitoh, and H.~Shouno, ''Analysis of Dropout Learning Regarded as Ensemble Learning,'' in Artificial Neural Networks and Machine Learning – ICANN 2016, 2016, pp. 7279.",
            "matches": []
        },
        {
            "leaf id": 197,
            "key": "doc/bib19",
            "block type": "bibliography",
            "content": "I.~Goodfellow, Y.~Bengio, and A.~Courville, Deep Learning. 1em plus 0.5em minus 0.4em\\relax Cambridge, MA, USA: MIT Press, 2016, http://www.deeplearningbook.org.",
            "leftover": "I.~Goodfellow, Y.~Bengio, and A.~Courville, Deep Learning. 1em plus 0.5em minus 0.4em\\relax Cambridge, MA, USA: MIT Press, 2016, http://www.deeplearningbook.org.",
            "matches": []
        },
        {
            "leaf id": 198,
            "key": "doc/bib20",
            "block type": "bibliography",
            "content": "S.~Lin and J.~Yu, ''Happy Bits Based BSR Mechanism in {5G} Networks,'' IOP Conference Series: Materials Science and Engineering, vol. 466, no.~1, 2018.",
            "leftover": "S.~Lin and J.~Yu, ''Happy Bits Based BSR Mechanism in {5G} Networks,'' IOP Conference Series: Materials Science and Engineering, vol. 466, no.~1, 2018.",
            "matches": []
        },
        {
            "leaf id": 199,
            "key": "doc/bib21",
            "block type": "bibliography",
            "content": "M.~Wierse, ''Evaluation of Xilinx Versal Device,'' Bachelor Thesis, ETH Zurich, 2023.",
            "leftover": "M.~Wierse, ''Evaluation of Xilinx Versal Device,'' Bachelor Thesis, ETH Zurich, 2023.",
            "matches": []
        }
    ]
}