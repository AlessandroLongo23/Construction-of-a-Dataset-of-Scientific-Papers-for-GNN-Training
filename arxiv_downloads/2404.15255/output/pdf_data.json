[
    {
        "page": 0,
        "index": 0,
        "bbox": [
            16.34,
            570.84,
            36.34,
            580.84
        ],
        "prefix": "",
        "content": "4 ",
        "suffix": "2",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 1,
        "bbox": [
            16.34,
            560.84,
            36.34,
            570.84
        ],
        "prefix": "",
        "content": "2 ",
        "suffix": "0",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 2,
        "bbox": [
            16.34,
            550.84,
            36.34,
            560.84
        ],
        "prefix": "",
        "content": "0 ",
        "suffix": "2",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 3,
        "bbox": [
            16.34,
            540.84,
            36.34,
            550.84
        ],
        "prefix": "",
        "content": "2 ",
        "suffix": "0",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 4,
        "bbox": [
            16.34,
            529.1800000000001,
            36.34,
            535.84
        ],
        "prefix": "",
        "content": "r ",
        "suffix": "p",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 5,
        "bbox": [
            16.34,
            519.1800000000001,
            36.34,
            529.1800000000001
        ],
        "prefix": "",
        "content": "p ",
        "suffix": "A",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 6,
        "bbox": [
            16.34,
            504.74,
            36.34,
            519.1800000000001
        ],
        "prefix": "",
        "content": "A ",
        "suffix": "3",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 7,
        "bbox": [
            16.34,
            489.74,
            36.34,
            499.74
        ],
        "prefix": "",
        "content": "3 ",
        "suffix": "2",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 8,
        "bbox": [
            16.34,
            479.74,
            36.34,
            489.74
        ],
        "prefix": "",
        "content": "2 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                1.0,
                124,
                126
            ]
        ]
    },
    {
        "page": 0,
        "index": 9,
        "bbox": [
            16.34,
            463.08,
            36.34,
            469.74
        ],
        "prefix": "",
        "content": "] ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 10,
        "bbox": [
            16.34,
            448.64,
            36.34,
            463.08
        ],
        "prefix": "",
        "content": "G ",
        "suffix": "L",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 11,
        "bbox": [
            16.34,
            436.41999999999996,
            36.34,
            448.64
        ],
        "prefix": "",
        "content": "L ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 12,
        "bbox": [
            16.34,
            431.41999999999996,
            36.34,
            436.41999999999996
        ],
        "prefix": "",
        "content": ". ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                29,
                1.0,
                262,
                264
            ]
        ]
    },
    {
        "page": 0,
        "index": 13,
        "bbox": [
            16.34,
            423.64,
            36.34,
            431.41999999999996
        ],
        "prefix": "",
        "content": "s ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                158,
                160
            ]
        ]
    },
    {
        "page": 0,
        "index": 14,
        "bbox": [
            16.34,
            408.1,
            36.34,
            423.64
        ],
        "prefix": "",
        "content": "[c ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 15,
        "bbox": [
            16.34,
            388.1,
            36.34,
            398.1
        ],
        "prefix": "",
        "content": "1 ",
        "suffix": "v",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 16,
        "bbox": [
            16.34,
            378.1,
            36.34,
            388.1
        ],
        "prefix": "",
        "content": "v ",
        "suffix": "5",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 17,
        "bbox": [
            16.34,
            368.1,
            36.34,
            378.1
        ],
        "prefix": "",
        "content": "5 ",
        "suffix": "5",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 18,
        "bbox": [
            16.34,
            358.1,
            36.34,
            368.1
        ],
        "prefix": "",
        "content": "5 ",
        "suffix": "5",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 19,
        "bbox": [
            16.34,
            348.1,
            36.34,
            358.1
        ],
        "prefix": "",
        "content": "2 ",
        "suffix": "5",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 20,
        "bbox": [
            16.34,
            338.1,
            36.34,
            348.1
        ],
        "prefix": "",
        "content": "5 ",
        "suffix": "5",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 21,
        "bbox": [
            16.34,
            328.1,
            36.34,
            338.1
        ],
        "prefix": "",
        "content": "1 ",
        "suffix": "v",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 22,
        "bbox": [
            16.34,
            323.1,
            36.34,
            328.1
        ],
        "prefix": "",
        "content": ". ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                649,
                651
            ]
        ]
    },
    {
        "page": 0,
        "index": 23,
        "bbox": [
            16.34,
            313.1,
            36.34,
            323.1
        ],
        "prefix": "",
        "content": "4 ",
        "suffix": "0",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 24,
        "bbox": [
            16.34,
            303.1,
            36.34,
            313.1
        ],
        "prefix": "",
        "content": "0 ",
        "suffix": "4",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 25,
        "bbox": [
            16.34,
            293.1,
            36.34,
            303.1
        ],
        "prefix": "",
        "content": "4 ",
        "suffix": "0",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 26,
        "bbox": [
            16.34,
            283.1,
            36.34,
            293.1
        ],
        "prefix": "",
        "content": "2 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 27,
        "bbox": [
            16.34,
            277.54,
            36.34,
            283.1
        ],
        "prefix": "",
        "content": ": ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 28,
        "bbox": [
            16.34,
            267.54,
            36.34,
            277.54
        ],
        "prefix": "",
        "content": "v ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 29,
        "bbox": [
            16.34,
            261.98,
            36.34,
            267.54
        ],
        "prefix": "",
        "content": "i ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 30,
        "bbox": [
            16.34,
            247.54,
            36.34,
            261.98
        ],
        "prefix": "",
        "content": "X ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                1.0,
                147,
                149
            ]
        ]
    },
    {
        "page": 0,
        "index": 31,
        "bbox": [
            16.34,
            240.88,
            36.34,
            247.54
        ],
        "prefix": "",
        "content": "r ",
        "suffix": "a",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 32,
        "bbox": [
            16.34,
            232.0,
            36.34,
            240.88
        ],
        "prefix": "",
        "content": "a ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                1.0,
                112,
                114
            ]
        ]
    },
    {
        "page": 0,
        "index": 33,
        "bbox": [
            141.999,
            675.3549813999999,
            470.0040162,
            692.5703814
        ],
        "prefix": "",
        "content": "How to use and interpret activation patching ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                0,
                1.0,
                0,
                44
            ]
        ]
    },
    {
        "page": 0,
        "index": 34,
        "bbox": [
            172.691,
            610.0723028,
            319.10336212,
            620.0349027999999
        ],
        "prefix": "",
        "content": "stefan.heimersheim@gmail.com ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                1,
                1.0,
                21,
                50
            ]
        ]
    },
    {
        "page": 0,
        "index": 35,
        "bbox": [
            202.597,
            621.1108166,
            289.2018818,
            631.0734166
        ],
        "prefix": "",
        "content": "Stefan Heimersheim ",
        "suffix": "stefan.heimersheim@gmail.com",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                1,
                0.3333333333333333,
                2,
                21
            ]
        ]
    },
    {
        "page": 0,
        "index": 36,
        "bbox": [
            389.775,
            621.1108166,
            439.30904719999995,
            631.0734166
        ],
        "prefix": "",
        "content": "Neel Nanda ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                1,
                1.0,
                26,
                37
            ]
        ]
    },
    {
        "page": 0,
        "index": 37,
        "bbox": [
            143.507,
            545.5440784,
            468.1375239919999,
            555.5066784
        ],
        "prefix": "",
        "content": "Activation patching is a popular mechanistic interpretability technique, but has ",
        "suffix": "many",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                0,
                81
            ]
        ]
    },
    {
        "page": 0,
        "index": 38,
        "bbox": [
            143.866,
            534.6350784,
            469.87904395659984,
            544.5976784000001
        ],
        "prefix": "",
        "content": "many subtleties regarding how it is applied and how one may interpret the results. ",
        "suffix": "We",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                0.9333333333333333,
                0,
                83
            ]
        ]
    },
    {
        "page": 0,
        "index": 39,
        "bbox": [
            143.397,
            523.7260784,
            468.13479130619993,
            533.6886784000001
        ],
        "prefix": "",
        "content": "We provide a summary of advice and best practices, based on our experience using ",
        "suffix": "this",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                83,
                164
            ]
        ]
    },
    {
        "page": 0,
        "index": 40,
        "bbox": [
            143.866,
            512.8170784,
            468.4788403769999,
            522.7796784000001
        ],
        "prefix": "",
        "content": "this technique in practice. We include an overview of the different ways to apply ",
        "suffix": "activation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                83,
                165
            ]
        ]
    },
    {
        "page": 0,
        "index": 41,
        "bbox": [
            143.866,
            501.9080784,
            468.1388666519999,
            511.8706784
        ],
        "prefix": "",
        "content": "activation patching and a discussion on how to interpret the results. We focus on ",
        "suffix": "what",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                83,
                165
            ]
        ]
    },
    {
        "page": 0,
        "index": 42,
        "bbox": [
            143.507,
            490.99907840000003,
            468.12971331359995,
            500.9616784
        ],
        "prefix": "",
        "content": "what evidence patching experiments provide about circuits, and on the choice of ",
        "suffix": "metric",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                83,
                163
            ]
        ]
    },
    {
        "page": 0,
        "index": 43,
        "bbox": [
            143.866,
            480.09007840000004,
            262.1918002000001,
            490.0526784
        ],
        "prefix": "",
        "content": "metric and associated pitfalls. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                2,
                1.0,
                83,
                114
            ]
        ]
    },
    {
        "page": 0,
        "index": 44,
        "bbox": [
            283.758,
            568.6033632,
            328.24329919999997,
            580.5585632
        ],
        "prefix": "",
        "content": "Abstract ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 0,
        "index": 45,
        "bbox": [
            108.00000000000001,
            446.64836320000006,
            190.8136704,
            458.60356320000005
        ],
        "prefix": "",
        "content": "1 Introduction ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                3,
                0.5,
                0,
                12
            ]
        ]
    },
    {
        "page": 0,
        "index": 46,
        "bbox": [
            108.00000000000001,
            424.02581660000004,
            252.26841060000007,
            433.98841660000005
        ],
        "prefix": "",
        "content": "1.1 What is activation patching? ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                4,
                0.6666666666666666,
                0,
                28
            ]
        ]
    },
    {
        "page": 0,
        "index": 47,
        "bbox": [
            107.641,
            403.9800784,
            505.24358395199977,
            413.9426784
        ],
        "prefix": "",
        "content": "Activation patching (also referred to as Interchange Intervention, Causal Tracing, Resample Ablation, ",
        "suffix": "or",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.9285714285714286,
                0,
                102
            ]
        ]
    },
    {
        "page": 0,
        "index": 48,
        "bbox": [
            108.0,
            393.07107840000003,
            504.0033873999999,
            403.0336784
        ],
        "prefix": "",
        "content": "or Causal Mediation Analysis) is the technique of replacing internal activations of a neural net. It is ",
        "suffix": "also",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                1.0,
                102,
                206
            ]
        ]
    },
    {
        "page": 0,
        "index": 49,
        "bbox": [
            108.0,
            382.16207840000004,
            503.99721058799986,
            392.1246784
        ],
        "prefix": "",
        "content": "also known as Causal Tracing, Resample Ablation, Interchange Intervention or more generally as ",
        "suffix": "Causal",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                1.0,
                102,
                197
            ]
        ]
    },
    {
        "page": 0,
        "index": 50,
        "bbox": [
            108.0,
            371.2530784,
            504.00139487999957,
            381.2156784
        ],
        "prefix": "",
        "content": "Causal Mediation Analysis. Variants of this technique have been widely used in the literature (Vig ",
        "suffix": "et",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                0.8235294117647058,
                0,
                94
            ]
        ]
    },
    {
        "page": 0,
        "index": 51,
        "bbox": [
            108.0,
            360.3440784,
            503.99958168679956,
            370.3066784
        ],
        "prefix": "",
        "content": "et al., 2020; Geiger et al., 2021a; Geiger, Richardson, and Potts, 2020; Soulos et al., 2019; Finlayson ",
        "suffix": "et",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 52,
        "bbox": [
            108.0,
            349.4350784,
            505.2438606137999,
            359.3976784
        ],
        "prefix": "",
        "content": "et al., 2021; Geiger et al., 2021b; Meng et al., 2022; Wang et al., 2022; Chan et al., 2022; Hase et al., ",
        "suffix": "2023;",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 53,
        "bbox": [
            108.0,
            338.5260784,
            503.9989042299998,
            348.4886784
        ],
        "prefix": "",
        "content": "2023; Hanna, Liu, and Variengien, 2023; Conmy et al., 2023; Todd et al., 2023; Hendel, Geva, and ",
        "suffix": "Globerson,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 54,
        "bbox": [
            108.0,
            327.6170784,
            505.24520556479956,
            337.57967840000003
        ],
        "prefix": "",
        "content": "Globerson, 2023; Feng and Steinhardt, 2023; Lieberum et al., 2023; Cunningham et al., 2023; Stolfo, ",
        "suffix": "Belinkov,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 55,
        "bbox": [
            108.0,
            316.70807840000003,
            504.8300341349998,
            326.67067840000004
        ],
        "prefix": "",
        "content": "Belinkov, and Sachan, 2023; GoldowskyDill et al., 2023; McDougall et al., 2023; Geva et al., 2023; ",
        "suffix": "Huang",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 56,
        "bbox": [
            108.0,
            305.79907840000004,
            503.9978880448,
            315.76167840000005
        ],
        "prefix": "",
        "content": "Huang et al., 2023; Merullo, Eickhoff, and Pavlick, 2023; Tigges et al., 2023). Here we focus on the ",
        "suffix": "technique",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 0,
        "index": 57,
        "bbox": [
            108.0,
            294.8900784,
            503.99665268239977,
            304.85267839999995
        ],
        "prefix": "",
        "content": "technique where we overwrite some activations during a model run with cached activations from a ",
        "suffix": "previous",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                1.0,
                653,
                749
            ]
        ]
    },
    {
        "page": 0,
        "index": 58,
        "bbox": [
            108.0,
            283.9800784,
            440.2726351999999,
            293.9426784
        ],
        "prefix": "",
        "content": "previous run (on a different input), and observe how this affects the model's output. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                5,
                1.0,
                653,
                738
            ]
        ]
    },
    {
        "page": 0,
        "index": 59,
        "bbox": [
            108.0,
            259.66581659999997,
            262.6992528,
            269.6284166
        ],
        "prefix": "",
        "content": "1.2 How is this related to ablation? ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                6,
                0.75,
                0,
                32
            ]
        ]
    },
    {
        "page": 0,
        "index": 60,
        "bbox": [
            107.641,
            239.6210784,
            503.9959675539997,
            249.5836784
        ],
        "prefix": "",
        "content": "Ablation is the common technique of zeroing out activations. Activation patching is more targeted ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                0.9333333333333333,
                0,
                98
            ]
        ]
    },
    {
        "page": 0,
        "index": 61,
        "bbox": [
            108.0,
            228.7120784,
            503.9972105879998,
            238.6746784
        ],
        "prefix": "",
        "content": "and controlled: We replace activations with other activations rather than zeroing them out. This ",
        "suffix": "allows",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                1.0,
                98,
                195
            ]
        ]
    },
    {
        "page": 0,
        "index": 62,
        "bbox": [
            108.0,
            217.8030784,
            466.71337559999984,
            227.7656784
        ],
        "prefix": "",
        "content": "allows us to make targeted manipulations to locate specific model behaviours and circuits. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                7,
                1.0,
                98,
                188
            ]
        ]
    },
    {
        "page": 0,
        "index": 63,
        "bbox": [
            108.0,
            193.48881660000004,
            181.0557458,
            203.45141660000002
        ],
        "prefix": "",
        "content": "1.3 An example ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                8,
                0.5,
                0,
                10
            ]
        ]
    },
    {
        "page": 0,
        "index": 64,
        "bbox": [
            108.0,
            173.4440784,
            504.0016738327998,
            183.4066784
        ],
        "prefix": "",
        "content": "For example, let's say we want to know which model internals are responsible for factual recall in ",
        "suffix": "ROME",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 0,
        "index": 65,
        "bbox": [
            108.0,
            162.5350784,
            503.9980474463999,
            172.4976784
        ],
        "prefix": "",
        "content": "ROME (Meng et al., 2022). How does the model complete the prompt ''The Colosseum is in'' with ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.47888071902418927,
                0,
                83
            ]
        ]
    },
    {
        "page": 0,
        "index": 66,
        "bbox": [
            108.0,
            151.62607839999998,
            503.9995816867996,
            161.5886784
        ],
        "prefix": "",
        "content": "the answer ''Rome''? To answer this question we want to manipulate the model's activations. But the ",
        "suffix": "model",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                0.6914830409930531,
                83,
                179
            ]
        ]
    },
    {
        "page": 0,
        "index": 67,
        "bbox": [
            108.0,
            140.7170784,
            503.99721058799963,
            150.6796784
        ],
        "prefix": "",
        "content": "model activations contain many bits of information: This is an English sentence; The landmark in ",
        "suffix": "question",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                181,
                278
            ]
        ]
    },
    {
        "page": 0,
        "index": 68,
        "bbox": [
            108.0,
            129.8070784,
            390.16075720000003,
            139.7696784
        ],
        "prefix": "",
        "content": "question is the Colosseum; This is a factual statement about a location. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                9,
                1.0,
                181,
                253
            ]
        ]
    },
    {
        "page": 0,
        "index": 69,
        "bbox": [
            107.641,
            113.4190784,
            505.73989580000006,
            123.6108182
        ],
        "prefix": "",
        "content": "Ablating some activations will affect the model if these activations are relevant for any of these bits. ",
        "suffix": "But",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                1.0,
                0,
                105
            ]
        ]
    },
    {
        "page": 0,
        "index": 70,
        "bbox": [
            108.0,
            102.51007840000001,
            503.99940427440004,
            112.7018182
        ],
        "prefix": "",
        "content": "But activation patching allows us to choose which bit to change and control for the others. Patching ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.9444444444444444,
                0,
                101
            ]
        ]
    },
    {
        "page": 0,
        "index": 71,
        "bbox": [
            107.641,
            91.6010784,
            504.0040372599998,
            101.5636784
        ],
        "prefix": "",
        "content": "with activations from ''Il Colosseo è dentro'' locates where the model stores the language of the ",
        "suffix": "prompt",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.7881268474149513,
                101,
                197
            ]
        ]
    },
    {
        "page": 0,
        "index": 72,
        "bbox": [
            108.0,
            80.6920784,
            504.00139487999974,
            90.6546784
        ],
        "prefix": "",
        "content": "prompt but may use the same factual recall machinery. Patching with activations from ''The Louvre is ",
        "suffix": "in''",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.8088357600616549,
                101,
                201
            ]
        ]
    },
    {
        "page": 0,
        "index": 73,
        "bbox": [
            108.0,
            69.78307840000001,
            504.0013948799998,
            79.7456784
        ],
        "prefix": "",
        "content": "in'' locates which part of the model deals with the landmark and information recall. Patching between ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.8750127167730631,
                105,
                202
            ]
        ]
    },
    {
        "page": 1,
        "index": 0,
        "bbox": [
            106.675,
            707.8850784,
            504.0034131999999,
            717.8476784000001
        ],
        "prefix": "",
        "content": "''The Colosseum is in the city of'' and ''The Colosseum is in the country of'' locates the part of the ",
        "suffix": "model",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                0.6379528080707261,
                5,
                103
            ]
        ]
    },
    {
        "page": 1,
        "index": 1,
        "bbox": [
            108.0,
            696.9760784,
            361.0987518000001,
            707.1678182
        ],
        "prefix": "",
        "content": "model that determines which attributes of an entity are recalled. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                10,
                1.0,
                497,
                562
            ]
        ]
    },
    {
        "page": 1,
        "index": 2,
        "bbox": [
            107.641,
            680.5880784,
            362.7333730000001,
            690.5506784
        ],
        "prefix": "",
        "content": "A simple activation patching procedure typically looks like this: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                11,
                1.0,
                0,
                65
            ]
        ]
    },
    {
        "page": 1,
        "index": 3,
        "bbox": [
            131.412,
            659.8740783999999,
            504.0021843189999,
            669.8366784000001
        ],
        "prefix": "",
        "content": "1. Choose two similar prompts that differ in some key fact or otherwise elicit different model ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                12,
                0.9375,
                0,
                92
            ]
        ]
    },
    {
        "page": 1,
        "index": 4,
        "bbox": [
            143.866,
            648.9650783999999,
            186.27678820000003,
            658.9276784
        ],
        "prefix": "",
        "content": "behaviour: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                12,
                1.0,
                0,
                10
            ]
        ]
    },
    {
        "page": 1,
        "index": 5,
        "bbox": [
            163.791,
            633.3900784,
            504.0011175727998,
            643.3526784000001
        ],
        "prefix": "",
        "content": "E.g. ''The Colosseum is in'' and ''The Louvre is in'' to vary the landmark but control ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                0.5885827364440068,
                0,
                83
            ]
        ]
    },
    {
        "page": 1,
        "index": 6,
        "bbox": [
            131.412,
            606.9060784,
            307.46110460000006,
            616.8686784
        ],
        "prefix": "",
        "content": "2. Choose which model activations to patch ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 7,
        "bbox": [
            163.791,
            622.4810784,
            240.58272079999998,
            632.4436784000001
        ],
        "prefix": "",
        "content": "for everything else. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                13,
                1.0,
                83,
                103
            ]
        ]
    },
    {
        "page": 1,
        "index": 8,
        "bbox": [
            163.791,
            591.3320784,
            235.2427672,
            601.2946784000001
        ],
        "prefix": "",
        "content": "E.g. MLP outputs ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                14,
                1.0,
                0,
                16
            ]
        ]
    },
    {
        "page": 1,
        "index": 9,
        "bbox": [
            131.412,
            575.7570784,
            502.7579523999998,
            585.7196784
        ],
        "prefix": "",
        "content": "3. Run the model with the first prompt—the source prompt—and save its internal activations ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 10,
        "bbox": [
            163.791,
            560.1830784,
            293.03580980000004,
            570.1456784000001
        ],
        "prefix": "",
        "content": "E.g. ''The Louvre is in'' (source) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                15,
                0.5974410100884076,
                0,
                32
            ]
        ]
    },
    {
        "page": 1,
        "index": 11,
        "bbox": [
            131.412,
            544.6080784,
            504.00272229939986,
            554.5706784
        ],
        "prefix": "",
        "content": "4. Run the model with the second prompt—the destination prompt—but overwrite the selected ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 12,
        "bbox": [
            143.866,
            533.6990784,
            387.6508220000001,
            543.6616784
        ],
        "prefix": "",
        "content": "internal activations with the previously saved ones (patching) ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 13,
        "bbox": [
            163.79100000000003,
            518.1240783999999,
            326.2710434000001,
            528.0866784
        ],
        "prefix": "",
        "content": "E.g. ''The Colosseum is in'' (destination) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                16,
                0.5974410100884076,
                0,
                40
            ]
        ]
    },
    {
        "page": 1,
        "index": 14,
        "bbox": [
            131.41200000000003,
            502.55007839999996,
            504.347537848,
            512.5126784
        ],
        "prefix": "",
        "content": "5. See how the model output has changed. The outputs of this patched run are typically ",
        "suffix": "somewhere",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 15,
        "bbox": [
            143.866,
            491.6400784,
            504.00245330919984,
            501.60267839999995
        ],
        "prefix": "",
        "content": "somewhere between what the model would output for the unpatched first prompt or second ",
        "suffix": "prompt",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 16,
        "bbox": [
            143.866,
            480.7310784,
            172.6479514,
            490.69367839999995
        ],
        "prefix": "",
        "content": "prompt ",
        "suffix": "or",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 17,
        "bbox": [
            163.79100000000003,
            465.1570784,
            417.76756180000007,
            475.1196784
        ],
        "prefix": "",
        "content": "E.g. observe change in the output logits for \"Paris\" and \"Rome\" ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                17,
                1.0,
                0,
                63
            ]
        ]
    },
    {
        "page": 1,
        "index": 18,
        "bbox": [
            131.41200000000003,
            449.5820784,
            285.8621878000001,
            459.54467839999995
        ],
        "prefix": "",
        "content": "6. Repeat for all activations of interest ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 1,
        "index": 19,
        "bbox": [
            163.79100000000003,
            434.0070784,
            296.1042906,
            443.9696784
        ],
        "prefix": "",
        "content": "E.g. sweep to test all MLP layers ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                18,
                1.0,
                0,
                33
            ]
        ]
    },
    {
        "page": 1,
        "index": 20,
        "bbox": [
            108.00000000000003,
            408.85381659999996,
            252.74661540000008,
            418.81641659999997
        ],
        "prefix": "",
        "content": "1.4 What is this document about ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                19,
                0.7142857142857143,
                0,
                27
            ]
        ]
    },
    {
        "page": 1,
        "index": 21,
        "bbox": [
            107.532,
            388.5020784,
            504.00203558399977,
            398.4646784
        ],
        "prefix": "",
        "content": "We want to communicate useful practical advice for activation patching, and warn of common pitfalls ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                20,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 1,
        "index": 22,
        "bbox": [
            108.0,
            377.5930784,
            294.15118100000007,
            387.55567840000003
        ],
        "prefix": "",
        "content": "to avoid. We focus on three areas in particular: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                20,
                1.0,
                0,
                48
            ]
        ]
    },
    {
        "page": 1,
        "index": 23,
        "bbox": [
            131.412,
            356.8790784,
            432.5813980000001,
            366.8416784
        ],
        "prefix": "",
        "content": "1. What kind of patching experiments provide which evidence? (Section 2) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                21,
                0.8333333333333334,
                0,
                67
            ]
        ]
    },
    {
        "page": 1,
        "index": 24,
        "bbox": [
            131.412,
            341.3050784,
            403.81937180000006,
            351.2676784
        ],
        "prefix": "",
        "content": "2. How should you interpret activation patching results? (Section 3) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                21,
                0.7824118781556938,
                2,
                65
            ]
        ]
    },
    {
        "page": 1,
        "index": 25,
        "bbox": [
            131.412,
            325.7300784,
            404.25772620000004,
            335.6926784
        ],
        "prefix": "",
        "content": "3. What metrics you can use, what are common pitfalls? (Section 4) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                21,
                0.8158869738240486,
                4,
                65
            ]
        ]
    },
    {
        "page": 1,
        "index": 26,
        "bbox": [
            108.0,
            305.0160784,
            503.9972105879998,
            314.97867840000004
        ],
        "prefix": "",
        "content": "For a general introduction to mechanistic interpretability in general, and activation patching in ",
        "suffix": "particular",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                22,
                0.9285714285714286,
                0,
                98
            ]
        ]
    },
    {
        "page": 1,
        "index": 27,
        "bbox": [
            108.0,
            283.19807840000004,
            504.0014113784002,
            305.3424592
        ],
        "prefix": "",
        "content": "particular we refer to ARENA1 chapter 1 (in particular activation patching in chapter 1.3) as well as the corresponding glossary entries on Neel Nanda's website2. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                22,
                0.914518952132594,
                98,
                256
            ]
        ]
    },
    {
        "page": 1,
        "index": 28,
        "bbox": [
            108.0,
            253.69236320000005,
            392.34247680000004,
            265.64756320000004
        ],
        "prefix": "",
        "content": "2 What kind of patching experiments should you run? ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                23,
                0.8888888888888888,
                0,
                49
            ]
        ]
    },
    {
        "page": 1,
        "index": 29,
        "bbox": [
            108.0,
            230.53581660000003,
            313.8771290000001,
            240.4984166
        ],
        "prefix": "",
        "content": "2.1 Exploratory and confirmatory experiments ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                24,
                0.6666666666666666,
                0,
                40
            ]
        ]
    },
    {
        "page": 1,
        "index": 30,
        "bbox": [
            108.0,
            210.18507839999998,
            503.99754931639967,
            220.1476784
        ],
        "prefix": "",
        "content": "In practice we tend to find ourselves in one of two different modes of operation: In exploratory mode ",
        "suffix": "we",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                25,
                0.9473684210526315,
                0,
                102
            ]
        ]
    },
    {
        "page": 1,
        "index": 31,
        "bbox": [
            107.641,
            199.2760784,
            504.34539578639976,
            209.2386784
        ],
        "prefix": "",
        "content": "we run experiments to find circuits and generate hypotheses. In confirmatory mode we want to verify ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                25,
                1.0,
                102,
                202
            ]
        ]
    },
    {
        "page": 1,
        "index": 32,
        "bbox": [
            108.0,
            188.3670784,
            413.9713712000001,
            198.3296784
        ],
        "prefix": "",
        "content": "the circuit we found and check if our hypothesis about its function is correct. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                25,
                1.0,
                102,
                181
            ]
        ]
    },
    {
        "page": 1,
        "index": 33,
        "bbox": [
            108.0,
            171.9780784,
            503.99769376000006,
            182.1698182
        ],
        "prefix": "",
        "content": "In exploratory patching we typically patch components one at a time, often in a sweep over the ",
        "suffix": "model",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                0.9568405644526905,
                0,
                95
            ]
        ]
    },
    {
        "page": 1,
        "index": 34,
        "bbox": [
            108.0,
            161.0690784,
            503.99754931639967,
            171.0316784
        ],
        "prefix": "",
        "content": "model (layers, positions, model components). We do this to get an idea of which parts of a model are ",
        "suffix": "involved",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 1,
        "index": 35,
        "bbox": [
            108.0,
            150.1600784,
            416.33250739999994,
            160.1226784
        ],
        "prefix": "",
        "content": "involved in the task in question, and may be part of the corresponding circuit. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                26,
                1.0,
                0,
                79
            ]
        ]
    },
    {
        "page": 1,
        "index": 36,
        "bbox": [
            108.0,
            133.7720784,
            503.99540345199995,
            143.9638182
        ],
        "prefix": "",
        "content": "In confirmatory patching we want to confirm a hypothesised circuit by verifying that it actually covers ",
        "suffix": "all",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                0,
                104
            ]
        ]
    },
    {
        "page": 1,
        "index": 37,
        "bbox": [
            108.0,
            122.8630784,
            503.9972105879997,
            132.82567840000002
        ],
        "prefix": "",
        "content": "all model components needed to perform the task in question. We typically do this by patching ",
        "suffix": "many",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                0,
                94
            ]
        ]
    },
    {
        "page": 1,
        "index": 38,
        "bbox": [
            108.0,
            111.9540784,
            504.36163253339987,
            121.9166784
        ],
        "prefix": "",
        "content": "many model components at once and checking whether the task performance behaves as expected. A ",
        "suffix": "wellknown",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                1.0,
                0,
                95
            ]
        ]
    },
    {
        "page": 1,
        "index": 39,
        "bbox": [
            107.641,
            101.0440784,
            490.0454383999999,
            111.0066784
        ],
        "prefix": "",
        "content": "wellknown example of patching for circuit verification is Causal Scrubbing (Chan et al., 2022). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                27,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 1,
        "index": 40,
        "bbox": [
            120.653,
            80.8604592,
            428.8648675199997,
            91.3464384
        ],
        "prefix": "",
        "content": "1ARENA: https://arena3chapter1transformerinterp.streamlit.app/ ",
        "suffix": "2https://neelnanda.io/glossary",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                22,
                0.4444681776069566,
                133,
                188
            ]
        ]
    },
    {
        "page": 1,
        "index": 41,
        "bbox": [
            120.65300000000002,
            70.0094592,
            260.61847104000003,
            80.4954384
        ],
        "prefix": "",
        "content": "2https://neelnanda.io/glossary ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                22,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 1,
        "index": 42,
        "bbox": [
            303.509,
            39.96007839999999,
            308.4903,
            49.922678399999995
        ],
        "prefix": "",
        "content": "2 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 2,
        "index": 0,
        "bbox": [
            108.0,
            707.9548166000001,
            286.82867000000005,
            717.9174166
        ],
        "prefix": "",
        "content": "2.2 Which components should you patch ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                28,
                0.7142857142857143,
                0,
                33
            ]
        ]
    },
    {
        "page": 2,
        "index": 1,
        "bbox": [
            108.0,
            686.8800784,
            504.16996207199975,
            696.8426784000001
        ],
        "prefix": "",
        "content": "Patching can be done on different levels of granularity determining the components to patch. For ",
        "suffix": "example,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                29,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 2,
        "index": 2,
        "bbox": [
            108.0,
            675.9710784,
            504.002885723,
            686.1628182000001
        ],
        "prefix": "",
        "content": "example, we may patch the residual stream at a certain layer and position, or the output of a certain ",
        "suffix": "MLP",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                29,
                1.0,
                0,
                102
            ]
        ]
    },
    {
        "page": 2,
        "index": 3,
        "bbox": [
            108.0,
            665.0620784,
            503.99566985280006,
            675.2538182000001
        ],
        "prefix": "",
        "content": "MLP [layer, position] or Attention Head [layer, head, position]. At even higher granularity we could ",
        "suffix": "patch",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                29,
                0.9004664756937595,
                0,
                99
            ]
        ]
    },
    {
        "page": 2,
        "index": 4,
        "bbox": [
            108.0,
            654.1530783999999,
            332.12861220000013,
            664.1156784
        ],
        "prefix": "",
        "content": "patch individual neurons or sparse autoencoder features. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                29,
                1.0,
                0,
                56
            ]
        ]
    },
    {
        "page": 2,
        "index": 5,
        "bbox": [
            107.641,
            637.7650784,
            503.9976113829997,
            647.7276784000001
        ],
        "prefix": "",
        "content": "An even more specific type of patching is path patching. Usually, patching any component will affect ",
        "suffix": "all",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                30,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 2,
        "index": 6,
        "bbox": [
            108.0,
            626.8550783999999,
            503.9996237239998,
            637.0468182
        ],
        "prefix": "",
        "content": "all model components in later layers (''downstream''). In path patching instead we let each patch ",
        "suffix": "affect",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                30,
                0.8012173768499173,
                0,
                96
            ]
        ]
    },
    {
        "page": 2,
        "index": 7,
        "bbox": [
            108.0,
            615.9460783999999,
            504.1638649607997,
            625.9086784
        ],
        "prefix": "",
        "content": "affect only a single target component. We call this patching the ''path'' between two components. For ",
        "suffix": "details",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                30,
                0.7485857979025489,
                0,
                100
            ]
        ]
    },
    {
        "page": 2,
        "index": 8,
        "bbox": [
            108.0,
            605.0370783999999,
            345.05010440000007,
            614.9996784
        ],
        "prefix": "",
        "content": "details on patch patching we refer to ARENA section 1.3.4. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                30,
                1.0,
                196,
                254
            ]
        ]
    },
    {
        "page": 2,
        "index": 9,
        "bbox": [
            108.0,
            588.6490784,
            504.1699620719999,
            598.6116784000001
        ],
        "prefix": "",
        "content": "Path Patching can be used to understand whether circuit components affect each other directly, or ",
        "suffix": "via",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.9381943122836401,
                0,
                98
            ]
        ]
    },
    {
        "page": 2,
        "index": 10,
        "bbox": [
            107.751,
            577.7400784,
            504.000408,
            587.9318182000001
        ],
        "prefix": "",
        "content": "via mediation by another component. For example if we want to distinguish between mediation ",
        "suffix": "(component",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.9376549220110416,
                0,
                92
            ]
        ]
    },
    {
        "page": 2,
        "index": 11,
        "bbox": [
            107.671,
            566.8310783999999,
            504.00250275600007,
            577.0228182
        ],
        "prefix": "",
        "content": "(component A affects output C via component B), and amplification/calibration (component A affects ",
        "suffix": "output",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.9411764705882353,
                0,
                99
            ]
        ]
    },
    {
        "page": 2,
        "index": 12,
        "bbox": [
            108.0,
            555.9210783999999,
            503.99569627279953,
            565.8836784
        ],
        "prefix": "",
        "content": "output C directly, but component B reads from A and also affects output C by boosting or cancelling ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                0.9544913306966639,
                191,
                291
            ]
        ]
    },
    {
        "page": 2,
        "index": 13,
        "bbox": [
            108.0,
            545.0120784,
            503.99721058799975,
            554.9746784
        ],
        "prefix": "",
        "content": "the signal to amplify or calibrate component A). These two structures look identical in default ",
        "suffix": "component",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                1.0,
                191,
                287
            ]
        ]
    },
    {
        "page": 2,
        "index": 14,
        "bbox": [
            108.0,
            534.1030784,
            504.0013948799998,
            544.0656784
        ],
        "prefix": "",
        "content": "component patching, but different in path patching: a direct connection (composition) between A and ",
        "suffix": "C",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                1.0,
                191,
                291
            ]
        ]
    },
    {
        "page": 2,
        "index": 15,
        "bbox": [
            108.0,
            523.1940784,
            237.07544560000005,
            533.1566784
        ],
        "prefix": "",
        "content": "C exists only in the second case. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                31,
                1.0,
                191,
                224
            ]
        ]
    },
    {
        "page": 2,
        "index": 16,
        "bbox": [
            107.641,
            506.80607840000005,
            505.2397981639999,
            516.7686784
        ],
        "prefix": "",
        "content": "As a rule of thumb, you want to start with lowgranularity patching (e.g. residual stream patching), ",
        "suffix": "then",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 2,
        "index": 17,
        "bbox": [
            108.0,
            495.8970784,
            504.0022915139998,
            505.8596784
        ],
        "prefix": "",
        "content": "then increase granularity, and finally use path patching to test which components interact with each ",
        "suffix": "other.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 2,
        "index": 18,
        "bbox": [
            108.0,
            484.9880784,
            503.9980474463997,
            494.9506784
        ],
        "prefix": "",
        "content": "other. Fast approximations to activation patching, such as attribution patching (see Nanda, 2023, and ",
        "suffix": "also",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                0.8264456350092768,
                0,
                117
            ]
        ]
    },
    {
        "page": 2,
        "index": 19,
        "bbox": [
            108.0,
            474.07807840000004,
            374.83773120000006,
            484.1104166
        ],
        "prefix": "",
        "content": "also AtP*, atpstar) can help speed up this process in large models. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                32,
                0.8519275133457024,
                0,
                74
            ]
        ]
    },
    {
        "page": 2,
        "index": 20,
        "bbox": [
            108.0,
            447.1148166,
            225.63838080000002,
            457.0774166
        ],
        "prefix": "",
        "content": "2.3 Noising and Denoising ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                33,
                0.6,
                0,
                21
            ]
        ]
    },
    {
        "page": 2,
        "index": 21,
        "bbox": [
            107.691,
            426.0400784,
            503.99505866799984,
            436.00267840000004
        ],
        "prefix": "",
        "content": "There are multiple ways to do activation patching. The techniques differ in what the source (source of ",
        "suffix": "activations",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                34,
                0.9544913306966639,
                0,
                103
            ]
        ]
    },
    {
        "page": 2,
        "index": 22,
        "bbox": [
            108.0,
            415.13107840000004,
            504.0013948799996,
            425.09367840000004
        ],
        "prefix": "",
        "content": "activations / model run from which the activations are copied) and destination prompt (destination that ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                34,
                0.9460049999190528,
                0,
                104
            ]
        ]
    },
    {
        "page": 2,
        "index": 23,
        "bbox": [
            108.0,
            404.22207840000004,
            503.99788804479977,
            414.18467840000005
        ],
        "prefix": "",
        "content": "is overwritten / model run in which the activations will be inserted, this is called base in Interchange ",
        "suffix": "Interventions",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                34,
                1.0,
                0,
                105
            ]
        ]
    },
    {
        "page": 2,
        "index": 24,
        "bbox": [
            108.0,
            393.3130784,
            503.9999003178001,
            403.5048182
        ],
        "prefix": "",
        "content": "Interventions language, Geiger et al., 2021b) are. The use of words ''source'' and ''destination'' is ",
        "suffix": "unrelated",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                34,
                0.3290797801766736,
                0,
                104
            ]
        ]
    },
    {
        "page": 2,
        "index": 25,
        "bbox": [
            108.0,
            382.6332182,
            316.9854602000001,
            392.5958182
        ],
        "prefix": "",
        "content": "unrelated to their meaning in Transformer attention. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                34,
                1.0,
                104,
                156
            ]
        ]
    },
    {
        "page": 2,
        "index": 26,
        "bbox": [
            107.691,
            366.0150784,
            470.74806919999986,
            375.97767839999995
        ],
        "prefix": "",
        "content": "The two main methods are Denoising and Noising (see the next section for other methods). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                35,
                1.0,
                0,
                88
            ]
        ]
    },
    {
        "page": 2,
        "index": 27,
        "bbox": [
            131.412,
            342.9290784,
            504.0015338839999,
            352.9614166
        ],
        "prefix": "",
        "content": "1. Denoising: We can patch activations from a clean first prompt into a corrupted second ",
        "suffix": "prompt",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.9129081662320396,
                0,
                86
            ]
        ]
    },
    {
        "page": 2,
        "index": 28,
        "bbox": [
            143.866,
            332.02007840000005,
            504.0040455999999,
            344.13460000000003
        ],
        "prefix": "",
        "content": "prompt ''clean → corrupt''. That is running the model on the clean prompt while saving its ",
        "suffix": "activations,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.735495268467583,
                0,
                89
            ]
        ]
    },
    {
        "page": 2,
        "index": 29,
        "bbox": [
            143.866,
            321.1110784,
            504.00422665199994,
            331.07367839999995
        ],
        "prefix": "",
        "content": "activations, then running the model on the corrupted prompt while overwriting some of its ",
        "suffix": "activations",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.9353464922281546,
                175,
                265
            ]
        ]
    },
    {
        "page": 2,
        "index": 30,
        "bbox": [
            143.866,
            310.2020784,
            503.996854328,
            320.16467839999996
        ],
        "prefix": "",
        "content": "activations with previously saved cleanprompt activations. We observe which patch restores ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.9208155890306554,
                265,
                356
            ]
        ]
    },
    {
        "page": 2,
        "index": 31,
        "bbox": [
            143.866,
            299.2930784,
            504.00021446920005,
            309.3254166
        ],
        "prefix": "",
        "content": "the cleanprompt behaviour, i.e. patching which activations were sufficient to restore the ",
        "suffix": "behaviour.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                1.0,
                175,
                265
            ]
        ]
    },
    {
        "page": 2,
        "index": 32,
        "bbox": [
            143.866,
            288.3840784,
            185.44989239999998,
            298.3466784
        ],
        "prefix": "",
        "content": "behaviour. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                1.0,
                818,
                828
            ]
        ]
    },
    {
        "page": 2,
        "index": 33,
        "bbox": [
            131.412,
            271.20107840000003,
            504.001385884,
            281.2334166
        ],
        "prefix": "",
        "content": "2. Noising: Or you can patch activations from a corrupted first prompt into a clean second ",
        "suffix": "prompt",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.8264580737592353,
                186,
                274
            ]
        ]
    },
    {
        "page": 2,
        "index": 34,
        "bbox": [
            143.866,
            260.29207840000004,
            504.002922016,
            272.4066
        ],
        "prefix": "",
        "content": "prompt ''corrupt → clean''. That is running the model on the corrupted prompt while saving ",
        "suffix": "its",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.7208005611602264,
                11,
                100
            ]
        ]
    },
    {
        "page": 2,
        "index": 35,
        "bbox": [
            143.866,
            249.3830784,
            504.00203487999977,
            259.3456784
        ],
        "prefix": "",
        "content": "its activations, then running the model on the clean prompt while overwriting some of ",
        "suffix": "its",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                1.0,
                543,
                629
            ]
        ]
    },
    {
        "page": 2,
        "index": 36,
        "bbox": [
            143.866,
            238.4730784,
            503.99615694599987,
            248.4356784
        ],
        "prefix": "",
        "content": "its activations with previously saved corruptprompt activations. We observe which patch ",
        "suffix": "breaks",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                1.0,
                543,
                631
            ]
        ]
    },
    {
        "page": 2,
        "index": 37,
        "bbox": [
            143.866,
            227.5640784,
            504.000844488,
            237.5964166
        ],
        "prefix": "",
        "content": "breaks the cleanprompt behaviour, i.e. patching which activations were necessary to ",
        "suffix": "maintain",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                1.0,
                543,
                627
            ]
        ]
    },
    {
        "page": 2,
        "index": 38,
        "bbox": [
            143.866,
            216.65507839999998,
            254.90888119999997,
            226.68741659999998
        ],
        "prefix": "",
        "content": "maintain for the behaviour. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                36,
                0.75,
                275,
                292
            ]
        ]
    },
    {
        "page": 2,
        "index": 39,
        "bbox": [
            107.641,
            193.5690784,
            503.9953100224,
            203.5316784
        ],
        "prefix": "",
        "content": "An important and underrated point is that these two directions can be very different, and are not just ",
        "suffix": "symmetric",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                37,
                1.0,
                0,
                103
            ]
        ]
    },
    {
        "page": 2,
        "index": 40,
        "bbox": [
            108.0,
            182.6600784,
            503.9972105879995,
            192.6226784
        ],
        "prefix": "",
        "content": "symmetric mirrors of each other. In some situations denoising is the right tool, and in others it's ",
        "suffix": "noising,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                37,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 2,
        "index": 41,
        "bbox": [
            108.0,
            171.75107839999998,
            451.8591389999999,
            181.7136784
        ],
        "prefix": "",
        "content": "noising, and understanding the differences is a crucial step in using patching correctly. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                37,
                1.0,
                0,
                89
            ]
        ]
    },
    {
        "page": 2,
        "index": 42,
        "bbox": [
            73.7637385,
            153.1438961728,
            411.55491404419803,
            162.0928016228
        ],
        "prefix": "",
        "content": "Technique Source (saved) Source run input Destination / Base (over",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.818299331594825,
                54,
                123
            ]
        ]
    },
    {
        "page": 2,
        "index": 43,
        "bbox": [
            420.80891375,
            153.1438961728,
            479.875448260289,
            162.0928016228
        ],
        "prefix": "",
        "content": "Destination / ",
        "suffix": "Base",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                137,
                151
            ]
        ]
    },
    {
        "page": 2,
        "index": 44,
        "bbox": [
            490.11069775,
            153.14389617279997,
            533.62922495335,
            162.09280162279998
        ],
        "prefix": "",
        "content": "Observation ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                168,
                180
            ]
        ]
    },
    {
        "page": 2,
        "index": 45,
        "bbox": [
            320.629786,
            143.3448869228,
            348.96202065470004,
            152.2937923728
        ],
        "prefix": "",
        "content": "written) ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 2,
        "index": 46,
        "bbox": [
            420.80891375,
            143.3448869228,
            473.00787923984996,
            152.2937923728
        ],
        "prefix": "",
        "content": "Base run input ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                137,
                152
            ]
        ]
    },
    {
        "page": 2,
        "index": 47,
        "bbox": [
            73.7637385,
            128.87048642279998,
            166.911299853807,
            138.0162677927
        ],
        "prefix": "",
        "content": "Clean → corrupted (De",
        "suffix": "noising,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                148,
                178
            ]
        ]
    },
    {
        "page": 2,
        "index": 48,
        "bbox": [
            73.7637385,
            119.0714771728,
            165.26536326485,
            129.1627597264
        ],
        "prefix": "(De",
        "content": "noising, Causal Tracing2) ",
        "suffix": "Corrupted",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 49,
        "bbox": [
            73.7637385,
            109.2724679228,
            166.91513922096644,
            118.4182492927
        ],
        "prefix": "",
        "content": "Corrupted → clean (Nois",
        "suffix": "ing,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                206,
                234
            ]
        ]
    },
    {
        "page": 2,
        "index": 50,
        "bbox": [
            73.7637385,
            99.47345867279999,
            161.50775643725,
            108.42236412279999
        ],
        "prefix": "(Nois",
        "content": "ing, Resample Ablation) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                394,
                413
            ]
        ]
    },
    {
        "page": 2,
        "index": 51,
        "bbox": [
            176.166035,
            128.87048642279998,
            241.30261207702398,
            137.8193918728
        ],
        "prefix": "",
        "content": "First run activa",
        "suffix": "tions",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 2,
        "index": 52,
        "bbox": [
            250.55999825,
            128.87048642279998,
            410.06778493651706,
            137.8193918728
        ],
        "prefix": "",
        "content": "Clean tokens Second run activations ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.9213061319425266,
                853,
                891
            ]
        ]
    },
    {
        "page": 2,
        "index": 53,
        "bbox": [
            420.80891375000004,
            128.87048642279998,
            538.231289070067,
            137.8193918728
        ],
        "prefix": "",
        "content": "Corrupt tokens What restores ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.9016326649281583,
                325,
                356
            ]
        ]
    },
    {
        "page": 2,
        "index": 54,
        "bbox": [
            176.166035,
            119.0714771728,
            220.65104399195,
            128.0203826228
        ],
        "prefix": "activa",
        "content": "tions (clean) ",
        "suffix": "First",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.7838338208091532,
                149,
                157
            ]
        ]
    },
    {
        "page": 2,
        "index": 55,
        "bbox": [
            320.65673350000003,
            119.0714771728,
            360.90891021410005,
            128.0203826228
        ],
        "prefix": "",
        "content": "(corrupted) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                227,
                239
            ]
        ]
    },
    {
        "page": 2,
        "index": 56,
        "bbox": [
            490.11069775,
            119.0714771728,
            525.71839253555,
            128.0203826228
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                497,
                507
            ]
        ]
    },
    {
        "page": 2,
        "index": 57,
        "bbox": [
            176.166035,
            109.2724679228,
            241.30261207702398,
            118.2213733728
        ],
        "prefix": "",
        "content": "First run activa",
        "suffix": "tions",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                821,
                843
            ]
        ]
    },
    {
        "page": 2,
        "index": 58,
        "bbox": [
            250.55999825,
            109.2724679228,
            410.06778493651706,
            118.2213733728
        ],
        "prefix": "",
        "content": "Corrupt tokens Second run activations ",
        "suffix": "(clean)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.9437900942446619,
                420,
                460
            ]
        ]
    },
    {
        "page": 2,
        "index": 59,
        "bbox": [
            420.80891375000004,
            109.2724679228,
            538.2328998730479,
            118.2213733728
        ],
        "prefix": "",
        "content": "Clean tokens What breaks ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.9016326649281583,
                430,
                457
            ]
        ]
    },
    {
        "page": 2,
        "index": 60,
        "bbox": [
            176.166035,
            99.47345867279999,
            236.06105917685,
            108.42236412279999
        ],
        "prefix": "activa",
        "content": "tions (corrupted) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                449,
                461
            ]
        ]
    },
    {
        "page": 2,
        "index": 61,
        "bbox": [
            320.65673350000003,
            99.47345867279999,
            345.4988950292,
            108.42236412279999
        ],
        "prefix": "",
        "content": "(clean) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                420,
                428
            ]
        ]
    },
    {
        "page": 2,
        "index": 62,
        "bbox": [
            490.11069775,
            99.47345867279999,
            525.71839253555,
            108.42236412279999
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                325,
                335
            ]
        ]
    },
    {
        "page": 2,
        "index": 63,
        "bbox": [
            108.0,
            80.75707840000001,
            503.9972105879997,
            90.7196784
        ],
        "prefix": "",
        "content": "For now we round patching effects to ''if I patch these activations the model performance is / isn't ",
        "suffix": "affected''.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.8349036109623383,
                0,
                100
            ]
        ]
    },
    {
        "page": 2,
        "index": 64,
        "bbox": [
            108.0,
            69.8480784,
            426.86297559999997,
            79.8106784
        ],
        "prefix": "",
        "content": "affected''. We discuss metrics and measuring patching effects in the last section. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                40,
                0.8838775549760527,
                11,
                81
            ]
        ]
    },
    {
        "page": 2,
        "index": 65,
        "bbox": [
            303.509,
            39.96007839999999,
            308.4903,
            49.922678399999995
        ],
        "prefix": "",
        "content": "3 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 3,
        "index": 0,
        "bbox": [
            108.0,
            707.9548166000001,
            265.209828,
            717.9174166
        ],
        "prefix": "",
        "content": "2.4 Example: AND gate vs OR gate ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                41,
                0.75,
                0,
                28
            ]
        ]
    },
    {
        "page": 3,
        "index": 1,
        "bbox": [
            108.0,
            684.8440784,
            503.99721058799975,
            694.8066784
        ],
        "prefix": "",
        "content": "Consider a hypothetical circuit of three components A, B, and C that are connected with an AND ",
        "suffix": "or",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                0.9450616109187914,
                0,
                95
            ]
        ]
    },
    {
        "page": 3,
        "index": 2,
        "bbox": [
            108.0,
            673.9350784,
            503.9972105879997,
            683.8976784
        ],
        "prefix": "",
        "content": "or an OR gate. They are embedded in a much larger network, and of the three just C is connected ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                1.0,
                0,
                96
            ]
        ]
    },
    {
        "page": 3,
        "index": 3,
        "bbox": [
            108.0,
            663.0260784,
            503.9970113359996,
            672.9886784
        ],
        "prefix": "",
        "content": "to the output. We run an experiment where we patch all components using the denoising or noising ",
        "suffix": "technique.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 3,
        "index": 4,
        "bbox": [
            108.0,
            652.1170784,
            149.2252388,
            662.0796784
        ],
        "prefix": "",
        "content": "technique. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                42,
                1.0,
                0,
                10
            ]
        ]
    },
    {
        "page": 3,
        "index": 5,
        "bbox": [
            108.0,
            621.3380784,
            230.47960360000002,
            631.3704166
        ],
        "prefix": "",
        "content": "AND circuit: C = A AND B ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                43,
                1.0,
                0,
                24
            ]
        ]
    },
    {
        "page": 3,
        "index": 6,
        "bbox": [
            135.39700000000002,
            597.5570783999999,
            505.24901950080005,
            609.6715999999999
        ],
        "prefix": "",
        "content": "• Denoising (clean → corrupt patching): Denoising either A or B has no effect on the output, ",
        "suffix": "only",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                0.9473684210526315,
                0,
                91
            ]
        ]
    },
    {
        "page": 3,
        "index": 7,
        "bbox": [
            143.866,
            586.6480783999999,
            504.00203488,
            596.6106784
        ],
        "prefix": "",
        "content": "only denoising C restores the output. This is because denoising A still leaves B at the ",
        "suffix": "corrupted",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                0.9411764705882353,
                0,
                88
            ]
        ]
    },
    {
        "page": 3,
        "index": 8,
        "bbox": [
            143.866,
            575.7390783999999,
            503.994805724,
            585.9308182
        ],
        "prefix": "",
        "content": "corrupted (incorrect) baseline, and vice versa. Denoising found only one of the circuit ",
        "suffix": "components.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                1.0,
                179,
                267
            ]
        ]
    },
    {
        "page": 3,
        "index": 9,
        "bbox": [
            143.866,
            565.0592181999999,
            193.94799020000002,
            575.0218182
        ],
        "prefix": "",
        "content": "components. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                1.0,
                179,
                191
            ]
        ]
    },
    {
        "page": 3,
        "index": 10,
        "bbox": [
            135.39700000000002,
            543.1220784,
            504.00356967040005,
            555.2366
        ],
        "prefix": "",
        "content": "• Noising (corrupt → clean patching): Noising either A or B has an effect, as well as noising ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                0.9473684210526315,
                0,
                92
            ]
        ]
    },
    {
        "page": 3,
        "index": 11,
        "bbox": [
            143.866,
            532.2130784,
            153.0017042,
            542.1756784
        ],
        "prefix": "",
        "content": "C. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                44,
                1.0,
                271,
                273
            ]
        ]
    },
    {
        "page": 3,
        "index": 12,
        "bbox": [
            107.67100000000002,
            508.6612182,
            437.8216013999998,
            518.6238182
        ],
        "prefix": "",
        "content": "Noising works better in this case, as it finds all circuit components in the first pass. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                45,
                1.0,
                0,
                88
            ]
        ]
    },
    {
        "page": 3,
        "index": 13,
        "bbox": [
            108.00000000000001,
            477.6530784,
            216.10366340000002,
            487.6854166
        ],
        "prefix": "",
        "content": "OR circuit: C = A OR B ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                46,
                1.0,
                0,
                22
            ]
        ]
    },
    {
        "page": 3,
        "index": 14,
        "bbox": [
            135.39700000000002,
            453.8730784,
            503.9990851240001,
            465.9876
        ],
        "prefix": "",
        "content": "• Denoising (clean → corrupt patching): Denoising either A or B has an effect, as well as ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                47,
                0.9444444444444444,
                0,
                88
            ]
        ]
    },
    {
        "page": 3,
        "index": 15,
        "bbox": [
            143.866,
            442.9640784,
            194.2369056,
            452.9266784
        ],
        "prefix": "",
        "content": "denoising C. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                47,
                1.0,
                0,
                13
            ]
        ]
    },
    {
        "page": 3,
        "index": 16,
        "bbox": [
            135.39700000000002,
            421.25607840000004,
            504.344636092,
            433.3706
        ],
        "prefix": "",
        "content": "• Noising (corrupt → clean patching): Noising either A or B has no effect on the output, only ",
        "suffix": "denoising",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                47,
                0.95,
                0,
                92
            ]
        ]
    },
    {
        "page": 3,
        "index": 17,
        "bbox": [
            143.866,
            410.34707840000004,
            504.67052534000004,
            420.30967840000005
        ],
        "prefix": "",
        "content": "denoising C restores the output. This is because noising A still leaves B at the clean (correct) ",
        "suffix": "baseline,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                47,
                0.9473684210526315,
                0,
                97
            ]
        ]
    },
    {
        "page": 3,
        "index": 18,
        "bbox": [
            143.866,
            399.4380784,
            452.18711560000014,
            409.6298182
        ],
        "prefix": "",
        "content": "baseline, and vice versa. Denoising found only one of the circuit components. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                47,
                1.0,
                189,
                266
            ]
        ]
    },
    {
        "page": 3,
        "index": 19,
        "bbox": [
            107.641,
            375.65707840000005,
            503.99947000680004,
            385.84881820000004
        ],
        "prefix": "",
        "content": "Denoising works better in this case, as it finds all circuit components in the first pass. These AND ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                48,
                0.8421052631578947,
                0,
                90
            ]
        ]
    },
    {
        "page": 3,
        "index": 20,
        "bbox": [
            108.0,
            364.7480784,
            503.99721058799986,
            374.7106784
        ],
        "prefix": "",
        "content": "and OR structures can appear in realworld transformers as serialdependent components (e.g. a ",
        "suffix": "later",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                49,
                1.0,
                10,
                103
            ]
        ]
    },
    {
        "page": 3,
        "index": 21,
        "bbox": [
            108.0,
            353.8390784,
            504.00229151399986,
            363.8016784
        ],
        "prefix": "",
        "content": "later attention head depending on an earlier one) or parallel components (such as redundant backup ",
        "suffix": "attention",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                49,
                1.0,
                10,
                109
            ]
        ]
    },
    {
        "page": 3,
        "index": 22,
        "bbox": [
            108.0,
            342.9300784,
            173.85278599999998,
            352.8926784
        ],
        "prefix": "",
        "content": "attention heads). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                49,
                1.0,
                10,
                27
            ]
        ]
    },
    {
        "page": 3,
        "index": 23,
        "bbox": [
            108.0,
            310.87581659999995,
            366.2206294000001,
            320.83841659999996
        ],
        "prefix": "",
        "content": "2.5 Comparison to ablations and other patching techniques ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                50,
                0.7777777777777778,
                0,
                53
            ]
        ]
    },
    {
        "page": 3,
        "index": 24,
        "bbox": [
            107.691,
            287.7650784,
            504.0032279999998,
            297.72767839999995
        ],
        "prefix": "",
        "content": "There are activation patching techniques based on a single prompt. The original Causal Tracing ",
        "suffix": "(ROME,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                51,
                0.875,
                0,
                95
            ]
        ]
    },
    {
        "page": 3,
        "index": 25,
        "bbox": [
            107.671,
            276.8550784,
            503.9949739054,
            286.8176784
        ],
        "prefix": "",
        "content": "(ROME, Meng et al., 2022) falls into this category, and also zero and meanablation can be seen as ",
        "suffix": "patching",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                51,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 26,
        "bbox": [
            108.0,
            265.94607840000003,
            189.9025346,
            275.9086784
        ],
        "prefix": "",
        "content": "patching techniques. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                51,
                1.0,
                187,
                207
            ]
        ]
    },
    {
        "page": 3,
        "index": 27,
        "bbox": [
            131.412,
            242.1660784,
            503.99770288800005,
            252.1984166
        ],
        "prefix": "",
        "content": "1. Zero ablation: Overwrite (''ablate'') the targeted activations with zeros and observe ablating ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.7014456350092768,
                0,
                93
            ]
        ]
    },
    {
        "page": 3,
        "index": 28,
        "bbox": [
            143.507,
            231.25707839999998,
            329.2497144000001,
            241.2196784
        ],
        "prefix": "",
        "content": "which component breaks the model behaviour. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                93,
                137
            ]
        ]
    },
    {
        "page": 3,
        "index": 29,
        "bbox": [
            131.412,
            209.54907839999998,
            504.00118377040013,
            219.58141659999998
        ],
        "prefix": "",
        "content": "2. Mean ablation: Same as above but overwrite targeted activations with their dataset mean ",
        "suffix": "value",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.8666666666666667,
                0,
                88
            ]
        ]
    },
    {
        "page": 3,
        "index": 30,
        "bbox": [
            143.616,
            198.6400784,
            504.0040488096,
            208.6026784
        ],
        "prefix": "",
        "content": "value rather than zero. This is slightly more principled than zero ablating since there is no ",
        "suffix": "special",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                181,
                275
            ]
        ]
    },
    {
        "page": 3,
        "index": 31,
        "bbox": [
            143.866,
            187.7310784,
            310.4904850000001,
            197.6936784
        ],
        "prefix": "",
        "content": "special meaning to activations being zero. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                181,
                224
            ]
        ]
    },
    {
        "page": 3,
        "index": 32,
        "bbox": [
            131.412,
            166.0220784,
            504.0022038416,
            178.13660000000002
        ],
        "prefix": "",
        "content": "3. Gaussian noise patching (also called Causal Tracing*): This is a clean → corrupt patching ",
        "suffix": "variant",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.8823529411764706,
                0,
                90
            ]
        ]
    },
    {
        "page": 3,
        "index": 33,
        "bbox": [
            143.616,
            155.11307839999998,
            503.9959193279998,
            165.0756784
        ],
        "prefix": "",
        "content": "variant that uses as its corrupt run input the embeddings of the clean prompt with added ",
        "suffix": "Gaussian",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.9460049999190528,
                271,
                360
            ]
        ]
    },
    {
        "page": 3,
        "index": 34,
        "bbox": [
            143.866,
            144.2040784,
            504.00203488,
            154.1666784
        ],
        "prefix": "",
        "content": "Gaussian noise. The idea is to thereby automatically generate the corrupted ''prompt''. It ",
        "suffix": "was",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.7014456350092768,
                0,
                89
            ]
        ]
    },
    {
        "page": 3,
        "index": 35,
        "bbox": [
            143.507,
            133.2950784,
            503.9986996999999,
            143.2576784
        ],
        "prefix": "",
        "content": "was originally used in ROME (called Causal Tracing there) but has not been used much ",
        "suffix": "recently,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                360,
                445
            ]
        ]
    },
    {
        "page": 3,
        "index": 36,
        "bbox": [
            143.866,
            122.3860784,
            436.5549,
            133.6204592
        ],
        "prefix": "",
        "content": "recently, especially because the corruption can sometimes be ineffective.3 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                0.9,
                360,
                434
            ]
        ]
    },
    {
        "page": 3,
        "index": 37,
        "bbox": [
            120.653,
            89.9882576,
            504.59865664,
            100.4204384
        ],
        "prefix": "",
        "content": "3The success of Gaussian noise corruption is highly sensitive to the noise level. Zhang and Nanda (2023) ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 3,
        "index": 38,
        "bbox": [
            108.0,
            80.0262576,
            504.0002669568,
            88.9926576
        ],
        "prefix": "",
        "content": "that if the noise level is just slightly lower than used in ROME, the model can recover the correct completion ",
        "suffix": "despite",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                458,
                569
            ]
        ]
    },
    {
        "page": 3,
        "index": 39,
        "bbox": [
            108.0,
            70.0632576,
            188.43757440000002,
            79.02965760000001
        ],
        "prefix": "",
        "content": "despite the corruption. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                52,
                1.0,
                458,
                481
            ]
        ]
    },
    {
        "page": 3,
        "index": 40,
        "bbox": [
            303.509,
            39.96007839999999,
            308.4903,
            49.922678399999995
        ],
        "prefix": "",
        "content": "4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 4,
        "index": 0,
        "bbox": [
            73.7637385,
            707.8737759228001,
            411.55491404419803,
            716.8226813728
        ],
        "prefix": "",
        "content": "Technique Source (saved) Source run input Destination / Base (over",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.6317450633830591,
                54,
                109
            ]
        ]
    },
    {
        "page": 4,
        "index": 1,
        "bbox": [
            420.80891375,
            707.8737759228001,
            479.875448260289,
            716.8226813728
        ],
        "prefix": "",
        "content": "Destination / ",
        "suffix": "Base",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                102,
                116
            ]
        ]
    },
    {
        "page": 4,
        "index": 2,
        "bbox": [
            490.11069775,
            707.8737759228001,
            533.62922495335,
            716.8226813728
        ],
        "prefix": "",
        "content": "Observation ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                168,
                180
            ]
        ]
    },
    {
        "page": 4,
        "index": 3,
        "bbox": [
            320.629786,
            698.0747666728,
            348.96202065470004,
            707.0236721228
        ],
        "prefix": "",
        "content": "written) ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 4,
        "index": 4,
        "bbox": [
            420.80891375,
            698.0747666728,
            473.00787923984996,
            707.0236721228
        ],
        "prefix": "",
        "content": "Base run input ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                151,
                166
            ]
        ]
    },
    {
        "page": 4,
        "index": 5,
        "bbox": [
            73.7637385,
            683.6003661728,
            166.911299853807,
            692.7461475427
        ],
        "prefix": "",
        "content": "Clean → corrupted (De",
        "suffix": "noising,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                162,
                192
            ]
        ]
    },
    {
        "page": 4,
        "index": 6,
        "bbox": [
            73.7637385,
            673.8004586728,
            165.26536326485,
            683.8926394764
        ],
        "prefix": "(De",
        "content": "noising, Causal Tracing2) ",
        "suffix": "Corrupted",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 7,
        "bbox": [
            73.7637385,
            664.0014494228001,
            166.91513922096644,
            673.1472307927
        ],
        "prefix": "",
        "content": "Corrupted → clean (Nois",
        "suffix": "ing,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                321,
                349
            ]
        ]
    },
    {
        "page": 4,
        "index": 8,
        "bbox": [
            73.7637385,
            654.2024401728,
            161.50775643725,
            663.1513456228
        ],
        "prefix": "(Nois",
        "content": "ing, Resample Ablation) ",
        "suffix": "Zero",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 9,
        "bbox": [
            176.166035,
            683.6003661728,
            241.30261207702398,
            692.5492716228
        ],
        "prefix": "",
        "content": "First run activa",
        "suffix": "tions",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                374,
                396
            ]
        ]
    },
    {
        "page": 4,
        "index": 10,
        "bbox": [
            250.55999825,
            683.6003661728,
            410.06778493651706,
            692.5492716228
        ],
        "prefix": "",
        "content": "Clean tokens Second run activations ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                0.9213061319425266,
                273,
                311
            ]
        ]
    },
    {
        "page": 4,
        "index": 11,
        "bbox": [
            420.80891375,
            683.6003661728,
            538.231289070067,
            692.5492716228
        ],
        "prefix": "",
        "content": "Corrupt tokens What restores ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.9016326649281583,
                280,
                311
            ]
        ]
    },
    {
        "page": 4,
        "index": 12,
        "bbox": [
            176.166035,
            673.8004586728,
            220.65104399195,
            682.7493641228
        ],
        "prefix": "activa",
        "content": "tions (clean) ",
        "suffix": "First",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 13,
        "bbox": [
            320.65673350000003,
            673.8004586728,
            360.90891021410005,
            682.7493641228
        ],
        "prefix": "",
        "content": "(corrupted) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                178,
                190
            ]
        ]
    },
    {
        "page": 4,
        "index": 14,
        "bbox": [
            490.11069775,
            673.8004586728,
            525.71839253555,
            682.7493641228
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                648,
                658
            ]
        ]
    },
    {
        "page": 4,
        "index": 15,
        "bbox": [
            176.166035,
            664.0014494228001,
            241.30261207702398,
            672.9503548728001
        ],
        "prefix": "",
        "content": "First run activa",
        "suffix": "tions",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                241,
                263
            ]
        ]
    },
    {
        "page": 4,
        "index": 16,
        "bbox": [
            250.55999825,
            664.0014494228001,
            410.06778493651706,
            672.9503548728001
        ],
        "prefix": "",
        "content": "Corrupt tokens Second run activations ",
        "suffix": "(clean)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 17,
        "bbox": [
            420.80891375,
            664.0014494228001,
            538.2328998730479,
            672.9503548728001
        ],
        "prefix": "",
        "content": "Clean tokens What breaks ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.9016326649281583,
                701,
                728
            ]
        ]
    },
    {
        "page": 4,
        "index": 18,
        "bbox": [
            176.166035,
            654.2024401728,
            236.06105917685,
            663.1513456228
        ],
        "prefix": "activa",
        "content": "tions (corrupted) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 19,
        "bbox": [
            320.65673350000003,
            654.2024401728,
            345.4988950292,
            663.1513456228
        ],
        "prefix": "",
        "content": "(clean) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                39,
                1.0,
                168,
                176
            ]
        ]
    },
    {
        "page": 4,
        "index": 20,
        "bbox": [
            490.11069775,
            654.2024401728,
            525.71839253555,
            663.1513456228
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                578,
                588
            ]
        ]
    },
    {
        "page": 4,
        "index": 21,
        "bbox": [
            73.7637385,
            644.4034309228001,
            538.2328998730479,
            653.3523363728001
        ],
        "prefix": "",
        "content": "Zero ablation Zero activations N/A Clean run activations Clean tokens What breaks ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.8486656383510128,
                326,
                418
            ]
        ]
    },
    {
        "page": 4,
        "index": 22,
        "bbox": [
            490.11069775,
            634.6044216728,
            525.71839253555,
            643.5533271227999
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                495,
                505
            ]
        ]
    },
    {
        "page": 4,
        "index": 23,
        "bbox": [
            73.7637385,
            624.8054124227999,
            241.309055288948,
            633.7543178727999
        ],
        "prefix": "",
        "content": "Mean ablation Dataset mean acti",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.7213061319425267,
                326,
                355
            ]
        ]
    },
    {
        "page": 4,
        "index": 24,
        "bbox": [
            250.55999825,
            624.8054124227999,
            538.2328998730479,
            633.7543178727999
        ],
        "prefix": "",
        "content": "N/A Clean run activations Clean tokens What breaks ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 4,
        "index": 25,
        "bbox": [
            73.7637385,
            605.2073939228,
            165.42594519947804,
            614.1562993727999
        ],
        "prefix": "",
        "content": "Gaussian Noise patching ",
        "suffix": "(Causal",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                711,
                735
            ]
        ]
    },
    {
        "page": 4,
        "index": 26,
        "bbox": [
            73.46821425000002,
            595.4083846728,
            137.12139426485004,
            605.4996672264
        ],
        "prefix": "",
        "content": "(Causal Tracing2) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.6666666666666666,
                370,
                378
            ]
        ]
    },
    {
        "page": 4,
        "index": 27,
        "bbox": [
            175.94237075,
            615.0064031728,
            201.5720359588,
            623.9553086228
        ],
        "prefix": "",
        "content": "vations ",
        "suffix": "First",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 28,
        "bbox": [
            176.166035,
            605.2073939228,
            241.30261207702398,
            614.1562993727999
        ],
        "prefix": "",
        "content": "First run activa",
        "suffix": "tions",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 29,
        "bbox": [
            250.55999825,
            605.2073939228,
            410.06778493651706,
            614.1562993727999
        ],
        "prefix": "",
        "content": "Clean tokens Second run activations ",
        "suffix": "(corrupted",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.8009329513875191,
                151,
                189
            ]
        ]
    },
    {
        "page": 4,
        "index": 30,
        "bbox": [
            176.166035,
            595.4083846728,
            220.65104399195,
            604.3572901228
        ],
        "prefix": "activa",
        "content": "tions (clean) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.694028332874633,
                359,
                367
            ]
        ]
    },
    {
        "page": 4,
        "index": 31,
        "bbox": [
            320.65673350000003,
            595.4083846728,
            410.0728544205826,
            604.3572901228
        ],
        "prefix": "",
        "content": "(corrupted from modified ",
        "suffix": "clean",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                756,
                781
            ]
        ]
    },
    {
        "page": 4,
        "index": 32,
        "bbox": [
            320.95225775,
            585.6093754228,
            363.45060973205,
            594.5582808728
        ],
        "prefix": "",
        "content": "clean input) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                756,
                769
            ]
        ]
    },
    {
        "page": 4,
        "index": 33,
        "bbox": [
            420.80891375,
            605.2073939228,
            480.86193980147516,
            614.1562993727999
        ],
        "prefix": "",
        "content": "Clean token em",
        "suffix": "bedding",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                758,
                780
            ]
        ]
    },
    {
        "page": 4,
        "index": 34,
        "bbox": [
            420.80891375,
            595.4083846728,
            480.85624829760894,
            604.3572901228
        ],
        "prefix": "em",
        "content": "bedding + Gaus",
        "suffix": "sian",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.3333333333333334,
                363,
                374
            ]
        ]
    },
    {
        "page": 4,
        "index": 35,
        "bbox": [
            420.80891375,
            585.6093754228,
            456.3539661974,
            594.5582808728
        ],
        "prefix": "Gaus",
        "content": "sian noise ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                769,
                775
            ]
        ]
    },
    {
        "page": 4,
        "index": 36,
        "bbox": [
            490.11069775,
            615.0064031728,
            525.71839253555,
            623.9553086228
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "What",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.5001017341845053,
                165,
                175
            ]
        ]
    },
    {
        "page": 4,
        "index": 37,
        "bbox": [
            490.11069775,
            605.2073939228,
            538.231289070067,
            614.1562993727999
        ],
        "prefix": "",
        "content": "What restores ",
        "suffix": "behaviour",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                1.0,
                771,
                785
            ]
        ]
    },
    {
        "page": 4,
        "index": 38,
        "bbox": [
            490.11069775,
            595.4083846728,
            525.71839253555,
            604.3572901228
        ],
        "prefix": "",
        "content": "behaviour ",
        "suffix": "What",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                54,
                0.5,
                268,
                278
            ]
        ]
    },
    {
        "page": 4,
        "index": 39,
        "bbox": [
            108.0,
            566.8930783999999,
            505.6535924639997,
            576.8556784
        ],
        "prefix": "",
        "content": "Generally we recommend corruptedpromptbased techniques, noising and denoising. Their ad",
        "suffix": "vantage",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                1.0,
                0,
                95
            ]
        ]
    },
    {
        "page": 4,
        "index": 40,
        "bbox": [
            107.751,
            555.9840783999999,
            504.1648465199996,
            565.9466784
        ],
        "prefix": "ad",
        "content": "vantage is that one can run very precise experiments, editing some features while controlling for ",
        "suffix": "others.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                1.0,
                95,
                185
            ]
        ]
    },
    {
        "page": 4,
        "index": 41,
        "bbox": [
            108.0,
            545.0750783999999,
            504.0043452192,
            555.2668182
        ],
        "prefix": "",
        "content": "others. They allow us to trace the difference between clean and corrupted prompt. To illustrate this ",
        "suffix": "consider",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                1.0,
                95,
                196
            ]
        ]
    },
    {
        "page": 4,
        "index": 42,
        "bbox": [
            108.0,
            523.2570784,
            505.77116846360013,
            546.2805999999999
        ],
        "prefix": "",
        "content": "consider the prompts ''Angela Merkel is the leader of'' → ''Germany'' vs ''Joe Biden is the leader of'' → ''America''. Patching will find components that deal with Angela Merkel vs Joe Biden, but not ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.6138390819084887,
                0,
                192
            ]
        ]
    },
    {
        "page": 4,
        "index": 43,
        "bbox": [
            108.0,
            512.3480784,
            503.9970910367998,
            522.3106784
        ],
        "prefix": "",
        "content": "components that would be indifferent to this change, such as the ''answer is a country circuit'' or the ",
        "suffix": "''political",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.7105343279154573,
                287,
                389
            ]
        ]
    },
    {
        "page": 4,
        "index": 44,
        "bbox": [
            106.675,
            501.4390784,
            503.99572207279977,
            511.40167840000004
        ],
        "prefix": "",
        "content": "''political leader circuit''. A secondary advantage of noising and denoising is that they tend to bring ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.7687647715658098,
                288,
                389
            ]
        ]
    },
    {
        "page": 4,
        "index": 45,
        "bbox": [
            108.0,
            490.5290784,
            503.9966526823997,
            500.49167839999996
        ],
        "prefix": "",
        "content": "the model less outofdistribution than ablation techniques (as pointed out in Chan et al. (2022), as ",
        "suffix": "well",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                0.6885307894012578,
                288,
                393
            ]
        ]
    },
    {
        "page": 4,
        "index": 46,
        "bbox": [
            107.641,
            479.6200784,
            282.27541540000004,
            489.58267839999996
        ],
        "prefix": "",
        "content": "well as in e.g. Hase, Xie, and Bansal, 2021) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                55,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 4,
        "index": 47,
        "bbox": [
            108.0,
            446.77481659999995,
            253.66317460000008,
            456.73741659999996
        ],
        "prefix": "",
        "content": "2.6 Choosing corrupted prompts ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                56,
                0.6,
                0,
                26
            ]
        ]
    },
    {
        "page": 4,
        "index": 48,
        "bbox": [
            108.0,
            423.34707840000004,
            504.00139487999974,
            433.30967840000005
        ],
        "prefix": "",
        "content": "Having a corrupted prompt is great because it can tell us what model components care about, but also ",
        "suffix": "a",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.9473684269755356,
                0,
                101
            ]
        ]
    },
    {
        "page": 4,
        "index": 49,
        "bbox": [
            108.0,
            412.4380784,
            503.99685193440007,
            422.40067839999995
        ],
        "prefix": "",
        "content": "a possible pitfall if we don't notice what our prompts trace and don't trace. We give some examples ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 4,
        "index": 50,
        "bbox": [
            108.0,
            401.5290784,
            503.99928280879976,
            411.49167839999996
        ],
        "prefix": "",
        "content": "for the Indirect Object Identification (IOI, Wang et al., 2022) demo sentence ''John and Mary went to ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.4960793575971098,
                0,
                94
            ]
        ]
    },
    {
        "page": 4,
        "index": 51,
        "bbox": [
            108.0,
            390.6200784,
            504.00445339819953,
            400.58267839999996
        ],
        "prefix": "",
        "content": "the store. John gave a bottle of milk to''. Different corruptions which highlight different properties ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                0.9129081662320396,
                94,
                196
            ]
        ]
    },
    {
        "page": 4,
        "index": 52,
        "bbox": [
            108.0,
            379.7110784,
            251.61087900000007,
            389.6736784
        ],
        "prefix": "",
        "content": "the model might care about include: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                57,
                1.0,
                94,
                129
            ]
        ]
    },
    {
        "page": 4,
        "index": 53,
        "bbox": [
            113.42452748000001,
            360.956213404416,
            153.18182060693604,
            370.014607828416
        ],
        "prefix": "",
        "content": "Corruption ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                34,
                45
            ]
        ]
    },
    {
        "page": 4,
        "index": 54,
        "bbox": [
            113.42452748000001,
            346.30381080441606,
            162.47573328596002,
            355.36220522841603
        ],
        "prefix": "",
        "content": "None (Clean) ",
        "suffix": "Replace",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.75,
                45,
                58
            ]
        ]
    },
    {
        "page": 4,
        "index": 55,
        "bbox": [
            294.40218967709603,
            360.956213404416,
            498.17983063939994,
            370.014607828416
        ],
        "prefix": "",
        "content": "Example Property traced in model ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.9213061319425266,
                36,
                71
            ]
        ]
    },
    {
        "page": 4,
        "index": 56,
        "bbox": [
            294.40147556,
            346.30381080441606,
            393.572777713952,
            355.36220522841603
        ],
        "prefix": "",
        "content": "John and Mary . . . John . . . ",
        "suffix": "John",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.2957570494155226,
                47,
                68
            ]
        ]
    },
    {
        "page": 4,
        "index": 57,
        "bbox": [
            113.42452748000001,
            336.38491164441604,
            284.66133581719197,
            345.443306068416
        ],
        "prefix": "",
        "content": "Replace the value of one or multiple names, ",
        "suffix": "without",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.9039261425818458,
                120,
                164
            ]
        ]
    },
    {
        "page": 4,
        "index": 58,
        "bbox": [
            294.40147556,
            336.38491164441604,
            399.08571656039845,
            345.443306068416
        ],
        "prefix": "",
        "content": "John and Alice . . . John . . . ",
        "suffix": "Alice",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.2946768908215604,
                53,
                75
            ]
        ]
    },
    {
        "page": 4,
        "index": 59,
        "bbox": [
            408.3665264,
            336.38491164441604,
            500.07842191367655,
            345.443306068416
        ],
        "prefix": "",
        "content": "Where the model repre",
        "suffix": "sents",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                240,
                267
            ]
        ]
    },
    {
        "page": 4,
        "index": 60,
        "bbox": [
            113.09901956,
            326.46601248441607,
            271.0955351034081,
            335.52440690841604
        ],
        "prefix": "",
        "content": "without changing the grammatical structure ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                120,
                163
            ]
        ]
    },
    {
        "page": 4,
        "index": 61,
        "bbox": [
            294.07596764,
            326.46601248441607,
            399.0787923722905,
            335.52440690841604
        ],
        "prefix": "",
        "content": "Alice and Mary . . . Alice . . . ",
        "suffix": "Alice",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.2946768908215604,
                55,
                78
            ]
        ]
    },
    {
        "page": 4,
        "index": 62,
        "bbox": [
            408.3665264,
            326.46601248441607,
            486.88468926723203,
            335.52440690841604
        ],
        "prefix": "repre",
        "content": "sents the name values ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.5000000003125382,
                149,
                165
            ]
        ]
    },
    {
        "page": 4,
        "index": 63,
        "bbox": [
            113.42452748000001,
            306.628214164416,
            283.52994235363434,
            315.686608588416
        ],
        "prefix": "",
        "content": "Change which name is direct and indirect object ",
        "suffix": "without",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                178,
                226
            ]
        ]
    },
    {
        "page": 4,
        "index": 64,
        "bbox": [
            294.40147556,
            306.628214164416,
            498.57690245395423,
            315.686608588416
        ],
        "prefix": "",
        "content": "John and Mary . . . Mary . . . The value and position of ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.4964173546864573,
                85,
                136
            ]
        ]
    },
    {
        "page": 4,
        "index": 65,
        "bbox": [
            113.09901956,
            296.709315004416,
            259.7906588622561,
            305.76770942841597
        ],
        "prefix": "",
        "content": "without changing the names or positions ",
        "suffix": "Change",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.8571433895218817,
                165,
                205
            ]
        ]
    },
    {
        "page": 4,
        "index": 66,
        "bbox": [
            408.3665264,
            296.709315004416,
            473.77719253570405,
            305.76770942841597
        ],
        "prefix": "",
        "content": "the indirect object ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                218,
                238
            ]
        ]
    },
    {
        "page": 4,
        "index": 67,
        "bbox": [
            113.42452748000001,
            286.79041584441603,
            285.03907086467274,
            295.848810268416
        ],
        "prefix": "",
        "content": "Change the position of the names without chang",
        "suffix": "ing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                374,
                424
            ]
        ]
    },
    {
        "page": 4,
        "index": 68,
        "bbox": [
            294.40147556,
            286.79041584441603,
            500.07751607423415,
            295.848810268416
        ],
        "prefix": "",
        "content": "Mary and John . . . Mary . . . The value, but not the po",
        "suffix": "sition",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.5278912700185537,
                204,
                261
            ]
        ]
    },
    {
        "page": 4,
        "index": 69,
        "bbox": [
            294.07596764,
            316.547113324416,
            393.745481487272,
            325.60550774841596
        ],
        "prefix": "",
        "content": "Alice and Bob . . . Alice . . . ",
        "suffix": "John",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.31329639275425997,
                57,
                79
            ]
        ]
    },
    {
        "page": 4,
        "index": 70,
        "bbox": [
            113.42452748000001,
            276.871516684416,
            270.6691962862161,
            285.929911108416
        ],
        "prefix": "chang",
        "content": "ing which one is subject and indirect object ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.7500000000000117,
                238,
                279
            ]
        ]
    },
    {
        "page": 4,
        "index": 71,
        "bbox": [
            408.3665264,
            276.871516684416,
            500.07842191367655,
            285.929911108416
        ],
        "prefix": "po",
        "content": "sition of the indirect ob",
        "suffix": "ject",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                474,
                497
            ]
        ]
    },
    {
        "page": 4,
        "index": 72,
        "bbox": [
            408.3665264,
            266.95170828441604,
            487.49160169364006,
            276.010102708416
        ],
        "prefix": "ob",
        "content": "ject (position is fixed) ",
        "suffix": "Specifics",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.6668186469942591,
                297,
                317
            ]
        ]
    },
    {
        "page": 4,
        "index": 73,
        "bbox": [
            113.42452748000001,
            257.032809124416,
            399.08571656039845,
            266.091203548416
        ],
        "prefix": "",
        "content": "Change a name to break the behaviour John and Mary . . . Alice . . . ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.5782153423447683,
                204,
                265
            ]
        ]
    },
    {
        "page": 4,
        "index": 74,
        "bbox": [
            408.3665264,
            257.032809124416,
            500.0784219136765,
            266.091203548416
        ],
        "prefix": "",
        "content": "Specifics about IOI set",
        "suffix": "ting",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                583,
                611
            ]
        ]
    },
    {
        "page": 4,
        "index": 75,
        "bbox": [
            113.42452748000001,
            227.276111644416,
            397.49651184265184,
            236.334506068416
        ],
        "prefix": "",
        "content": "Change all the names Alice and Bob . . . Charlie ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.6208782563510057,
                232,
                279
            ]
        ]
    },
    {
        "page": 4,
        "index": 76,
        "bbox": [
            408.3665264,
            227.276111644416,
            498.57237325674225,
            236.334506068416
        ],
        "prefix": "",
        "content": "Finding and confirming ",
        "suffix": "all",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                674,
                697
            ]
        ]
    },
    {
        "page": 4,
        "index": 77,
        "bbox": [
            294.40147556,
            217.357212484416,
            303.9127897052,
            226.415606908416
        ],
        "prefix": "",
        "content": ". . . ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 4,
        "index": 78,
        "bbox": [
            408.3665264,
            217.357212484416,
            494.457507005696,
            226.415606908416
        ],
        "prefix": "",
        "content": "all relevant components ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                1.0,
                674,
                698
            ]
        ]
    },
    {
        "page": 4,
        "index": 79,
        "bbox": [
            294.07596764,
            247.11390996441602,
            395.7564450494,
            256.172304388416
        ],
        "prefix": "",
        "content": "Alice and Mary . . . John . . . ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.32231301601484297,
                67,
                89
            ]
        ]
    },
    {
        "page": 4,
        "index": 80,
        "bbox": [
            408.3665264,
            247.11390996441602,
            498.57237325674225,
            256.172304388416
        ],
        "prefix": "set",
        "content": "ting (e.g. that a name is ",
        "suffix": "duplicated",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.7777777777777778,
                386,
                407
            ]
        ]
    },
    {
        "page": 4,
        "index": 81,
        "bbox": [
            408.3665264,
            237.19501080441603,
            469.247995323704,
            246.25340522841603
        ],
        "prefix": "",
        "content": "duplicated at all) ",
        "suffix": "Finding",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                59,
                0.75,
                386,
                405
            ]
        ]
    },
    {
        "page": 4,
        "index": 82,
        "bbox": [
            107.532,
            190.1940784,
            504.0020355839997,
            200.1566784
        ],
        "prefix": "",
        "content": "What kind of prompt should you choose? No matter which you choose, keep in mind what properties ",
        "suffix": "your",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                1.0,
                0,
                96
            ]
        ]
    },
    {
        "page": 4,
        "index": 83,
        "bbox": [
            107.751,
            179.2850784,
            505.73894728259967,
            189.2476784
        ],
        "prefix": "",
        "content": "your prompt does and does not change, and take this into account when interpreting patching results. ",
        "suffix": "As",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 4,
        "index": 84,
        "bbox": [
            107.641,
            168.37607839999998,
            504.0005702751998,
            178.3386784
        ],
        "prefix": "",
        "content": "As a rule of thumb you want to choose small (narrow) variations for exploratory patching, this will ",
        "suffix": "help",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 4,
        "index": 85,
        "bbox": [
            108.0,
            157.4670784,
            503.99928280879953,
            167.4296784
        ],
        "prefix": "",
        "content": "help you narrow down what each component is tracking. Choosing a narrow prompt distribution also ",
        "suffix": "helps",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 4,
        "index": 86,
        "bbox": [
            108.0,
            146.5580784,
            504.35287540799965,
            156.5206784
        ],
        "prefix": "",
        "content": "helps increase the (typically low) sensitivity of denoising, and decrease the (typically high) sensitivity ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                0.942253861111102,
                0,
                107
            ]
        ]
    },
    {
        "page": 4,
        "index": 87,
        "bbox": [
            108.0,
            135.64907839999998,
            504.00048828339965,
            145.6116784
        ],
        "prefix": "",
        "content": "of noising. For confirmatory patching you need to choose a wide distribution of prompts that varies ",
        "suffix": "all",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                0.9415728204117109,
                0,
                100
            ]
        ]
    },
    {
        "page": 4,
        "index": 88,
        "bbox": [
            108.0,
            124.7400784,
            504.0020248,
            136.8546
        ],
        "prefix": "",
        "content": "all variables of the hypothesised circuit. Then you can noise (corrupt → clean patch) all noncircuit ",
        "suffix": "components,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 4,
        "index": 89,
        "bbox": [
            108.00000000000006,
            113.8310784,
            411.112105,
            123.79367839999999
        ],
        "prefix": "",
        "content": "components, and check that the model still shows the behaviour in question. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                60,
                1.0,
                0,
                75
            ]
        ]
    },
    {
        "page": 4,
        "index": 90,
        "bbox": [
            120.653,
            80.0262576,
            503.9986667520001,
            90.4584384
        ],
        "prefix": "",
        "content": "2Causal Tracing has been used to describe ROMEstyle Gaussian noise patching in particular, but also to ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 4,
        "index": 91,
        "bbox": [
            108.0,
            70.0632576,
            478.3786432000002,
            80.9664
        ],
        "prefix": "",
        "content": "describe clean → corrupted patching in general. We recommend avoiding the name to avoid confusion. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                0.040600627509837055,
                284,
                381
            ]
        ]
    },
    {
        "page": 4,
        "index": 92,
        "bbox": [
            303.509,
            39.96007839999999,
            308.4903,
            49.922678399999995
        ],
        "prefix": "",
        "content": "5 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 5,
        "index": 0,
        "bbox": [
            108.0,
            707.5383632,
            335.20857600000005,
            719.4935632
        ],
        "prefix": "",
        "content": "3 How do you interpret patching evidence? ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                61,
                0.8571428571428571,
                0,
                39
            ]
        ]
    },
    {
        "page": 5,
        "index": 1,
        "bbox": [
            108.0,
            673.7630783999999,
            504.0040285038,
            696.7876
        ],
        "prefix": "",
        "content": "In the previous section we said that denoising (clean → corrupt patching) tests whether the patched activations are sufficient to restore model behaviour. And noising (corrupt → clean patching) tests ",
        "suffix": "whether",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                62,
                1.0,
                0,
                200
            ]
        ]
    },
    {
        "page": 5,
        "index": 2,
        "bbox": [
            107.641,
            662.8540783999999,
            504.3444228,
            672.8864166
        ],
        "prefix": "",
        "content": "whether the patched activations are necessary to maintain model behaviour. These two are usually ",
        "suffix": "not",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                62,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 5,
        "index": 3,
        "bbox": [
            108.0,
            651.9450783999999,
            503.9973699895997,
            661.9076784
        ],
        "prefix": "",
        "content": "not complements of each other, nor does one imply the other. In this section we will walk through a ",
        "suffix": "madeup",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                62,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 5,
        "index": 4,
        "bbox": [
            108.0,
            641.0360784,
            228.60723560000005,
            650.9986784
        ],
        "prefix": "",
        "content": "madeup example experiment. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                62,
                1.0,
                0,
                26
            ]
        ]
    },
    {
        "page": 5,
        "index": 5,
        "bbox": [
            108.0,
            616.4818166,
            267.13260980000007,
            626.4444166
        ],
        "prefix": "",
        "content": "3.1 Walkthrough a stylized example ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                63,
                0.6666666666666666,
                0,
                30
            ]
        ]
    },
    {
        "page": 5,
        "index": 6,
        "bbox": [
            108.0,
            596.3710784,
            505.7685608679997,
            606.3336784
        ],
        "prefix": "",
        "content": "Consider the hypothetical ''Nobel Peace Prize'' circuit. The model correctly completes ''Nobel Peace'' ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                64,
                0.552712233431564,
                0,
                92
            ]
        ]
    },
    {
        "page": 5,
        "index": 7,
        "bbox": [
            107.641,
            585.4620784,
            270.10111820000003,
            595.4246784000001
        ],
        "prefix": "",
        "content": "with ''Prize'', using the following circuit: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                64,
                0.5278912700185537,
                7,
                49
            ]
        ]
    },
    {
        "page": 5,
        "index": 8,
        "bbox": [
            135.397,
            565.0140784,
            503.99519286479983,
            574.9766784000001
        ],
        "prefix": "",
        "content": "• Attention head L0H0 is a ''Previous Token Head'' and copies the embedding of ''Nobel'' to ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.5598770130516252,
                0,
                86
            ]
        ]
    },
    {
        "page": 5,
        "index": 9,
        "bbox": [
            143.866,
            554.1050783999999,
            236.00012480000004,
            564.0676784
        ],
        "prefix": "",
        "content": "the position of ''Peace'' ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.5,
                0,
                16
            ]
        ]
    },
    {
        "page": 5,
        "index": 10,
        "bbox": [
            135.39700000000002,
            539.0640783999999,
            460.1379096,
            549.0266783999999
        ],
        "prefix": "",
        "content": "• Neuron L1N42 maps the mix of Nobel and Peace embeddings to the Prize logit ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.8666685024299566,
                110,
                185
            ]
        ]
    },
    {
        "page": 5,
        "index": 11,
        "bbox": [
            135.39700000000002,
            524.0220783999998,
            467.8091116,
            533.9846783999999
        ],
        "prefix": "",
        "content": "• Everything else doesn't matter (of course a real circuit is typically much messier) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                65,
                0.8750017210280844,
                110,
                193
            ]
        ]
    },
    {
        "page": 5,
        "index": 12,
        "bbox": [
            222.952,
            320.1180784,
            389.04846720000006,
            330.0806784
        ],
        "prefix": "",
        "content": "Figure 1: Toy \"Nobel Peace Price\" circuit ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                66,
                0.75,
                0,
                31
            ]
        ]
    },
    {
        "page": 5,
        "index": 13,
        "bbox": [
            108.0,
            289.47007840000003,
            503.99679215879974,
            299.4326784
        ],
        "prefix": "",
        "content": "Now let us run the standard patching examples, take a distribution of random English words for the ",
        "suffix": "corrupted",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                67,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 5,
        "index": 14,
        "bbox": [
            108.0,
            278.56107840000004,
            241.34940100000003,
            288.5236784
        ],
        "prefix": "",
        "content": "corrupted prompt. We would find ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                67,
                1.0,
                0,
                31
            ]
        ]
    },
    {
        "page": 5,
        "index": 15,
        "bbox": [
            135.397,
            258.11407840000004,
            503.998577466,
            270.22860000000003
        ],
        "prefix": "",
        "content": "• Noising (corrupt → clean patching) suggests that the outputs of head L0H0, the output of ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.9411764705882353,
                0,
                89
            ]
        ]
    },
    {
        "page": 5,
        "index": 16,
        "bbox": [
            143.866,
            247.2050784,
            477.812352,
            257.1676784
        ],
        "prefix": "",
        "content": "neuron L1N42, and the embeddings (Nobel & Peace) are all necessary components. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                1.0,
                89,
                168
            ]
        ]
    },
    {
        "page": 5,
        "index": 17,
        "bbox": [
            135.39700000000002,
            232.1630784,
            504.00048584000007,
            244.2776
        ],
        "prefix": "",
        "content": "• Denoising (clean → corrupt patching) suggests that the output of neuron L1N42 is sufficient ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                0.8750345677731343,
                89,
                181
            ]
        ]
    },
    {
        "page": 5,
        "index": 18,
        "bbox": [
            143.866,
            221.2540784,
            226.3164776,
            231.2166784
        ],
        "prefix": "",
        "content": "to restore the circuit. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                68,
                1.0,
                181,
                204
            ]
        ]
    },
    {
        "page": 5,
        "index": 19,
        "bbox": [
            107.532,
            200.8070784,
            503.99665577999986,
            210.7696784
        ],
        "prefix": "",
        "content": "What happened here? Denoising finds only the neuron output L1N42, because the other two ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.9353464922281546,
                0,
                88
            ]
        ]
    },
    {
        "page": 5,
        "index": 20,
        "bbox": [
            108.0,
            189.8980784,
            503.99721058799986,
            199.8606784
        ],
        "prefix": "",
        "content": "components individually are not sufficient to restore the circuit behaviour! We're dealing with an ",
        "suffix": "AND",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 5,
        "index": 21,
        "bbox": [
            107.641,
            178.98907839999998,
            504.00174586199967,
            188.9516784
        ],
        "prefix": "",
        "content": "AND circuit between the attention head output and the ''Peace'' embedding. Noising finds all three ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                0.7346183422304683,
                0,
                97
            ]
        ]
    },
    {
        "page": 5,
        "index": 22,
        "bbox": [
            108.0,
            168.0800784,
            178.2761804,
            178.0426784
        ],
        "prefix": "",
        "content": "components here. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                69,
                1.0,
                97,
                113
            ]
        ]
    },
    {
        "page": 5,
        "index": 23,
        "bbox": [
            108.0,
            151.69107839999998,
            503.9984060999997,
            161.6536784
        ],
        "prefix": "",
        "content": "Nonetheless denoising L1N42 alone restored the model behaviour. This is a crucial intuition to keep ",
        "suffix": "in",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                70,
                0.9386447274305458,
                0,
                100
            ]
        ]
    },
    {
        "page": 5,
        "index": 24,
        "bbox": [
            108.0,
            140.7820784,
            504.3500659547997,
            150.7446784
        ],
        "prefix": "",
        "content": "in mind about denoising: If you patch component A in layer N, it has seen clean versions of every ",
        "suffix": "component",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                70,
                0.9509157819444367,
                0,
                98
            ]
        ]
    },
    {
        "page": 5,
        "index": 25,
        "bbox": [
            108.0,
            129.8730784,
            504.35202858699995,
            139.8356784
        ],
        "prefix": "",
        "content": "component in layers 0 to N1. If there's an important component B in layer N1 that is mediated by ",
        "suffix": "component",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                70,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 5,
        "index": 26,
        "bbox": [
            108.0,
            118.9640784,
            355.10236780000014,
            128.92667840000001
        ],
        "prefix": "",
        "content": "component A, the model can be restored without denoising B. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                70,
                1.0,
                0,
                59
            ]
        ]
    },
    {
        "page": 5,
        "index": 27,
        "bbox": [
            108.0,
            102.57507840000001,
            504.0041047072,
            112.5376784
        ],
        "prefix": "",
        "content": "Patching experiments are sensitive to what precisely are the changes between the corrupt and clean ",
        "suffix": "prompt.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 5,
        "index": 28,
        "bbox": [
            108.0,
            91.6660784,
            504.16876655999977,
            101.6286784
        ],
        "prefix": "",
        "content": "prompt. If we created two additional corrupt distributions where we replace only either ''Nobel'' or ",
        "suffix": "''Peace''",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                0.6611565080074214,
                0,
                99
            ]
        ]
    },
    {
        "page": 5,
        "index": 29,
        "bbox": [
            106.675,
            80.75707840000001,
            504.0034131999999,
            90.7196784
        ],
        "prefix": "",
        "content": "''Peace'' with a random word (i.e. distributions ''X Peace'' and ''Nobel Y'') we could narrow down ",
        "suffix": "which",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 5,
        "index": 30,
        "bbox": [
            107.641,
            69.8480784,
            278.6490290000001,
            79.8106784
        ],
        "prefix": "",
        "content": "which component depends on which input. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                71,
                1.0,
                192,
                231
            ]
        ]
    },
    {
        "page": 5,
        "index": 31,
        "bbox": [
            303.509,
            39.96007839999999,
            308.4903,
            49.922678399999995
        ],
        "prefix": "",
        "content": "6 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 6,
        "index": 0,
        "bbox": [
            107.641,
            707.8850784,
            504.00403725999973,
            717.8476784000001
        ],
        "prefix": "",
        "content": "Alternatively we could use path patching to confirm the precise interactions. Say we want to test ",
        "suffix": "whether",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                0,
                98
            ]
        ]
    },
    {
        "page": 6,
        "index": 1,
        "bbox": [
            107.641,
            696.9760784,
            504.17320220799974,
            706.9386784000001
        ],
        "prefix": "",
        "content": "whether the Peace embedding is necessary as an input to L0H0, as an input to L1N42, or both. For ",
        "suffix": "this",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 6,
        "index": 2,
        "bbox": [
            108.0,
            686.0670784,
            503.9977846,
            698.1816
        ],
        "prefix": "",
        "content": "this we could patch only the corresponding paths, and find that denoising (1) ''Nobel → L0H0'' and ",
        "suffix": "(2)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.7882858882752508,
                0,
                97
            ]
        ]
    },
    {
        "page": 6,
        "index": 3,
        "bbox": [
            107.671,
            675.1580783999999,
            504.0020305836,
            687.2725999999999
        ],
        "prefix": "",
        "content": "(2) ''Peace → L1N42'' paths is sufficient. Alternatively we might find that noising every path except ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.7987205050442038,
                0,
                100
            ]
        ]
    },
    {
        "page": 6,
        "index": 4,
        "bbox": [
            108.0,
            664.2490783999999,
            505.7478707520001,
            676.3635999999999
        ],
        "prefix": "",
        "content": "for (1) ''Nobel → L0H0'', (2) ''L0 → L1N42'', and (3) ''Peace → L1N42'' does not break performance. ",
        "suffix": "Note",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.5329725108090081,
                0,
                94
            ]
        ]
    },
    {
        "page": 6,
        "index": 5,
        "bbox": [
            108.0,
            653.3400783999999,
            504.6656213471999,
            663.3026784
        ],
        "prefix": "",
        "content": "Note again that denoising only required restoring two paths (restoring a crosssection of the circuit) ",
        "suffix": "while",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                1.0,
                291,
                393
            ]
        ]
    },
    {
        "page": 6,
        "index": 6,
        "bbox": [
            107.641,
            642.4310783999999,
            354.9709,
            653.6654592
        ],
        "prefix": "",
        "content": "while noising required leaving 3 paths clean (the full circuit).4 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.9166666666666666,
                291,
                356
            ]
        ]
    },
    {
        "page": 6,
        "index": 7,
        "bbox": [
            107.99999999999997,
            611.5888166,
            215.0879874,
            621.5514165999999
        ],
        "prefix": "",
        "content": "3.2 Concepts & gotchas ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                73,
                0.6,
                0,
                18
            ]
        ]
    },
    {
        "page": 6,
        "index": 8,
        "bbox": [
            107.691,
            588.9620784,
            504.0005480605997,
            598.9246784000001
        ],
        "prefix": "",
        "content": "The walkthrough above presents a typical circuit discovery workflow. We want to highlight a couple ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 6,
        "index": 9,
        "bbox": [
            108.0,
            578.0530784,
            279.0080290000001,
            588.0156784000001
        ],
        "prefix": "",
        "content": "of additional concepts and common issues. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                74,
                1.0,
                0,
                41
            ]
        ]
    },
    {
        "page": 6,
        "index": 10,
        "bbox": [
            108.0,
            548.4860784,
            503.996155112,
            558.5184166
        ],
        "prefix": "",
        "content": "Sensitivity & prompt choice: A positive patching result implies you have found activations dealing ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                75,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 6,
        "index": 11,
        "bbox": [
            107.641,
            537.5770784,
            504.00184490000004,
            547.7688182
        ],
        "prefix": "",
        "content": "with the difference between the clean and corrupt prompt. Make sure to consider all degrees of ",
        "suffix": "freedom",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                75,
                1.0,
                0,
                95
            ]
        ]
    },
    {
        "page": 6,
        "index": 12,
        "bbox": [
            108.0,
            526.6680784,
            423.88415820000006,
            536.6306784000001
        ],
        "prefix": "",
        "content": "freedom in a task, and consider multiple sets of corrupted prompts if necessary. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                75,
                1.0,
                0,
                80
            ]
        ]
    },
    {
        "page": 6,
        "index": 13,
        "bbox": [
            108.0,
            497.1010784,
            504.0013415520002,
            507.1334166
        ],
        "prefix": "",
        "content": "Scope of activation patching: More generally, activation patching is always based on prompt ",
        "suffix": "distributions,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                1.0,
                0,
                92
            ]
        ]
    },
    {
        "page": 6,
        "index": 14,
        "bbox": [
            108.0,
            486.1920784,
            505.7455273367996,
            496.15467839999997
        ],
        "prefix": "",
        "content": "distributions, and does not make statements for model behaviour outside these specific distributions. ",
        "suffix": "For",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                1.0,
                0,
                102
            ]
        ]
    },
    {
        "page": 6,
        "index": 15,
        "bbox": [
            108.0,
            475.2830784,
            504.3528754079996,
            485.2456784
        ],
        "prefix": "",
        "content": "For more discussion on the limitations of patching, and the specificity of promptbased interpretability ",
        "suffix": "in",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                1.0,
                0,
                104
            ]
        ]
    },
    {
        "page": 6,
        "index": 16,
        "bbox": [
            108.0,
            464.37407840000003,
            444.02853539999995,
            474.3366784
        ],
        "prefix": "",
        "content": "in general, see Neel Nanda's writing on What Can('t) Activation Patching Teach Us. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                76,
                1.0,
                0,
                82
            ]
        ]
    },
    {
        "page": 6,
        "index": 17,
        "bbox": [
            108.0,
            434.8070784,
            504.00042197199997,
            444.8394166
        ],
        "prefix": "",
        "content": "No minimality: Here, and in many parts of the literature, a circuit is treated as a collection of model ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                77,
                1.0,
                0,
                104
            ]
        ]
    },
    {
        "page": 6,
        "index": 18,
        "bbox": [
            108.0,
            423.89807840000003,
            503.99721058799986,
            433.8606784
        ],
        "prefix": "",
        "content": "components that are responsible for a particular model behaviour. We typically make no claims ",
        "suffix": "that",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                77,
                0.9334985834784444,
                0,
                94
            ]
        ]
    },
    {
        "page": 6,
        "index": 19,
        "bbox": [
            108.0,
            412.98907840000004,
            503.9992042360002,
            423.18081820000003
        ],
        "prefix": "",
        "content": "that we have found the smallest such collection of components, we only test that this collection is ",
        "suffix": "sufficient.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                77,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 6,
        "index": 20,
        "bbox": [
            108.0,
            402.08007840000005,
            147.3223822,
            412.0426784
        ],
        "prefix": "",
        "content": "sufficient. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                77,
                1.0,
                0,
                11
            ]
        ]
    },
    {
        "page": 6,
        "index": 21,
        "bbox": [
            108.0,
            372.51307840000004,
            505.24783620800014,
            382.5454166
        ],
        "prefix": "",
        "content": "Backup behaviour & ORgates: In some cases researchers have discovered ''Backup heads'', ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                0.6911919627447628,
                0,
                78
            ]
        ]
    },
    {
        "page": 6,
        "index": 22,
        "bbox": [
            108.0,
            361.6040784,
            503.9972105879998,
            371.5666784
        ],
        "prefix": "",
        "content": "components that are not normally doing the task but jump into action of other components are ",
        "suffix": "disrupted",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                1.0,
                86,
                179
            ]
        ]
    },
    {
        "page": 6,
        "index": 23,
        "bbox": [
            108.0,
            350.6950784,
            504.16453245499997,
            360.6576784
        ],
        "prefix": "",
        "content": "disrupted (Hydra effect, McGrath et al., 2023). For example, in IOI when one ablates a name mover ",
        "suffix": "head",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 24,
        "bbox": [
            108.0,
            339.7860784,
            504.2491049663999,
            349.7486784
        ],
        "prefix": "",
        "content": "head (a key component of the circuit) a backup name mover head will activate and then do the task ",
        "suffix": "instead",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                79,
                1.0,
                50,
                148
            ]
        ]
    },
    {
        "page": 6,
        "index": 25,
        "bbox": [
            108.0,
            328.8770784,
            217.5985626,
            338.8396784
        ],
        "prefix": "",
        "content": "instead (Wang et al., 2022). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                78,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 26,
        "bbox": [
            108.0,
            312.4880784,
            503.9955368711998,
            322.4506784
        ],
        "prefix": "",
        "content": "It can be helpful to think of these as ORgates where either component is sufficient for the model to ",
        "suffix": "work.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 6,
        "index": 27,
        "bbox": [
            107.641,
            301.5790784,
            504.0040372599996,
            311.5416784
        ],
        "prefix": "",
        "content": "work. This does not fit well into our attempts of defining a circuit, nor plays well with the circuit ",
        "suffix": "finding",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                102
            ]
        ]
    },
    {
        "page": 6,
        "index": 28,
        "bbox": [
            108.0,
            290.6700784,
            503.9968519343999,
            300.63267840000003
        ],
        "prefix": "",
        "content": "finding methods above. Despite the name mover heads being important, if we ablate them then, due ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                0.9415728204117109,
                0,
                97
            ]
        ]
    },
    {
        "page": 6,
        "index": 29,
        "bbox": [
            108.0,
            279.76107840000003,
            504.1698823711998,
            289.72367840000004
        ],
        "prefix": "",
        "content": "to backup heads compensating, the name movers look less important. Fortunately, backup behaviour ",
        "suffix": "seems",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 6,
        "index": 30,
        "bbox": [
            108.0,
            268.85207840000004,
            503.99890422999994,
            278.81467840000005
        ],
        "prefix": "",
        "content": "seems to be lossy, i.e. if the original component boosted the logits by +X, the backup compensates ",
        "suffix": "for",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 6,
        "index": 31,
        "bbox": [
            108.0,
            257.94307840000005,
            504.0002989939997,
            267.90567840000006
        ],
        "prefix": "",
        "content": "for this by boosting less than X (the Hydra effect paper found 0.7*X). Thus these backup component ",
        "suffix": "weaken",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 6,
        "index": 32,
        "bbox": [
            107.641,
            247.0340784,
            504.0040372599997,
            256.9966784
        ],
        "prefix": "",
        "content": "weaken the visibility of the original component, but it is usually still visible since even 0.3*X is a ",
        "suffix": "relatively",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                103
            ]
        ]
    },
    {
        "page": 6,
        "index": 33,
        "bbox": [
            108.0,
            236.12507839999998,
            194.8639094,
            246.0876784
        ],
        "prefix": "",
        "content": "relatively large effect. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                80,
                1.0,
                0,
                24
            ]
        ]
    },
    {
        "page": 6,
        "index": 34,
        "bbox": [
            108.0,
            206.5580784,
            505.24864189560003,
            216.5904166
        ],
        "prefix": "",
        "content": "Negative components: Some work in this area (e.g. Wang et al., 2022; Heimersheim and Janiak, ",
        "suffix": "2023)",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 35,
        "bbox": [
            108.0,
            195.64907839999998,
            503.9947498257998,
            205.6116784
        ],
        "prefix": "",
        "content": "2023) noticed attention heads that consistently negatively affected performance, and noising them ",
        "suffix": "would",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                0.7694214424751281,
                75,
                167
            ]
        ]
    },
    {
        "page": 6,
        "index": 36,
        "bbox": [
            107.641,
            184.73907839999998,
            504.00174586199955,
            194.7016784
        ],
        "prefix": "",
        "content": "would increase performance. This is problematic, because it makes it hard to judge the quality of a ",
        "suffix": "circuit",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                1.0,
                167,
                267
            ]
        ]
    },
    {
        "page": 6,
        "index": 37,
        "bbox": [
            108.0,
            173.8300784,
            505.24786557900006,
            183.7926784
        ],
        "prefix": "",
        "content": "circuit analysis: it may look like we've fully recovered (or more than fully recovered!) performance, ",
        "suffix": "by",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                1.0,
                167,
                269
            ]
        ]
    },
    {
        "page": 6,
        "index": 38,
        "bbox": [
            108.0,
            162.9210784,
            505.7424787811996,
            172.8836784
        ],
        "prefix": "",
        "content": "by finding half the positive components but excluding all negative ones. This is an unsolved problem. ",
        "suffix": "Conmy",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                0.9411764705882353,
                167,
                269
            ]
        ]
    },
    {
        "page": 6,
        "index": 39,
        "bbox": [
            108.0,
            152.01207839999998,
            505.24711838399975,
            161.9746784
        ],
        "prefix": "",
        "content": "Conmy et al. (2023) propose using Kullback Leibler (KL) divergence as a metric to address this, ",
        "suffix": "which",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 40,
        "bbox": [
            107.641,
            141.1030784,
            504.00302107479985,
            151.0656784
        ],
        "prefix": "",
        "content": "which penalises any deviation (positive or negative), at the cost of also tracking lots of variation we ",
        "suffix": "may",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                1.0,
                254,
                358
            ]
        ]
    },
    {
        "page": 6,
        "index": 41,
        "bbox": [
            108.0,
            130.1940784,
            186.5750262,
            140.1566784
        ],
        "prefix": "",
        "content": "may not care about. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                1.0,
                254,
                273
            ]
        ]
    },
    {
        "page": 6,
        "index": 42,
        "bbox": [
            120.653,
            99.9512576,
            504.1489020159999,
            110.3834384
        ],
        "prefix": "",
        "content": "4This method doesn't yet confirm which information is carried in the different paths. We can go a step further ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.8580153230048136,
                98,
                203
            ]
        ]
    },
    {
        "page": 6,
        "index": 43,
        "bbox": [
            108.0,
            89.9882576,
            503.999976,
            100.8914
        ],
        "prefix": "",
        "content": "and noise (corrupt → clean patch) even some of the important circuit connections, namely ''Nobel → L0H0 → ",
        "suffix": "L1N42''",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.8349036109623383,
                98,
                203
            ]
        ]
    },
    {
        "page": 6,
        "index": 44,
        "bbox": [
            108.0,
            80.0262576,
            505.570806976,
            90.92939999999999
        ],
        "prefix": "",
        "content": "L1N42'' path from the ''Nobel Y'' distribution, and the ''Peace → L1N42'' path from the ''X Peace'' distribution. ",
        "suffix": "Doing",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                0.4611904384945945,
                11,
                111
            ]
        ]
    },
    {
        "page": 6,
        "index": 45,
        "bbox": [
            108.0,
            70.0632576,
            331.6489152000002,
            79.02965760000001
        ],
        "prefix": "",
        "content": "Doing that is essentially Causal Scrubbing (Chan et al., 2022). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                72,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 6,
        "index": 46,
        "bbox": [
            303.509,
            39.96007839999999,
            308.4903,
            49.922678399999995
        ],
        "prefix": "",
        "content": "7 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 7,
        "index": 0,
        "bbox": [
            108.0,
            707.5383632,
            272.3720448,
            719.4935632
        ],
        "prefix": "",
        "content": "4 Metrics and common pitfalls ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                82,
                0.8,
                0,
                27
            ]
        ]
    },
    {
        "page": 7,
        "index": 1,
        "bbox": [
            108.0,
            684.7040784,
            504.00139487999996,
            694.6666784
        ],
        "prefix": "",
        "content": "So far we talked about ''preserving'' and ''restoring'' performance, but in practice, model performance ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                0.549851168540127,
                51,
                142
            ]
        ]
    },
    {
        "page": 7,
        "index": 2,
        "bbox": [
            108.0,
            673.7950784,
            503.9972105879997,
            683.7576784
        ],
        "prefix": "",
        "content": "is not binary but a scale. Typically we find some components matter a lot, while others provide a ",
        "suffix": "small",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                1.0,
                152,
                235
            ]
        ]
    },
    {
        "page": 7,
        "index": 3,
        "bbox": [
            108.0,
            662.8860784,
            505.7468423999998,
            672.8486784
        ],
        "prefix": "",
        "content": "small increase in performance. For the best interpretability we might look for a circuit restoring e.g. ",
        "suffix": "90%",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 4,
        "bbox": [
            108.0,
            651.9770784,
            505.24578339559986,
            661.9396784
        ],
        "prefix": "",
        "content": "90% of the model's performance, rather than reaching exactly 100% (for examples see Chan et al., ",
        "suffix": "2022).",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 5,
        "bbox": [
            108.0,
            641.0680784,
            504.0013948800001,
            651.0306784
        ],
        "prefix": "",
        "content": "2022). A useful framing is the ''pareto frontier'' of circuit size vs. performance recovered  recovering ",
        "suffix": "80%",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 6,
        "bbox": [
            108.0,
            630.1590784,
            503.9976887927998,
            640.1216784000001
        ],
        "prefix": "",
        "content": "80% of performance with 1% of the components is more impressive than 90% of the performance ",
        "suffix": "with",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                1.0,
                426,
                518
            ]
        ]
    },
    {
        "page": 7,
        "index": 7,
        "bbox": [
            107.641,
            619.2490783999999,
            503.99761138299976,
            629.2116784
        ],
        "prefix": "",
        "content": "with 10% of the components, but there will always be a minimum circuit size to recover a given level ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                1.0,
                426,
                527
            ]
        ]
    },
    {
        "page": 7,
        "index": 8,
        "bbox": [
            108.0,
            608.3400783999999,
            171.6211636,
            618.3026784
        ],
        "prefix": "",
        "content": "of performance. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                1.0,
                426,
                441
            ]
        ]
    },
    {
        "page": 7,
        "index": 9,
        "bbox": [
            108.0,
            591.9520784,
            503.99958168679973,
            601.9146784000001
        ],
        "prefix": "",
        "content": "It's easy to treat metrics as an afterthought, but we believe that the right or wrong choice of a metric ",
        "suffix": "can",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                0,
                105
            ]
        ]
    },
    {
        "page": 7,
        "index": 10,
        "bbox": [
            108.0,
            581.0430784,
            505.2413400759997,
            591.0056784000001
        ],
        "prefix": "",
        "content": "can significantly change the interpretation of patching results. Especially for exploratory patching, ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.9233912901106511,
                0,
                102
            ]
        ]
    },
    {
        "page": 7,
        "index": 11,
        "bbox": [
            108.0,
            570.1340783999999,
            505.2471183839998,
            580.0966784
        ],
        "prefix": "",
        "content": "the wrong metric can be misleading. The choice of metric matters less for confirmatory patching, ",
        "suffix": "where",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                207,
                304
            ]
        ]
    },
    {
        "page": 7,
        "index": 12,
        "bbox": [
            107.641,
            559.2250783999999,
            505.7390838255998,
            569.1876784
        ],
        "prefix": "",
        "content": "where you expect a binaryish answer (''have I found the circuit or not'') and all metrics should agree. ",
        "suffix": "We'll",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                0.7380178304732208,
                0,
                102
            ]
        ]
    },
    {
        "page": 7,
        "index": 13,
        "bbox": [
            107.532,
            548.3150784,
            342.93827540000007,
            558.2776784
        ],
        "prefix": "",
        "content": "We'll go through a couple of metric choices in this section: ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                84,
                1.0,
                309,
                369
            ]
        ]
    },
    {
        "page": 7,
        "index": 14,
        "bbox": [
            113.978,
            522.7550784,
            150.7798444,
            532.7176784000001
        ],
        "prefix": "",
        "content": "Based on ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                85,
                1.0,
                24,
                32
            ]
        ]
    },
    {
        "page": 7,
        "index": 15,
        "bbox": [
            284.3085722,
            522.7550784,
            319.72561520000005,
            532.7176784000001
        ],
        "prefix": "",
        "content": "Example ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 7,
        "index": 16,
        "bbox": [
            113.978,
            506.6410784,
            389.45385260000006,
            516.6036784
        ],
        "prefix": "",
        "content": "Logit difference (= Logprob difference) Logit(Mary)  Logit(John) ",
        "suffix": "Logarithmic",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                85,
                0.9642300599738757,
                40,
                101
            ]
        ]
    },
    {
        "page": 7,
        "index": 17,
        "bbox": [
            113.978,
            495.73207840000003,
            346.83384980000017,
            505.69467840000004
        ],
        "prefix": "",
        "content": "Logarithmic probability (logsoftmax) Logprob(Mary) ",
        "suffix": "Probability",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                85,
                0.9437900942446619,
                40,
                93
            ]
        ]
    },
    {
        "page": 7,
        "index": 18,
        "bbox": [
            113.978,
            484.82307840000004,
            331.34200680000004,
            494.78567840000005
        ],
        "prefix": "",
        "content": "Probability (softmax) Prob(Mary) ",
        "suffix": "Accuracy",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                85,
                0.9344217766187722,
                40,
                75
            ]
        ]
    },
    {
        "page": 7,
        "index": 19,
        "bbox": [
            113.978,
            473.9130784,
            349.77281680000016,
            483.87567839999997
        ],
        "prefix": "",
        "content": "Accuracy / Rank of correct answer Rank(Mary)==0 ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                85,
                0.9562811844125148,
                40,
                90
            ]
        ]
    },
    {
        "page": 7,
        "index": 20,
        "bbox": [
            107.641,
            447.2420784,
            504.0040372599998,
            457.20467840000003
        ],
        "prefix": "",
        "content": "An honourable mention goes to the KL divergence. Unlike the previous metrics, this metric aims ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                1.0,
                0,
                95
            ]
        ]
    },
    {
        "page": 7,
        "index": 21,
        "bbox": [
            108.0,
            436.33307840000003,
            503.9947498257998,
            446.29567840000004
        ],
        "prefix": "",
        "content": "to compare the full model output, rather than focusing on a specific task. KL divergence is a good ",
        "suffix": "metric",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 7,
        "index": 22,
        "bbox": [
            108.0,
            425.42407840000004,
            190.45047760000003,
            435.38667840000005
        ],
        "prefix": "",
        "content": "metric in such cases. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                86,
                1.0,
                0,
                21
            ]
        ]
    },
    {
        "page": 7,
        "index": 23,
        "bbox": [
            108.0,
            409.03507840000003,
            503.99721058799986,
            418.99767840000004
        ],
        "prefix": "",
        "content": "In addition to these output based metrics, in some cases it makes sense to consider some model ",
        "suffix": "internals",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                1.0,
                0,
                95
            ]
        ]
    },
    {
        "page": 7,
        "index": 24,
        "bbox": [
            108.0,
            398.12607840000004,
            504.1699321841997,
            408.08867840000005
        ],
        "prefix": "",
        "content": "internals as metrics themselves. For example, one might use the attention paid by the name mover ",
        "suffix": "head",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 7,
        "index": 25,
        "bbox": [
            108.0,
            387.21707840000005,
            503.99499889079954,
            397.17967840000006
        ],
        "prefix": "",
        "content": "head to the indirect object as a metric to identify the subcircuit controlling this head, or the activation ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                1.0,
                0,
                108
            ]
        ]
    },
    {
        "page": 7,
        "index": 26,
        "bbox": [
            108.0,
            376.3080784,
            439.75458,
            386.27067839999995
        ],
        "prefix": "",
        "content": "of a key neuron or SAE feature, or the projection onto a probe (Nanda et al., 2023). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 7,
        "index": 27,
        "bbox": [
            108.0,
            359.9200784,
            504.0013948799996,
            369.88267840000003
        ],
        "prefix": "",
        "content": "In our experience, it's worth implementing many metrics and briefly analysing all of them. Computing ",
        "suffix": "a",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                88,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 7,
        "index": 28,
        "bbox": [
            108.0,
            349.01107840000003,
            503.9975493163997,
            358.97367840000004
        ],
        "prefix": "",
        "content": "a metric is cheap (compared to the cost of the forward pass), and they all have different strengths and ",
        "suffix": "weaknesses,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                88,
                1.0,
                0,
                104
            ]
        ]
    },
    {
        "page": 7,
        "index": 29,
        "bbox": [
            107.641,
            338.1010784,
            504.16822090799974,
            348.06367839999996
        ],
        "prefix": "",
        "content": "weaknesses, and can illuminate different parts of the big picture. And if they all agree that's stronger ",
        "suffix": "evidence",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                88,
                1.0,
                0,
                105
            ]
        ]
    },
    {
        "page": 7,
        "index": 30,
        "bbox": [
            108.0,
            327.1920784,
            504.1694046908,
            337.2244166
        ],
        "prefix": "",
        "content": "evidence than any metric on its own. Where they disagree, we personally trust logit difference (or ",
        "suffix": "equivalently",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                88,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 7,
        "index": 31,
        "bbox": [
            108.0,
            316.2830784,
            275.2023158000001,
            326.2456784
        ],
        "prefix": "",
        "content": "equivalently logprob difference) the most. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                88,
                1.0,
                0,
                42
            ]
        ]
    },
    {
        "page": 7,
        "index": 32,
        "bbox": [
            108.0,
            291.78181659999996,
            213.24490640000005,
            301.74441659999997
        ],
        "prefix": "",
        "content": "4.1 The logit difference ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                89,
                0.6,
                0,
                20
            ]
        ]
    },
    {
        "page": 7,
        "index": 33,
        "bbox": [
            108.0,
            271.69107840000004,
            503.9972105879997,
            281.6536784
        ],
        "prefix": "",
        "content": "Logit difference measures to what extent the model knows the correct answer, and it allows us to ",
        "suffix": "be",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 7,
        "index": 34,
        "bbox": [
            108.0,
            260.78207840000005,
            505.2471183839997,
            270.7446784
        ],
        "prefix": "",
        "content": "be specific: We can control for things we don't want to measure (e.g. components that boost both, ",
        "suffix": "Mary",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                0.958825489677934,
                0,
                98
            ]
        ]
    },
    {
        "page": 7,
        "index": 35,
        "bbox": [
            108.0,
            249.8730784,
            504.1693942038,
            259.8356784
        ],
        "prefix": "",
        "content": "Mary and John, in the IOI example) by choosing the right logits to compare (e.g. Mary vs John, or ",
        "suffix": "multiplechoice",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                0,
                98
            ]
        ]
    },
    {
        "page": 7,
        "index": 36,
        "bbox": [
            108.0,
            238.9640784,
            504.00410470719976,
            248.92667840000001
        ],
        "prefix": "",
        "content": "multiplechoice answers). The metric also is a mostly linear function of the residual stream (unlike ",
        "suffix": "probabilitybased",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                0,
                100
            ]
        ]
    },
    {
        "page": 7,
        "index": 37,
        "bbox": [
            108.0,
            228.05507839999999,
            503.99721058799975,
            238.0176784
        ],
        "prefix": "",
        "content": "probabilitybased metrics) which makes it easy to directly attribute logit difference to individual ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 7,
        "index": 38,
        "bbox": [
            108.0,
            217.1460784,
            503.9972105879998,
            227.1086784
        ],
        "prefix": "",
        "content": "components (''direct logit attribution'', ''logit lens''). It's also a ''softer'' metric, allowing us to see ",
        "suffix": "partial",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                0.4758612675492057,
                0,
                103
            ]
        ]
    },
    {
        "page": 7,
        "index": 39,
        "bbox": [
            108.0,
            206.2370784,
            505.74504913199974,
            216.1996784
        ],
        "prefix": "",
        "content": "partial effects on the model even if they don't change the rank of the output tokens (unlike e.g. ",
        "suffix": "accuracy),",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                103,
                201
            ]
        ]
    },
    {
        "page": 7,
        "index": 40,
        "bbox": [
            108.0,
            195.3270784,
            504.00139487999974,
            205.2896784
        ],
        "prefix": "",
        "content": "accuracy), which is crucial for exploratory patching. We discuss problems with this and other metrics ",
        "suffix": "in",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                103,
                205
            ]
        ]
    },
    {
        "page": 7,
        "index": 41,
        "bbox": [
            108.0,
            184.41807839999998,
            183.118004,
            194.3806784
        ],
        "prefix": "",
        "content": "in the next section. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                90,
                1.0,
                103,
                123
            ]
        ]
    },
    {
        "page": 7,
        "index": 42,
        "bbox": [
            107.831,
            168.03007839999998,
            503.9975123462,
            178.22181819999997
        ],
        "prefix": "",
        "content": "Intuition for why logits and logit differences (LDs) are a natural unit for transformers: The residual ",
        "suffix": "stream",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                0,
                103
            ]
        ]
    },
    {
        "page": 7,
        "index": 43,
        "bbox": [
            108.0,
            157.1210784,
            504.00338739999984,
            167.0836784
        ],
        "prefix": "",
        "content": "stream and output of a transformer is a sum of components. Every component added to the residual ",
        "suffix": "stream",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                0.9444444444444444,
                0,
                97
            ]
        ]
    },
    {
        "page": 7,
        "index": 44,
        "bbox": [
            108.0,
            146.2120784,
            504.0013948799996,
            156.1746784
        ],
        "prefix": "",
        "content": "stream corresponds to an addition to the LD (as the LD corresponds to a residual stream direction, up ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                0.9509157819444367,
                200,
                302
            ]
        ]
    },
    {
        "page": 7,
        "index": 45,
        "bbox": [
            108.0,
            135.3030784,
            505.7392708239998,
            145.2656784
        ],
        "prefix": "",
        "content": "to layer norm). A model component can easily change the LD by some absolute amount (e.g. +1 LD). ",
        "suffix": "It",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                200,
                297
            ]
        ]
    },
    {
        "page": 7,
        "index": 46,
        "bbox": [
            108.0,
            124.39307840000001,
            503.99721058799975,
            134.3556784
        ],
        "prefix": "",
        "content": "It cannot easily change the LD by a relative amount (LD *= 1.5), or change the probabilities by a ",
        "suffix": "specific",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                200,
                298
            ]
        ]
    },
    {
        "page": 7,
        "index": 47,
        "bbox": [
            108.0,
            113.4840784,
            504.0013948799995,
            123.4466784
        ],
        "prefix": "",
        "content": "specific amount (prob += 0.20). For example consider a model component that always outputs 1 logit ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                0,
                99
            ]
        ]
    },
    {
        "page": 7,
        "index": 48,
        "bbox": [
            108.0,
            102.57507840000001,
            503.9972105879997,
            112.5376784
        ],
        "prefix": "",
        "content": "to duplicated names (assume ''John and Mary . . . John . . . ''). This component then always writes ",
        "suffix": "+1",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                0.43855804498772877,
                0,
                87
            ]
        ]
    },
    {
        "page": 7,
        "index": 49,
        "bbox": [
            106.595,
            91.6660784,
            504.66522839599975,
            101.6286784
        ],
        "prefix": "",
        "content": "+1 LD in favour of Mary, and gets a score of 1 in terms of LD. Other metrics (such as probability) ",
        "suffix": "judge",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                386,
                485
            ]
        ]
    },
    {
        "page": 7,
        "index": 50,
        "bbox": [
            108.0,
            80.75707840000001,
            503.9949988907998,
            90.7196784
        ],
        "prefix": "",
        "content": "judge this component differently, depending on what the baseline was (e.g. due to other patches). We ",
        "suffix": "would",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                386,
                487
            ]
        ]
    },
    {
        "page": 7,
        "index": 51,
        "bbox": [
            107.641,
            69.8480784,
            504.00214436599975,
            79.8106784
        ],
        "prefix": "",
        "content": "would argue that logits and logit differences are closer to the mechanistic process happening in the ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                186,
                287
            ]
        ]
    },
    {
        "page": 7,
        "index": 52,
        "bbox": [
            303.509,
            39.9600784,
            308.4903,
            49.9226784
        ],
        "prefix": "",
        "content": "8 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 8,
        "index": 0,
        "bbox": [
            108.0,
            707.8850784,
            503.9980474463997,
            717.8476784000001
        ],
        "prefix": "",
        "content": "transformer, and thus feel like a more natural unit. This is of course not a requirement, and also does ",
        "suffix": "not",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                487,
                591
            ]
        ]
    },
    {
        "page": 8,
        "index": 1,
        "bbox": [
            108.0,
            696.9760784,
            504.2509878977996,
            706.9386784000001
        ],
        "prefix": "",
        "content": "not hold in all places (e.g. if a component's output depends on the input LD), but it seems to work ",
        "suffix": "well",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                487,
                587
            ]
        ]
    },
    {
        "page": 8,
        "index": 2,
        "bbox": [
            107.641,
            686.0670784,
            171.551079,
            696.0296784000001
        ],
        "prefix": "",
        "content": "well in practice. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                91,
                1.0,
                487,
                504
            ]
        ]
    },
    {
        "page": 8,
        "index": 3,
        "bbox": [
            108.0,
            662.4348166000001,
            300.29810520000007,
            672.3974166
        ],
        "prefix": "",
        "content": "4.2 Flaws & advantages of different metrics ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                92,
                0.75,
                0,
                39
            ]
        ]
    },
    {
        "page": 8,
        "index": 4,
        "bbox": [
            108.0,
            642.3890784,
            504.16737179599954,
            652.3516784000001
        ],
        "prefix": "",
        "content": "It is essential to be aware of what a metric measures and is sensitive to. A key thing to track is whether ",
        "suffix": "the",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                1.0,
                0,
                107
            ]
        ]
    },
    {
        "page": 8,
        "index": 5,
        "bbox": [
            108.0,
            631.4800783999999,
            505.2413400759996,
            641.4426784
        ],
        "prefix": "",
        "content": "the metric is discrete vs continuous, and whether it's exponential vs linear (in the logits)  continuous, ",
        "suffix": "linear",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                1.0,
                120,
                213
            ]
        ]
    },
    {
        "page": 8,
        "index": 6,
        "bbox": [
            108.0,
            620.5710783999999,
            503.9972105879997,
            630.5336784
        ],
        "prefix": "",
        "content": "linear metrics are usually more accurate, which is crucial when doing exploratory patching and ",
        "suffix": "assigning",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                0.8911919627447629,
                20,
                108
            ]
        ]
    },
    {
        "page": 8,
        "index": 7,
        "bbox": [
            108.0,
            609.6620783999999,
            495.0569725999998,
            619.6246784
        ],
        "prefix": "",
        "content": "assigning ''partial credit'' to model components. Here we list common pitfalls of popular metrics. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                93,
                0.7484006313052547,
                20,
                116
            ]
        ]
    },
    {
        "page": 8,
        "index": 8,
        "bbox": [
            108.592,
            366.7500784,
            503.40983799999987,
            376.71267839999996
        ],
        "prefix": "",
        "content": "Figure 2: Illustration of different metrics for an example patching experiment with GPT2 medium. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                94,
                0.8571428571428571,
                0,
                86
            ]
        ]
    },
    {
        "page": 8,
        "index": 9,
        "bbox": [
            135.397,
            343.4080784,
            505.2465628719999,
            353.3706784
        ],
        "prefix": "",
        "content": "• Logit difference / logprob difference: The difference between the logit of the correct answer, ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8979924650732152,
                0,
                95
            ]
        ]
    },
    {
        "page": 8,
        "index": 10,
        "bbox": [
            143.866,
            332.49907840000003,
            503.9965355248,
            342.4616784
        ],
        "prefix": "",
        "content": "and the incorrect answer(s). This metric specifically measures the difference between the ",
        "suffix": "selected",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                95,
                185
            ]
        ]
    },
    {
        "page": 8,
        "index": 11,
        "bbox": [
            143.866,
            321.59007840000004,
            504.00341968140015,
            331.5526784
        ],
        "prefix": "",
        "content": "selected logits, and is not sensitive to components which affect all of them. For example, in ",
        "suffix": "IOI",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.9411764705882353,
                0,
                94
            ]
        ]
    },
    {
        "page": 8,
        "index": 12,
        "bbox": [
            143.866,
            310.68107840000005,
            504.0020149548,
            320.6436784
        ],
        "prefix": "",
        "content": "IOI it measures the model's confidence in Mary vs John which encapsulates the IOIcircuit ",
        "suffix": "well",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                189,
                278
            ]
        ]
    },
    {
        "page": 8,
        "index": 13,
        "bbox": [
            143.507,
            299.7720784,
            423.4361348,
            309.7346784
        ],
        "prefix": "",
        "content": "well without being sensitive to the ''is the next token a name?''circuit. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.7316273400589385,
                94,
                166
            ]
        ]
    },
    {
        "page": 8,
        "index": 14,
        "bbox": [
            135.397,
            285.7170784,
            503.99517710080005,
            295.90881820000004
        ],
        "prefix": "",
        "content": "• Potential falsepositive: Because the metric is a difference it may be driven by either getting ",
        "suffix": "better",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8235619461394205,
                94,
                189
            ]
        ]
    },
    {
        "page": 8,
        "index": 15,
        "bbox": [
            143.866,
            274.8080784,
            504.0024831969999,
            284.77067839999995
        ],
        "prefix": "",
        "content": "better at the correct answer or worse at the incorrect answer. Thus it is worth checking the ",
        "suffix": "logits",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                356,
                449
            ]
        ]
    },
    {
        "page": 8,
        "index": 16,
        "bbox": [
            143.866,
            263.8990784,
            348.3981780000001,
            273.86167839999996
        ],
        "prefix": "",
        "content": "logits or logprobs of individual answers to confirm. ",
        "suffix": "This",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.9039261425818458,
                356,
                409
            ]
        ]
    },
    {
        "page": 8,
        "index": 17,
        "bbox": [
            143.557,
            252.9900784,
            504.35265862599977,
            262.95267839999997
        ],
        "prefix": "",
        "content": "This is particularly concerning because the corrupted model likely puts a high probability ",
        "suffix": "on",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.9307283845301656,
                356,
                447
            ]
        ]
    },
    {
        "page": 8,
        "index": 18,
        "bbox": [
            143.866,
            242.0810784,
            503.99806976519983,
            252.0436784
        ],
        "prefix": "",
        "content": "on the incorrect answer. This means that any patch that indiscriminately damages the model ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.9333333333333333,
                356,
                447
            ]
        ]
    },
    {
        "page": 8,
        "index": 19,
        "bbox": [
            143.866,
            231.1720784,
            503.99685432799964,
            241.1346784
        ],
        "prefix": "",
        "content": "and gets it closer to uniform will damage the incorrect answer logprob and so boost the logit ",
        "suffix": "diff.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                447,
                541
            ]
        ]
    },
    {
        "page": 8,
        "index": 20,
        "bbox": [
            143.866,
            220.26307839999998,
            160.49357940000002,
            230.2256784
        ],
        "prefix": "",
        "content": "diff. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                447,
                453
            ]
        ]
    },
    {
        "page": 8,
        "index": 21,
        "bbox": [
            135.39700000000002,
            206.20807839999998,
            503.99685432799964,
            216.1706784
        ],
        "prefix": "",
        "content": "• Logprobs: This metric measures the logprob of the correct answer. It is sensitive to absolute ",
        "suffix": "change",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8235619461394205,
                94,
                188
            ]
        ]
    },
    {
        "page": 8,
        "index": 22,
        "bbox": [
            143.866,
            195.29907839999998,
            504.1680914967997,
            205.2616784
        ],
        "prefix": "",
        "content": "change in logarithmic probabilities (i.e. relative change in probabilities) and captures our ",
        "suffix": "intuition",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                541,
                634
            ]
        ]
    },
    {
        "page": 8,
        "index": 23,
        "bbox": [
            143.866,
            184.3900784,
            503.99685432799987,
            194.3526784
        ],
        "prefix": "",
        "content": "intuition for what good model performance means. We broadly think it is a good metric. It's ",
        "suffix": "main",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                541,
                633
            ]
        ]
    },
    {
        "page": 8,
        "index": 24,
        "bbox": [
            143.866,
            173.4810784,
            201.81844420000002,
            183.4436784
        ],
        "prefix": "",
        "content": "main flaws are ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                541,
                556
            ]
        ]
    },
    {
        "page": 8,
        "index": 25,
        "bbox": [
            153.828,
            159.4260784,
            504.00252229939974,
            169.4584166
        ],
        "prefix": "",
        "content": "– Saturation: Once the correct answer becomes the model's top guess, the logprob stops ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8667035389580099,
                94,
                179
            ]
        ]
    },
    {
        "page": 8,
        "index": 26,
        "bbox": [
            163.791,
            148.5170784,
            475.1122874000001,
            158.4796784
        ],
        "prefix": "",
        "content": "increasing meaningfully, even though the confidence can increase much more. ",
        "suffix": "We",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.9118361257656654,
                626,
                702
            ]
        ]
    },
    {
        "page": 8,
        "index": 27,
        "bbox": [
            163.323,
            137.6080784,
            452.4675398000001,
            147.57067840000002
        ],
        "prefix": "",
        "content": "We can see this in Figure 2, where the green line saturates after layer 17. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8245252960780962,
                94,
                168
            ]
        ]
    },
    {
        "page": 8,
        "index": 28,
        "bbox": [
            153.828,
            125.5460784,
            503.9996431080001,
            135.57841660000003
        ],
        "prefix": "",
        "content": "– Unspecificity: We lose the ability to control for other properties, e.g. in IOI we ",
        "suffix": "cannot",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8235619461394205,
                94,
                177
            ]
        ]
    },
    {
        "page": 8,
        "index": 29,
        "bbox": [
            163.791,
            114.63707840000001,
            504.00382740000015,
            124.5996784
        ],
        "prefix": "",
        "content": "cannot distinguish between components that increase both P(John) and P(Mary) from ",
        "suffix": "components",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                783,
                865
            ]
        ]
    },
    {
        "page": 8,
        "index": 30,
        "bbox": [
            163.791,
            103.7280784,
            503.9954588159998,
            113.6906784
        ],
        "prefix": "",
        "content": "components that only increase P(Mary). This can be intended, or unintended, it's just ",
        "suffix": "important",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                783,
                869
            ]
        ]
    },
    {
        "page": 8,
        "index": 31,
        "bbox": [
            163.791,
            92.81907840000001,
            269.6834754000001,
            102.7816784
        ],
        "prefix": "",
        "content": "important to keep in mind. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                783,
                810
            ]
        ]
    },
    {
        "page": 8,
        "index": 32,
        "bbox": [
            153.828,
            80.75707840000001,
            503.99964310799993,
            90.78941660000001
        ],
        "prefix": "",
        "content": "– Inhibition: To increase the logprob on John, the model can either increase the John ",
        "suffix": "logit,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                0.8125345677731343,
                94,
                178
            ]
        ]
    },
    {
        "page": 8,
        "index": 33,
        "bbox": [
            163.791,
            69.8480784,
            504.00462440799987,
            79.8106784
        ],
        "prefix": "",
        "content": "logit, or decrease other top logits, and it is hard to distinguish which is happening. This ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                867,
                959
            ]
        ]
    },
    {
        "page": 8,
        "index": 34,
        "bbox": [
            303.509,
            39.9600784,
            308.4903,
            49.9226784
        ],
        "prefix": "",
        "content": "9 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 9,
        "index": 0,
        "bbox": [
            163.791,
            707.8850784,
            504.00406650240006,
            717.8476784000001
        ],
        "prefix": "",
        "content": "may be desirable or not because the two operations likely have different mechanisms ",
        "suffix": "and",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                867,
                951
            ]
        ]
    },
    {
        "page": 9,
        "index": 1,
        "bbox": [
            163.791,
            696.9760784,
            311.3271434000001,
            706.9386784000001
        ],
        "prefix": "",
        "content": "and may be better tracked separately. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                95,
                1.0,
                867,
                904
            ]
        ]
    },
    {
        "page": 9,
        "index": 2,
        "bbox": [
            135.397,
            677.3720784,
            504.00323740000005,
            687.3346784
        ],
        "prefix": "",
        "content": "• Probabilities: This metric measures the probability of the right answer, or the difference in ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 9,
        "index": 3,
        "bbox": [
            143.86599999999999,
            666.4630784,
            423.40659339999996,
            676.4256784
        ],
        "prefix": "",
        "content": "probabilities of different answers. The main issue with such metrics is ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 9,
        "index": 4,
        "bbox": [
            153.82799999999997,
            646.8600783999999,
            504.172344779,
            656.8924166
        ],
        "prefix": "",
        "content": "– Probabilities are nonlinear, in the sense that they track the logits exponentially. For ",
        "suffix": "example,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                0.9071020439808423,
                0,
                89
            ]
        ]
    },
    {
        "page": 9,
        "index": 5,
        "bbox": [
            163.791,
            635.9500783999999,
            504.0046244079998,
            645.9126784
        ],
        "prefix": "",
        "content": "example, a model component adding +2 to a given logit can create a 1 or 40 percentage ",
        "suffix": "point",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                0.926659508405928,
                0,
                84
            ]
        ]
    },
    {
        "page": 9,
        "index": 6,
        "bbox": [
            163.791,
            625.0410784,
            433.4785820000001,
            635.0036784
        ],
        "prefix": "",
        "content": "point probability increase, just depending on what the baseline was. ",
        "suffix": "As",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                1.0,
                0,
                69
            ]
        ]
    },
    {
        "page": 9,
        "index": 7,
        "bbox": [
            163.432,
            614.1320784,
            504.36213460000005,
            624.0946784
        ],
        "prefix": "",
        "content": "As an example of the nonlinearity consider the orange line in the figure above: A ",
        "suffix": "modest",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                1.0,
                0,
                82
            ]
        ]
    },
    {
        "page": 9,
        "index": 8,
        "bbox": [
            163.791,
            603.2230784,
            500.4671043999998,
            613.1856784
        ],
        "prefix": "",
        "content": "modest increase in logit difference around layer 17 converts to a jump in probability. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                1.0,
                0,
                87
            ]
        ]
    },
    {
        "page": 9,
        "index": 9,
        "bbox": [
            153.828,
            587.9670784,
            503.9996431079998,
            597.9994166
        ],
        "prefix": "",
        "content": "– Probabilities also inherit the problems of the logprob metric, namely saturation and ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                0.9230769230769231,
                0,
                85
            ]
        ]
    },
    {
        "page": 9,
        "index": 10,
        "bbox": [
            163.791,
            577.0580784,
            216.5529296,
            587.0206784000001
        ],
        "prefix": "",
        "content": "unspecificity. ",
        "suffix": "The",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                1.0,
                0,
                15
            ]
        ]
    },
    {
        "page": 9,
        "index": 11,
        "bbox": [
            163.482,
            566.1490784,
            441.67764240000014,
            576.1116784000001
        ],
        "prefix": "",
        "content": "The figure shows the saturation effect for the orange line at layer >18. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                96,
                1.0,
                0,
                72
            ]
        ]
    },
    {
        "page": 9,
        "index": 12,
        "bbox": [
            135.397,
            546.5450784,
            503.9968543279999,
            556.5076784
        ],
        "prefix": "",
        "content": "• Binary and discrete metrics (Accuracy / topk performance / rank / etc): These metrics round ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 9,
        "index": 13,
        "bbox": [
            143.866,
            535.6360784,
            477.26440899999994,
            545.5986784
        ],
        "prefix": "",
        "content": "off each input to a discrete metric (and then tend to average over a bunch of inputs). ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                0.006464952971371187,
                70,
                157
            ]
        ]
    },
    {
        "page": 9,
        "index": 14,
        "bbox": [
            153.828,
            516.0320783999999,
            503.995498668,
            526.0644166
        ],
        "prefix": "",
        "content": "– The problem with these is that generally many components contribute to a model's ",
        "suffix": "performance,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                0.9375,
                109,
                179
            ]
        ]
    },
    {
        "page": 9,
        "index": 15,
        "bbox": [
            163.791,
            505.1230784,
            503.9996431079998,
            515.0856784
        ],
        "prefix": "",
        "content": "performance, with no single decisive contributor. Discrete metrics may suggest that ",
        "suffix": "some",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 16,
        "bbox": [
            163.791,
            494.2140784,
            504.00193450599977,
            504.1766784
        ],
        "prefix": "",
        "content": "some significant contributors are unimportant, because they aren't enough to cross a ",
        "suffix": "threshold.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 17,
        "bbox": [
            163.791,
            483.3050784,
            504.34875253719997,
            493.2676784
        ],
        "prefix": "",
        "content": "threshold. Alternatively, these metrics may suggest that one contributor among many ",
        "suffix": "is",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                0.9166836223640842,
                258,
                333
            ]
        ]
    },
    {
        "page": 9,
        "index": 18,
        "bbox": [
            163.791,
            472.39507840000005,
            504.00329090800005,
            482.58681820000004
        ],
        "prefix": "",
        "content": "is all that matters because it happens to be the one that pushes the model over the ",
        "suffix": "threshold.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 19,
        "bbox": [
            163.791,
            461.4860784,
            443.88949900000006,
            471.44867839999995
        ],
        "prefix": "",
        "content": "threshold. We generally recommend using continuous metrics instead. ",
        "suffix": "As",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                1.0,
                330,
                394
            ]
        ]
    },
    {
        "page": 9,
        "index": 20,
        "bbox": [
            163.432,
            450.5770784,
            503.9963079280001,
            460.53967839999996
        ],
        "prefix": "",
        "content": "As an example consider the Figure above: The rankbased metric (red line) jumps ",
        "suffix": "around",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 21,
        "bbox": [
            163.791,
            439.6680784,
            504.00462440799976,
            449.63067839999997
        ],
        "prefix": "",
        "content": "around layer 15 when the corresponding logit passes the rank 1 and 0 thresholds, while ",
        "suffix": "it",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                1.0,
                398,
                473
            ]
        ]
    },
    {
        "page": 9,
        "index": 22,
        "bbox": [
            163.791,
            428.7590784,
            343.1078374000001,
            438.7216784
        ],
        "prefix": "",
        "content": "it is not sensitive to any of the other changes. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 23,
        "bbox": [
            153.828,
            413.5030784,
            504.345146076,
            423.53541659999996
        ],
        "prefix": "",
        "content": "– Discrete metrics can be a good fit for confirmatory patching rather than exploratory ",
        "suffix": "patching,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                0.866666666666669,
                417,
                502
            ]
        ]
    },
    {
        "page": 9,
        "index": 24,
        "bbox": [
            163.791,
            402.5940784,
            504.0004793080001,
            412.7858182
        ],
        "prefix": "",
        "content": "patching, as in some sense accuracy is the metric we care about  can the model get the ",
        "suffix": "question",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                1.0,
                511,
                589
            ]
        ]
    },
    {
        "page": 9,
        "index": 25,
        "bbox": [
            163.791,
            391.68407840000003,
            249.29999580000003,
            401.64667840000004
        ],
        "prefix": "",
        "content": "question right or not? ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                97,
                1.0,
                511,
                533
            ]
        ]
    },
    {
        "page": 9,
        "index": 26,
        "bbox": [
            135.397,
            372.0810784,
            504.00222519600004,
            382.2728182
        ],
        "prefix": "",
        "content": "• Logits: We could just take the answer logit as a metric. This is somewhat unprincipled ",
        "suffix": "because",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 27,
        "bbox": [
            143.866,
            361.17207840000003,
            504.6705253399998,
            371.1346784
        ],
        "prefix": "",
        "content": "because logits have an arbitrary baseline (adding +1 to all logits would not affect the output) ",
        "suffix": "but",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 28,
        "bbox": [
            143.866,
            350.2620784,
            504.00203487999977,
            360.2246784
        ],
        "prefix": "",
        "content": "but tend to work in practice. Logit(John) often matches Logprob(John) without being ",
        "suffix": "affected",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 29,
        "bbox": [
            143.866,
            339.3530784,
            336.4928710000001,
            349.3156784
        ],
        "prefix": "",
        "content": "affected by the downsides of the logprob metric. ",
        "suffix": "This",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                0.11446637593581317,
                0,
                39
            ]
        ]
    },
    {
        "page": 9,
        "index": 30,
        "bbox": [
            143.557,
            328.4440784,
            505.74572898399975,
            338.40667840000003
        ],
        "prefix": "",
        "content": "This metric can incorrectly pick up on components that just contribute to many logits. ",
        "suffix": "Ensuring",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 31,
        "bbox": [
            143.866,
            317.53507840000003,
            504.6647470319999,
            327.49767840000004
        ],
        "prefix": "",
        "content": "Ensuring that the residual stream and logits have mean zero (default in TransformerLens) ",
        "suffix": "can",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 32,
        "bbox": [
            143.866,
            306.62607840000004,
            229.08608040000001,
            316.58867840000005
        ],
        "prefix": "",
        "content": "can help address this. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                87,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 9,
        "index": 33,
        "bbox": [
            301.019,
            39.9600784,
            310.98159999999996,
            49.9226784
        ],
        "prefix": "",
        "content": "10 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 0,
        "bbox": [
            108.0,
            707.5383632,
            176.40765439999998,
            719.4935632
        ],
        "prefix": "",
        "content": "5 Summary ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                99,
                0.5,
                0,
                7
            ]
        ]
    },
    {
        "page": 10,
        "index": 1,
        "bbox": [
            108.0,
            684.7720783999999,
            504.00029899399965,
            694.7346784
        ],
        "prefix": "",
        "content": "In most situations, use activation patching instead of ablations. Different corrupted prompts give you ",
        "suffix": "different",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                100,
                1.0,
                0,
                103
            ]
        ]
    },
    {
        "page": 10,
        "index": 2,
        "bbox": [
            108.0,
            673.8630784,
            467.1616925999999,
            683.8256784
        ],
        "prefix": "",
        "content": "different information, be careful about what you choose and try to test a range of prompts. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                100,
                1.0,
                0,
                91
            ]
        ]
    },
    {
        "page": 10,
        "index": 3,
        "bbox": [
            107.691,
            657.4740783999999,
            505.7437724752,
            667.6658182
        ],
        "prefix": "",
        "content": "There are two different directions you can patch in: denoising and noising. These are not symmetric. ",
        "suffix": "Be",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                101,
                1.0,
                0,
                101
            ]
        ]
    },
    {
        "page": 10,
        "index": 4,
        "bbox": [
            108.0,
            646.5650784,
            281.2296888000001,
            656.5276784
        ],
        "prefix": "",
        "content": "Be aware of what a patching result implies! ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                101,
                1.0,
                0,
                43
            ]
        ]
    },
    {
        "page": 10,
        "index": 5,
        "bbox": [
            135.397,
            626.1920783999999,
            504.0006167832,
            638.3066
        ],
        "prefix": "",
        "content": "• Denoising (a clean → corrupt patch) shows whether the patched activations were sufficient ",
        "suffix": "to",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                102,
                0.9129081662320396,
                0,
                90
            ]
        ]
    },
    {
        "page": 10,
        "index": 6,
        "bbox": [
            143.866,
            615.2830783999999,
            503.99832805999995,
            625.3154165999999
        ],
        "prefix": "",
        "content": "to restore the model behaviour. This implies the components make up a crosssection of the ",
        "suffix": "circuit.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                102,
                1.0,
                0,
                90
            ]
        ]
    },
    {
        "page": 10,
        "index": 7,
        "bbox": [
            143.866,
            604.3740783999999,
            171.811093,
            614.3366784
        ],
        "prefix": "",
        "content": "circuit. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                102,
                1.0,
                263,
                271
            ]
        ]
    },
    {
        "page": 10,
        "index": 8,
        "bbox": [
            135.39700000000002,
            589.4790783999999,
            503.995539468,
            601.5935999999999
        ],
        "prefix": "",
        "content": "• Noising (a corrupt → clean patch) shows whether the patched activations were necessary to ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                102,
                0.9129081662320395,
                9,
                99
            ]
        ]
    },
    {
        "page": 10,
        "index": 9,
        "bbox": [
            143.866,
            578.5700783999999,
            474.66391200000004,
            588.6024166
        ],
        "prefix": "",
        "content": "maintain the model behaviour. This implies the components are part of the circuit. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                102,
                0.9230769230769231,
                189,
                263
            ]
        ]
    },
    {
        "page": 10,
        "index": 10,
        "bbox": [
            108.0,
            558.1970784,
            503.9981669975996,
            568.1596784000001
        ],
        "prefix": "",
        "content": "Be careful when using metrics that are (i) discrete, (ii) overly sharp, or (iii) sensitive to unintended ",
        "suffix": "information.",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                103,
                1.0,
                0,
                105
            ]
        ]
    },
    {
        "page": 10,
        "index": 11,
        "bbox": [
            108.0,
            547.2880784,
            504.0034870259998,
            557.2506784000001
        ],
        "prefix": "",
        "content": "information. Ideally use a range of metrics, and try to have at least one metric that is continuous and ",
        "suffix": "roughly",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                103,
                1.0,
                0,
                104
            ]
        ]
    },
    {
        "page": 10,
        "index": 12,
        "bbox": [
            108.0,
            536.3790783999999,
            503.9972105879999,
            546.3416784
        ],
        "prefix": "",
        "content": "roughly linear in logits such as logit difference or logprob. We recommend representing patching ",
        "suffix": "results",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                103,
                1.0,
                0,
                97
            ]
        ]
    },
    {
        "page": 10,
        "index": 13,
        "bbox": [
            108.0,
            525.4690784,
            504.00048828339993,
            535.4316784
        ],
        "prefix": "",
        "content": "results in a big dataframe with a column per metric and row per patching experiment, and making a ",
        "suffix": "bunch",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                103,
                1.0,
                0,
                98
            ]
        ]
    },
    {
        "page": 10,
        "index": 14,
        "bbox": [
            108.0,
            514.5600784,
            206.04194660000002,
            524.5226784
        ],
        "prefix": "",
        "content": "bunch of plots from this. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                103,
                1.0,
                0,
                25
            ]
        ]
    },
    {
        "page": 10,
        "index": 15,
        "bbox": [
            135.397,
            494.1870784,
            504.0034196813998,
            504.14967839999997
        ],
        "prefix": "",
        "content": "• Model topk accuracy is discrete and can overrepresent changes at thresholds and shows no ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                0.9333333333333333,
                0,
                89
            ]
        ]
    },
    {
        "page": 10,
        "index": 16,
        "bbox": [
            143.866,
            483.2780784,
            346.88386280000014,
            493.2406784
        ],
        "prefix": "",
        "content": "change for large effects that don't cross thresholds. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                1.0,
                0,
                54
            ]
        ]
    },
    {
        "page": 10,
        "index": 17,
        "bbox": [
            135.39700000000002,
            468.3840784,
            503.9958481053998,
            478.3466784
        ],
        "prefix": "",
        "content": "• Most effects from patching are linear and additive in logit space. Probability is exponential ",
        "suffix": "in",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                0.9375,
                0,
                94
            ]
        ]
    },
    {
        "page": 10,
        "index": 18,
        "bbox": [
            143.866,
            457.4740784,
            505.246562872,
            467.4366784
        ],
        "prefix": "",
        "content": "in logit space, so it overemphasises effects near a threshold and suppresses effects elsewhere, ",
        "suffix": "creating",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                1.0,
                0,
                96
            ]
        ]
    },
    {
        "page": 10,
        "index": 19,
        "bbox": [
            143.866,
            446.5650784,
            286.3411426,
            456.5276784
        ],
        "prefix": "",
        "content": "creating overly sharp patching plots ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                1.0,
                0,
                37
            ]
        ]
    },
    {
        "page": 10,
        "index": 20,
        "bbox": [
            135.39700000000002,
            431.6710784,
            503.996854328,
            441.6336784
        ],
        "prefix": "",
        "content": "• Logprob can saturate, and cannot control for a patch that boosts both the correct and incorrect ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                0.9411764705882353,
                0,
                96
            ]
        ]
    },
    {
        "page": 10,
        "index": 21,
        "bbox": [
            143.866,
            420.7620784,
            182.59062620000003,
            430.7246784
        ],
        "prefix": "",
        "content": "answer(s) ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                104,
                1.0,
                0,
                9
            ]
        ]
    },
    {
        "page": 10,
        "index": 22,
        "bbox": [
            108.00000000000001,
            392.0223632,
            206.8336384,
            403.97756319999996
        ],
        "prefix": "",
        "content": "Acknowledgements ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                105,
                1.0,
                0,
                16
            ]
        ]
    },
    {
        "page": 10,
        "index": 23,
        "bbox": [
            107.691,
            369.2550784,
            503.9951582939999,
            379.21767839999995
        ],
        "prefix": "",
        "content": "Thanks to Arthur Conmy, Chris Mathwin, James Lucassen, and Fred Zhang for comments on a draft ",
        "suffix": "of",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                1.0,
                0,
                94
            ]
        ]
    },
    {
        "page": 10,
        "index": 24,
        "bbox": [
            108.0,
            358.3460784,
            182.4405472,
            368.30867839999996
        ],
        "prefix": "",
        "content": "of this manuscript. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                106,
                1.0,
                0,
                20
            ]
        ]
    },
    {
        "page": 10,
        "index": 25,
        "bbox": [
            108.0,
            329.60636320000003,
            163.54385919999999,
            341.5615632
        ],
        "prefix": "",
        "content": "References ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 26,
        "bbox": [
            108.0,
            312.3190784,
            505.6535924639996,
            322.28167840000003
        ],
        "prefix": "",
        "content": "Chan, Lawrence, Adria GarrigaAlonso, Nix GoldowskyDill, Ryan Greenblatt, Jenny Nitishin",
        "suffix": "skaya,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 27,
        "bbox": [
            117.963,
            301.41007840000003,
            504.3092101440001,
            311.6018182
        ],
        "prefix": "Nitishin",
        "content": "skaya, Ansh Radhakrishnan, Buck Shlegeris, and Nate Thomas (2022). Causal scrubbing: A ",
        "suffix": "method",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 28,
        "bbox": [
            117.963,
            290.4413028,
            507.66342488,
            300.69281820000003
        ],
        "prefix": "",
        "content": "method for rigorously testing interpretability hypotheses. Alignment Forum. URL: https://www. ",
        "suffix": "alignmentforum.org/posts/JvZhhzycHu2Yd57RN/causalscrubbingamethodforrigorouslytesting.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 29,
        "bbox": [
            117.96300000000002,
            279.5323028,
            506.11286982000007,
            289.49490280000003
        ],
        "prefix": "",
        "content": "alignmentforum.org/posts/JvZhhzycHu2Yd57RN/causalscrubbingamethodfor",
        "suffix": "rigorouslytesting.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 30,
        "bbox": [
            117.96300000000002,
            268.62330280000003,
            215.07565000000002,
            278.64567840000007
        ],
        "prefix": "alignmentforum.org/posts/JvZhhzycHu2Yd57RN/causalscrubbingamethodfor",
        "content": "rigorouslytesting. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 31,
        "bbox": [
            108.0,
            257.7740784,
            505.6514006919999,
            267.73667839999996
        ],
        "prefix": "",
        "content": "Conmy, Arthur, Augustine N. MavorParker, Aengus Lynch, Stefan Heimersheim, and Adrià Garriga",
        "suffix": "Alonso",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 32,
        "bbox": [
            117.604,
            246.86407839999998,
            505.74609899199976,
            256.8266784
        ],
        "prefix": "Garriga",
        "content": "Alonso (Apr. 2023). ''Towards Automated Circuit Discovery for Mechanistic Interpretability''. ",
        "suffix": "In:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 33,
        "bbox": [
            117.963,
            235.8953028,
            505.74297235,
            246.14681819999998
        ],
        "prefix": "",
        "content": "In: arXiv eprints, arXiv:2304.14997, arXiv:2304.14997. DOI: 10.48550/arXiv.2304.14997. ",
        "suffix": "arXiv:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 34,
        "bbox": [
            117.963,
            224.9863028,
            239.53464999999997,
            235.0086784
        ],
        "prefix": "",
        "content": "arXiv: 2304.14997 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 35,
        "bbox": [
            108.0,
            214.13707839999998,
            505.745049132,
            224.0996784
        ],
        "prefix": "",
        "content": "Cunningham, Hoagy, Aidan Ewart, Logan Riggs, Robert Huben, and Lee Sharkey (Sept. 2023). ",
        "suffix": "''Sparse",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 36,
        "bbox": [
            116.638,
            203.2280784,
            505.24530895000004,
            213.4198182
        ],
        "prefix": "",
        "content": "''Sparse Autoencoders Find Highly Interpretable Features in Language Models''. In: arXiv eprints, ",
        "suffix": "arXiv:2309.08600,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 37,
        "bbox": [
            117.963,
            192.2593028,
            504.00268739999996,
            202.2816784
        ],
        "prefix": "",
        "content": "arXiv:2309.08600, arXiv:2309.08600. DOI: 10.48550/arXiv.2309.08600. arXiv: 2309.08600 ",
        "suffix": "[cs.LG].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 38,
        "bbox": [
            117.96300000000002,
            181.3503028,
            157.05665000000002,
            191.3726784
        ],
        "prefix": "",
        "content": "[cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 39,
        "bbox": [
            108.0,
            170.50107839999998,
            505.7737414199996,
            180.4636784
        ],
        "prefix": "",
        "content": "Feng, Jiahai and Jacob Steinhardt (Oct. 2023). ''How do Language Models Bind Entities in Context?'' ",
        "suffix": "In:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 40,
        "bbox": [
            117.963,
            159.5323028,
            505.74297235,
            169.78381819999998
        ],
        "prefix": "",
        "content": "In: arXiv eprints, arXiv:2310.17191, arXiv:2310.17191. DOI: 10.48550/arXiv.2310.17191. ",
        "suffix": "arXiv:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 41,
        "bbox": [
            117.963,
            148.6233028,
            239.53464999999997,
            158.6456784
        ],
        "prefix": "",
        "content": "arXiv: 2310.17191 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 42,
        "bbox": [
            108.0,
            137.77407839999998,
            504.0022915139998,
            147.7366784
        ],
        "prefix": "",
        "content": "Finlayson, Matthew, Aaron Mueller, Sebastian Gehrmann, Stuart Shieber, Tal Linzen, and Yonatan ",
        "suffix": "Belinkov",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 43,
        "bbox": [
            117.963,
            126.8640784,
            504.00294057899976,
            136.8266784
        ],
        "prefix": "",
        "content": "Belinkov (June 2021). ''Causal Analysis of Syntactic Agreement Mechanisms in Neural Language ",
        "suffix": "Models''.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 44,
        "bbox": [
            117.963,
            115.8953028,
            507.66118779999994,
            126.1468182
        ],
        "prefix": "",
        "content": "Models''. In: arXiv eprints, arXiv:2106.06087, arXiv:2106.06087. DOI: 10.48550/arXiv.2106. ",
        "suffix": "06087.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 45,
        "bbox": [
            117.96300000000002,
            104.98630279999999,
            270.66165000000007,
            115.0086784
        ],
        "prefix": "",
        "content": "06087. arXiv: 2106.06087 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 46,
        "bbox": [
            108.0,
            94.13707840000001,
            504.00139487999974,
            104.0996784
        ],
        "prefix": "",
        "content": "Geiger, Atticus, Hanson Lu, Thomas Icard, and Christopher Potts (June 2021a). ''Causal Abstractions ",
        "suffix": "of",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 47,
        "bbox": [
            117.963,
            83.16830279999999,
            505.04831865999995,
            93.4198182
        ],
        "prefix": "",
        "content": "of Neural Networks''. In: arXiv eprints, arXiv:2106.02997, arXiv:2106.02997. DOI: 10.48550/ ",
        "suffix": "arXiv.2106.02997.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 48,
        "bbox": [
            117.96299999999997,
            72.25930279999999,
            328.18165,
            82.28167839999999
        ],
        "prefix": "",
        "content": "arXiv.2106.02997. arXiv: 2106.02997 [cs.AI]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 10,
        "index": 49,
        "bbox": [
            301.01899999999995,
            39.960078399999986,
            310.9815999999999,
            49.92267839999999
        ],
        "prefix": "",
        "content": "11 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 0,
        "bbox": [
            108.0,
            707.8850784,
            503.9972105879998,
            717.8476784000001
        ],
        "prefix": "",
        "content": "Geiger, Atticus, Kyle Richardson, and Christopher Potts (Apr. 2020). ''Neural Natural Language ",
        "suffix": "Inference",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 1,
        "bbox": [
            117.963,
            696.9760784,
            505.24483699999996,
            707.1678182
        ],
        "prefix": "",
        "content": "Inference Models Partially Embed Theories of Lexical Entailment and Negation''. In: arXiv eprints, ",
        "suffix": "arXiv:2004.14623,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 2,
        "bbox": [
            117.963,
            686.0073028,
            504.00268739999996,
            696.0296784000001
        ],
        "prefix": "",
        "content": "arXiv:2004.14623, arXiv:2004.14623. DOI: 10.48550/arXiv.2004.14623. arXiv: 2004.14623 ",
        "suffix": "[cs.CL].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 3,
        "bbox": [
            117.96300000000002,
            675.0983028,
            157.05665000000002,
            685.1206784000001
        ],
        "prefix": "",
        "content": "[cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 4,
        "bbox": [
            108.0,
            664.2490783999999,
            505.7450491319998,
            674.2116784
        ],
        "prefix": "",
        "content": "Geiger, Atticus, Zhengxuan Wu, Hanson Lu, Josh Rozner, Elisa Kreiss, Thomas Icard, Noah D. ",
        "suffix": "Goodman,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 5,
        "bbox": [
            117.963,
            653.3400783999999,
            503.996016572,
            663.3026784
        ],
        "prefix": "",
        "content": "Goodman, and Christopher Potts (Dec. 2021b). ''Inducing Causal Structure for Interpretable Neural ",
        "suffix": "Networks''.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 6,
        "bbox": [
            117.963,
            642.3713028,
            507.6640769,
            652.6228182
        ],
        "prefix": "",
        "content": "Networks''. In: arXiv eprints, arXiv:2112.00826, arXiv:2112.00826. DOI: 10.48550/arXiv. ",
        "suffix": "2112.00826.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 7,
        "bbox": [
            117.96300000000002,
            631.4623028,
            296.80665000000005,
            641.4846784
        ],
        "prefix": "",
        "content": "2112.00826. arXiv: 2112.00826 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 8,
        "bbox": [
            108.0,
            620.6130784,
            504.0013948799998,
            630.5756784
        ],
        "prefix": "",
        "content": "Geva, Mor, Jasmijn Bastings, Katja Filippova, and Amir Globerson (Apr. 2023). ''Dissecting Recall of ",
        "suffix": "Factual",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 9,
        "bbox": [
            117.963,
            609.7040784,
            505.2430040498,
            619.8958182
        ],
        "prefix": "",
        "content": "Factual Associations in AutoRegressive Language Models''. In: arXiv eprints, arXiv:2304.14767, ",
        "suffix": "arXiv:2304.14767.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 10,
        "bbox": [
            117.963,
            598.7343028,
            473.65365,
            608.7566784
        ],
        "prefix": "",
        "content": "arXiv:2304.14767. DOI: 10.48550/arXiv.2304.14767. arXiv: 2304.14767 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 11,
        "bbox": [
            108.0,
            587.8850784,
            504.00139487999974,
            597.8476784000001
        ],
        "prefix": "",
        "content": "GoldowskyDill, Nicholas, Chris MacLeod, Lucas Sato, and Aryaman Arora (Apr. 2023). ''Localizing ",
        "suffix": "Model",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 12,
        "bbox": [
            117.963,
            576.9760784,
            505.73835420000006,
            587.1678182
        ],
        "prefix": "",
        "content": "Model Behavior with Path Patching''. In: arXiv eprints, arXiv:2304.05969, arXiv:2304.05969. ",
        "suffix": "DOI:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 13,
        "bbox": [
            118.212,
            566.0073028,
            396.14465,
            576.0296784000001
        ],
        "prefix": "",
        "content": "DOI: 10.48550/arXiv.2304.05969. arXiv: 2304.05969 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 14,
        "bbox": [
            108.0,
            555.1580783999999,
            503.99721058799986,
            565.1206784
        ],
        "prefix": "",
        "content": "Hanna, Michael, Ollie Liu, and Alexandre Variengien (Apr. 2023). ''How does GPT2 compute ",
        "suffix": "greaterthan?:",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 15,
        "bbox": [
            117.963,
            544.2490783999999,
            504.00063514399994,
            554.4408182
        ],
        "prefix": "",
        "content": "greaterthan?: Interpreting mathematical abilities in a pretrained language model''. In: arXiv ",
        "suffix": "eprints,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                0.011288224420058281,
                31,
                138
            ]
        ]
    },
    {
        "page": 11,
        "index": 16,
        "bbox": [
            117.963,
            533.2803028,
            505.387255644,
            543.5318182
        ],
        "prefix": "",
        "content": "eprints, arXiv:2305.00586, arXiv:2305.00586. DOI: 10.48550/arXiv.2305.00586. arXiv: ",
        "suffix": "2305.00586",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 17,
        "bbox": [
            117.963,
            522.3713028,
            211.83865,
            532.3936784
        ],
        "prefix": "",
        "content": "2305.00586 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                81,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 11,
        "index": 18,
        "bbox": [
            108.0,
            511.5220784,
            503.9972105879999,
            521.4846784
        ],
        "prefix": "",
        "content": "Hase, Peter, Mohit Bansal, Been Kim, and Asma Ghandeharioun (Jan. 2023). ''Does Localization ",
        "suffix": "Inform",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 19,
        "bbox": [
            117.963,
            500.6130784,
            504.00193435639954,
            510.5756784
        ],
        "prefix": "",
        "content": "Inform Editing? Surprising Differences in CausalityBased Localization vs. Knowledge Editing in ",
        "suffix": "Language",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 20,
        "bbox": [
            117.963,
            489.6443028,
            505.05040146,
            499.8958182
        ],
        "prefix": "",
        "content": "Language Models''. In: arXiv eprints, arXiv:2301.04213, arXiv:2301.04213. DOI: 10.48550/ ",
        "suffix": "arXiv.2301.04213.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 21,
        "bbox": [
            117.96300000000002,
            478.7353028,
            328.18165000000005,
            488.75767840000003
        ],
        "prefix": "",
        "content": "arXiv.2301.04213. arXiv: 2301.04213 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 22,
        "bbox": [
            108.0,
            467.8850784,
            503.9972105879997,
            477.84767839999995
        ],
        "prefix": "",
        "content": "Hase, Peter, Harry Xie, and Mohit Bansal (June 2021). ''The OutofDistribution Problem in ",
        "suffix": "Explainability",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 23,
        "bbox": [
            117.963,
            456.9760784,
            505.245463,
            467.1678182
        ],
        "prefix": "",
        "content": "Explainability and Search Methods for Feature Importance Explanations''. In: arXiv eprints, ",
        "suffix": "arXiv:2106.00786,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 24,
        "bbox": [
            117.963,
            446.0073028,
            504.00268739999996,
            456.02967839999997
        ],
        "prefix": "",
        "content": "arXiv:2106.00786, arXiv:2106.00786. DOI: 10.48550/arXiv.2106.00786. arXiv: 2106.00786 ",
        "suffix": "[cs.LG].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 25,
        "bbox": [
            117.96300000000002,
            435.0983028,
            157.05665000000002,
            445.1206784
        ],
        "prefix": "",
        "content": "[cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 26,
        "bbox": [
            108.0,
            424.24907840000003,
            504.00273122800013,
            434.4408182
        ],
        "prefix": "",
        "content": "Heimersheim, Stefan and Jett Janiak (2023). A circuit for Python docstrings in a 4layer attentiononly ",
        "suffix": "transformer.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 27,
        "bbox": [
            117.963,
            413.2803028,
            506.1165771800001,
            423.53181820000003
        ],
        "prefix": "",
        "content": "transformer. URL: https://www.alignmentforum.org/posts/u6KXXmKFbXfWzoAXn/a",
        "suffix": "circuitforpythondocstringsina4layerattentiononly.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 28,
        "bbox": [
            117.963,
            402.3713028,
            422.99565,
            412.3936784
        ],
        "prefix": "https://www.alignmentforum.org/posts/u6KXXmKFbXfWzoAXn/a",
        "content": "circuitforpythondocstringsina4layerattentiononly. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 29,
        "bbox": [
            108.0,
            391.5220784,
            504.2512568879999,
            401.4846784
        ],
        "prefix": "",
        "content": "Hendel, Roee, Mor Geva, and Amir Globerson (Oct. 2023). ''InContext Learning Creates Task ",
        "suffix": "Vectors''.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 30,
        "bbox": [
            117.604,
            380.5533028,
            507.66537479999994,
            390.8048182
        ],
        "prefix": "",
        "content": "Vectors''. In: arXiv eprints, arXiv:2310.15916, arXiv:2310.15916. DOI: 10.48550/arXiv.2310. ",
        "suffix": "15916.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 31,
        "bbox": [
            117.70099999999996,
            369.6443028,
            270.39965,
            379.6666784
        ],
        "prefix": "",
        "content": "15916. arXiv: 2310.15916 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 32,
        "bbox": [
            108.0,
            358.7950784,
            505.7450491319997,
            368.75767840000003
        ],
        "prefix": "",
        "content": "Huang, Jing, Atticus Geiger, Karel D'Oosterlinck, Zhengxuan Wu, and Christopher Potts (Sept. ",
        "suffix": "2023).",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 33,
        "bbox": [
            117.963,
            347.8850784,
            505.245463,
            358.0768182
        ],
        "prefix": "",
        "content": "2023). ''Rigorously Assessing Natural Language Explanations of Neurons''. In: arXiv eprints, ",
        "suffix": "arXiv:2309.10312,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 34,
        "bbox": [
            117.963,
            336.9163028,
            504.00268739999996,
            346.93867839999996
        ],
        "prefix": "",
        "content": "arXiv:2309.10312, arXiv:2309.10312. DOI: 10.48550/arXiv.2309.10312. arXiv: 2309.10312 ",
        "suffix": "[cs.CL].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 35,
        "bbox": [
            117.96300000000002,
            326.0073028,
            157.05665000000002,
            336.02967839999997
        ],
        "prefix": "",
        "content": "[cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 36,
        "bbox": [
            108.0,
            315.1580784,
            503.997210588,
            325.1206784
        ],
        "prefix": "",
        "content": "Lieberum, Tom, Matthew Rahtz, János Kramár, Neel Nanda, Geoffrey Irving, Rohin Shah, and ",
        "suffix": "Vladimir",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 37,
        "bbox": [
            117.604,
            304.24907840000003,
            505.65802960799977,
            314.2116784
        ],
        "prefix": "",
        "content": "Vladimir Mikulik (July 2023). ''Does Circuit Analysis Interpretability Scale? Evidence from Multi",
        "suffix": "ple",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 38,
        "bbox": [
            117.963,
            293.34007840000004,
            505.7395640184,
            303.53181820000003
        ],
        "prefix": "Multi",
        "content": "ple Choice Capabilities in Chinchilla''. In: arXiv eprints, arXiv:2307.09458, arXiv:2307.09458. ",
        "suffix": "DOI:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 39,
        "bbox": [
            118.212,
            282.3713028,
            396.14465,
            292.3936784
        ],
        "prefix": "",
        "content": "DOI: 10.48550/arXiv.2307.09458. arXiv: 2307.09458 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 40,
        "bbox": [
            108.0,
            271.5220784,
            505.74112386759975,
            281.4846784
        ],
        "prefix": "",
        "content": "McDougall, Callum, Arthur Conmy, Cody Rushing, Thomas McGrath, and Neel Nanda (Oct. 2023). ",
        "suffix": "''Copy",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 41,
        "bbox": [
            116.638,
            260.6130784,
            505.245463,
            270.8048182
        ],
        "prefix": "",
        "content": "''Copy Suppression: Comprehensively Understanding an Attention Head''. In: arXiv eprints, ",
        "suffix": "arXiv:2310.04625,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 42,
        "bbox": [
            117.963,
            249.6443028,
            504.00268739999996,
            259.6666784
        ],
        "prefix": "",
        "content": "arXiv:2310.04625, arXiv:2310.04625. DOI: 10.48550/arXiv.2310.04625. arXiv: 2310.04625 ",
        "suffix": "[cs.LG].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 43,
        "bbox": [
            117.96300000000002,
            238.7353028,
            157.05665000000002,
            248.7576784
        ],
        "prefix": "",
        "content": "[cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 44,
        "bbox": [
            108.0,
            227.8850784,
            505.73966932799965,
            237.8476784
        ],
        "prefix": "",
        "content": "McGrath, Thomas, Matthew Rahtz, Janos Kramar, Vladimir Mikulik, and Shane Legg (July 2023). ",
        "suffix": "''The",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 45,
        "bbox": [
            116.638,
            216.97607839999998,
            505.24550039999997,
            227.1678182
        ],
        "prefix": "",
        "content": "''The Hydra Effect: Emergent Selfrepair in Language Model Computations''. In: arXiv eprints, ",
        "suffix": "arXiv:2307.15771,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 46,
        "bbox": [
            117.963,
            206.0073028,
            504.2636874,
            216.0296784
        ],
        "prefix": "",
        "content": "arXiv:2307.15771, arXiv:2307.15771. DOI: 10.48550/arXiv.2307.15771. arXiv: 2307.15771 ",
        "suffix": "[cs.LG].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 47,
        "bbox": [
            117.96300000000002,
            195.0983028,
            157.05665000000002,
            205.1206784
        ],
        "prefix": "",
        "content": "[cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 48,
        "bbox": [
            108.0,
            184.2490784,
            503.9995816867997,
            194.2116784
        ],
        "prefix": "",
        "content": "Meng, Kevin, David Bau, Alex Andonian, and Yonatan Belinkov (Feb. 2022). ''Locating and Editing ",
        "suffix": "Factual",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 49,
        "bbox": [
            117.963,
            173.34007839999998,
            505.384994856,
            183.53181819999998
        ],
        "prefix": "",
        "content": "Factual Associations in GPT''. In: arXiv eprints, arXiv:2202.05262, arXiv:2202.05262. DOI: ",
        "suffix": "10.48550/arXiv.2202.05262.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 50,
        "bbox": [
            117.701,
            162.3713028,
            374.98265,
            172.3936784
        ],
        "prefix": "",
        "content": "10.48550/arXiv.2202.05262. arXiv: 2202.05262 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 51,
        "bbox": [
            108.0,
            151.5220784,
            503.9966526823999,
            161.4846784
        ],
        "prefix": "",
        "content": "Merullo, Jack, Carsten Eickhoff, and Ellie Pavlick (Oct. 2023). ''Circuit Component Reuse Across ",
        "suffix": "Tasks",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 52,
        "bbox": [
            117.654,
            140.61307839999998,
            505.7410322044,
            150.8048182
        ],
        "prefix": "",
        "content": "Tasks in Transformer Language Models''. In: arXiv eprints, arXiv:2310.08744, arXiv:2310.08744. ",
        "suffix": "DOI:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 53,
        "bbox": [
            118.212,
            129.6443028,
            396.14465,
            139.6666784
        ],
        "prefix": "",
        "content": "DOI: 10.48550/arXiv.2310.08744. arXiv: 2310.08744 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 54,
        "bbox": [
            108.0,
            118.79507840000001,
            503.99662973920005,
            128.98681820000002
        ],
        "prefix": "",
        "content": "Nanda, Neel (2023). Attribution Patching: Activation Patching At Industrial Scale. Blogpost. Section ",
        "suffix": "''How",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 55,
        "bbox": [
            116.638,
            107.8263028,
            506.1156807800001,
            117.8486784
        ],
        "prefix": "",
        "content": "''How to Think About Activation Patching''. URL: https://www.neelnanda.io/mechanistic",
        "suffix": "interpretability/attributionpatching.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 56,
        "bbox": [
            117.96300000000002,
            96.9163028,
            314.42865,
            106.9386784
        ],
        "prefix": "https://www.neelnanda.io/mechanistic",
        "content": "interpretability/attributionpatching. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 57,
        "bbox": [
            108.0,
            86.0670784,
            505.654392584,
            96.2588182
        ],
        "prefix": "",
        "content": "Nanda, Neel, SenR, János Kramár, and Rohin Shah (2023). Fact Finding: Attempting to Reverse",
        "suffix": "Engineer",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 58,
        "bbox": [
            117.654,
            75.0983028,
            507.66216127999996,
            85.3498182
        ],
        "prefix": "Reverse",
        "content": "Engineer Factual Recall on the Neuron Level (Post 1). Alignment Forum. URL: https://www. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 11,
        "index": 59,
        "bbox": [
            301.019,
            39.9600784,
            310.98159999999996,
            49.9226784
        ],
        "prefix": "",
        "content": "12 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 0,
        "bbox": [
            117.963,
            707.8253028,
            506.11585859999997,
            717.7879028
        ],
        "prefix": "",
        "content": "alignmentforum . org / posts / iGuwZTHWb6DFY3sKB / fact  finding  attempting  to ",
        "suffix": "reverseengineerfactualrecall.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 1,
        "bbox": [
            117.963,
            696.9163028,
            284.04965,
            706.9386784000001
        ],
        "prefix": "",
        "content": "reverseengineerfactualrecall. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 2,
        "bbox": [
            108.0,
            686.0670784,
            505.6491092939999,
            696.0296784000001
        ],
        "prefix": "",
        "content": "Soulos, Paul, Tom McCoy, Tal Linzen, and Paul Smolensky (Oct. 2019). ''Discovering the Compo",
        "suffix": "sitional",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 3,
        "bbox": [
            117.963,
            675.1580783999999,
            505.245463,
            685.3498182
        ],
        "prefix": "Compo",
        "content": "sitional Structure of Vector Representations with Role Learning Networks''. In: arXiv eprints, ",
        "suffix": "arXiv:1910.09113,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 4,
        "bbox": [
            117.963,
            664.1893028,
            504.00268739999996,
            674.2116784
        ],
        "prefix": "",
        "content": "arXiv:1910.09113, arXiv:1910.09113. DOI: 10.48550/arXiv.1910.09113. arXiv: 1910.09113 ",
        "suffix": "[cs.LG].",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 5,
        "bbox": [
            117.96300000000002,
            653.2803028,
            157.05665000000002,
            663.3026784
        ],
        "prefix": "",
        "content": "[cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 6,
        "bbox": [
            108.0,
            642.4310783999999,
            505.6514505049999,
            652.3936784
        ],
        "prefix": "",
        "content": "Stolfo, Alessandro, Yonatan Belinkov, and Mrinmaya Sachan (May 2023). ''A Mechanistic Interpre",
        "suffix": "tation",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                0.0033273652114633747,
                58,
                166
            ]
        ]
    },
    {
        "page": 12,
        "index": 7,
        "bbox": [
            117.963,
            631.5220783999999,
            504.000212714,
            641.7138182
        ],
        "prefix": "Interpre",
        "content": "tation of Arithmetic Reasoning in Language Models using Causal Mediation Analysis''. In: arXiv ",
        "suffix": "eprints,",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 8,
        "bbox": [
            117.963,
            620.5533028,
            505.387255644,
            630.8048182
        ],
        "prefix": "",
        "content": "eprints, arXiv:2305.15054, arXiv:2305.15054. DOI: 10.48550/arXiv.2305.15054. arXiv: ",
        "suffix": "2305.15054",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 9,
        "bbox": [
            117.963,
            609.6443028,
            211.83865,
            619.6666784
        ],
        "prefix": "",
        "content": "2305.15054 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": true,
        "matches": [
            [
                83,
                null,
                null,
                null
            ]
        ]
    },
    {
        "page": 12,
        "index": 10,
        "bbox": [
            108.0,
            598.7940784,
            505.6581354095998,
            608.7566784
        ],
        "prefix": "",
        "content": "Tigges, Curt, Oskar John Hollinsworth, Atticus Geiger, and Neel Nanda (Oct. 2023). ''Linear Rep",
        "suffix": "resentations",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 11,
        "bbox": [
            117.963,
            587.8850784,
            505.24685675999996,
            598.0768182
        ],
        "prefix": "Rep",
        "content": "resentations of Sentiment in Large Language Models''. In: arXiv eprints, arXiv:2310.15154, ",
        "suffix": "arXiv:2310.15154.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 12,
        "bbox": [
            117.963,
            576.9163028,
            473.65365,
            586.9386784000001
        ],
        "prefix": "",
        "content": "arXiv:2310.15154. DOI: 10.48550/arXiv.2310.15154. arXiv: 2310.15154 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 13,
        "bbox": [
            108.0,
            566.0670784,
            504.00306859679984,
            576.0296784000001
        ],
        "prefix": "",
        "content": "Todd, Eric, Millicent L. Li, Arnab Sen Sharma, Aaron Mueller, Byron C. Wallace, and David Bau ",
        "suffix": "(Oct.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 14,
        "bbox": [
            117.634,
            555.1580783999999,
            505.2413875648,
            565.3498182
        ],
        "prefix": "",
        "content": "(Oct. 2023). ''Function Vectors in Large Language Models''. In: arXiv eprints, arXiv:2310.15213, ",
        "suffix": "arXiv:2310.15213.",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 15,
        "bbox": [
            117.963,
            544.1893028,
            473.65365,
            554.2116784
        ],
        "prefix": "",
        "content": "arXiv:2310.15213. DOI: 10.48550/arXiv.2310.15213. arXiv: 2310.15213 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 16,
        "bbox": [
            108.0,
            533.3400783999999,
            504.0013948799999,
            543.3026784
        ],
        "prefix": "",
        "content": "Vig, Jesse, Sebastian Gehrmann, Yonatan Belinkov, Sharon Qian, Daniel Nevo, Simas Sakenis, Jason ",
        "suffix": "Huang,",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 17,
        "bbox": [
            117.963,
            522.4310783999999,
            504.00117719879967,
            532.3936784
        ],
        "prefix": "",
        "content": "Huang, Yaron Singer, and Stuart Shieber (Apr. 2020). ''Causal Mediation Analysis for Interpreting ",
        "suffix": "Neural",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 18,
        "bbox": [
            117.963,
            511.5220784,
            505.7403622372001,
            521.7138182
        ],
        "prefix": "",
        "content": "Neural NLP: The Case of Gender Bias''. In: arXiv eprints, arXiv:2004.12265, arXiv:2004.12265. ",
        "suffix": "DOI:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 19,
        "bbox": [
            118.212,
            500.5533028,
            396.14465,
            510.5756784
        ],
        "prefix": "",
        "content": "DOI: 10.48550/arXiv.2004.12265. arXiv: 2004.12265 [cs.CL]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 20,
        "bbox": [
            108.0,
            489.7040784,
            505.74504913199985,
            499.6666784
        ],
        "prefix": "",
        "content": "Wang, Kevin, Alexandre Variengien, Arthur Conmy, Buck Shlegeris, and Jacob Steinhardt (Nov. ",
        "suffix": "2022).",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 21,
        "bbox": [
            117.963,
            478.7950784,
            505.7395711979998,
            488.75767840000003
        ],
        "prefix": "",
        "content": "2022). ''Interpretability in the Wild: a Circuit for Indirect Object Identification in GPT2 small''. ",
        "suffix": "In:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 22,
        "bbox": [
            117.963,
            467.8253028,
            505.74297235,
            478.0768182
        ],
        "prefix": "",
        "content": "In: arXiv eprints, arXiv:2211.00593, arXiv:2211.00593. DOI: 10.48550/arXiv.2211.00593. ",
        "suffix": "arXiv:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 23,
        "bbox": [
            117.963,
            456.9163028,
            239.53464999999997,
            466.93867839999996
        ],
        "prefix": "",
        "content": "arXiv: 2211.00593 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 24,
        "bbox": [
            108.0,
            446.0670784,
            503.9972105879998,
            456.02967839999997
        ],
        "prefix": "",
        "content": "Zhang, Fred and Neel Nanda (Sept. 2023). ''Towards Best Practices of Activation Patching in ",
        "suffix": "Language",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 25,
        "bbox": [
            117.963,
            435.1580784,
            505.74518122000006,
            445.3498182
        ],
        "prefix": "",
        "content": "Language Models: Metrics and Methods''. In: arXiv eprints, arXiv:2309.16042, arXiv:2309.16042. ",
        "suffix": "DOI:",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 26,
        "bbox": [
            118.212,
            424.1893028,
            396.14465,
            434.2116784
        ],
        "prefix": "",
        "content": "DOI: 10.48550/arXiv.2309.16042. arXiv: 2309.16042 [cs.LG]. ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    },
    {
        "page": 12,
        "index": 27,
        "bbox": [
            301.019,
            39.96007840000002,
            310.98159999999996,
            49.922678400000024
        ],
        "prefix": "",
        "content": "13 ",
        "suffix": "",
        "equation hit": false,
        "assigned": false,
        "matches": []
    }
]